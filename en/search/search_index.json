{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ArkID \uff1a Enterprise IDAAS/IAM platform system # Rich plug -in\uff0cQuickly build an exclusive IDAAS/IAM platform Easily integrate all your applications Unified identity\uff0cCertification\uff0cPermissions management system Official website Official IDAAS Official document Features # Plug -in # Based on PLUG-IN plug -in and scalable underlying application architecture You can add new functions to the main program without changing the subject program Unified directory # Realize the centralized security storage of corporate organizational structure and massive personnel information Multi -dimensional establishment corresponding relationship\uff0cSecurity integration enterprise identity data source Realize on a platform to corporate personnel\u3001Organization\u3001Efficient and unified management of application information sign in # You can access all working systems through a set of user names and passwords Support such as OIDC\uff0cOueth2\uff0cCAS\uff0cSuml2 and other single -point login protocols Support various types of own or non -standard protocols through plug -in orientation Support the method of filling in the accounts through the browser plug -in Account life cycle # Realize the transfer of staff/The automatic circulation of the identity information of organizational structure changes in different application systems Effectively improve account configuration efficiency\uff0cShort management time of 90% Increase audit efficiency Multi -factor certification # Support mobile phone\uff0cMail\uff0chuman face\uff0cfingerprint\uff0cVarious authentication factors such as code scan code Support graphics verification code\uff0cVarious secondary certifications such as dynamic verification code Support WeChat\uff0cNail\uff0cCorporate WeChat and other third -party certifications Intelligent evoking the authentication rules of different combinations according to different business scenarios and security needs Concentrate # Support RBAC\uff0cABAC permissions management Support authority data is uniformly entered\uff0cStorage and allocation Unified authority verification\uff0cSupport third -party permission system integration Concentrated approval # Support custom approval action Support docking third -party approval system data synchronization # Support SCIM protocol\uff0cCross -system synchronization user and organizational architecture data Support to include users\uff0cOrganization\uff0cCertification\uff0cVarious data synchronization of permissions Support the synchronization of multiple three -party systems in various combinations\uff0cIf the HR system data is synchronized to the AD or LDAP service security audit # Real -time records of all request behaviors of users and administrators Support log reading to third -party data analysis or security analysis system Support the chart of the third -party data analysis system directly in the system Support the security analysis system to intervene in certification rules and certification results\uff0cIntelligent control of safety Client # Comes with web page Support all kinds of applets\uff0cMobile client The plugin can display the page without writing the front code Cloud Native # Support docker development Support docker\uff0cK8S containerization deployment Low code development framework # Expand OpenAPI\uff0cMake the front -end page drive from the back -end configuration Quickly build page prototypes Support custom CSS theme Plug -in and App Store # Support developer shared sale plug -in Support Saas application pseudo -localization Support agent agent and division","title":"Home"},{"location":"#arkid-enterprise-idaasiam-platform-system","text":"Rich plug -in\uff0cQuickly build an exclusive IDAAS/IAM platform Easily integrate all your applications Unified identity\uff0cCertification\uff0cPermissions management system Official website Official IDAAS Official document","title":"ArkID \uff1a Enterprise IDAAS/IAM platform system"},{"location":"#features","text":"","title":"Features"},{"location":"#plug-in","text":"Based on PLUG-IN plug -in and scalable underlying application architecture You can add new functions to the main program without changing the subject program","title":"Plug -in"},{"location":"#unified-directory","text":"Realize the centralized security storage of corporate organizational structure and massive personnel information Multi -dimensional establishment corresponding relationship\uff0cSecurity integration enterprise identity data source Realize on a platform to corporate personnel\u3001Organization\u3001Efficient and unified management of application information","title":"Unified directory"},{"location":"#sign-in","text":"You can access all working systems through a set of user names and passwords Support such as OIDC\uff0cOueth2\uff0cCAS\uff0cSuml2 and other single -point login protocols Support various types of own or non -standard protocols through plug -in orientation Support the method of filling in the accounts through the browser plug -in","title":"sign in"},{"location":"#account-life-cycle","text":"Realize the transfer of staff/The automatic circulation of the identity information of organizational structure changes in different application systems Effectively improve account configuration efficiency\uff0cShort management time of 90% Increase audit efficiency","title":"Account life cycle"},{"location":"#multi-factor-certification","text":"Support mobile phone\uff0cMail\uff0chuman face\uff0cfingerprint\uff0cVarious authentication factors such as code scan code Support graphics verification code\uff0cVarious secondary certifications such as dynamic verification code Support WeChat\uff0cNail\uff0cCorporate WeChat and other third -party certifications Intelligent evoking the authentication rules of different combinations according to different business scenarios and security needs","title":"Multi -factor certification"},{"location":"#concentrate","text":"Support RBAC\uff0cABAC permissions management Support authority data is uniformly entered\uff0cStorage and allocation Unified authority verification\uff0cSupport third -party permission system integration","title":"Concentrate"},{"location":"#concentrated-approval","text":"Support custom approval action Support docking third -party approval system","title":"Concentrated approval"},{"location":"#data-synchronization","text":"Support SCIM protocol\uff0cCross -system synchronization user and organizational architecture data Support to include users\uff0cOrganization\uff0cCertification\uff0cVarious data synchronization of permissions Support the synchronization of multiple three -party systems in various combinations\uff0cIf the HR system data is synchronized to the AD or LDAP service","title":"data synchronization"},{"location":"#security-audit","text":"Real -time records of all request behaviors of users and administrators Support log reading to third -party data analysis or security analysis system Support the chart of the third -party data analysis system directly in the system Support the security analysis system to intervene in certification rules and certification results\uff0cIntelligent control of safety","title":"security audit"},{"location":"#client","text":"Comes with web page Support all kinds of applets\uff0cMobile client The plugin can display the page without writing the front code","title":"Client"},{"location":"#cloud-native","text":"Support docker development Support docker\uff0cK8S containerization deployment","title":"Cloud Native"},{"location":"#low-code-development-framework","text":"Expand OpenAPI\uff0cMake the front -end page drive from the back -end configuration Quickly build page prototypes Support custom CSS theme","title":"Low code development framework"},{"location":"#plug-in-and-app-store","text":"Support developer shared sale plug -in Support Saas application pseudo -localization Support agent agent and division","title":"Plug -in and App Store"},{"location":"%20%20%20Start%20Quickly/","text":"Start quickly # Quick Start # After the ARKID warehouse clone to the local area Start Clery first\uff08Need a redis service\uff0cPort 6379\uff09 celery -A arkid.core.tasks.celery worker -l debug celeryStart after startup Django server python manage.py runserver 0.0.0.0:8000 Start directly through the source code\uff0cBecause there is no environment such as nginx\uff0cSome functions cannot work normally\u3002 Suggest Privatization Come to experience the product\u3002 Official IDAAS # If you want to quickly understand the basic use of the system\uff0cAccessible https://idaas.arkid.cc After registration\uff0cCreate your own tenant\uff0cYou can use most of the system's function\u3002 If you want to experience Super administrator \uff0c Installation and configuration plugin .etc\uff0cRecommended Use Privatization The way Privatization # Deploy through ARKOS (recommendation) Deploy through docker Deploy through K8S","title":"Start quickly"},{"location":"%20%20%20Start%20Quickly/#start-quickly","text":"","title":"Start quickly"},{"location":"%20%20%20Start%20Quickly/#quick-start","text":"After the ARKID warehouse clone to the local area Start Clery first\uff08Need a redis service\uff0cPort 6379\uff09 celery -A arkid.core.tasks.celery worker -l debug celeryStart after startup Django server python manage.py runserver 0.0.0.0:8000 Start directly through the source code\uff0cBecause there is no environment such as nginx\uff0cSome functions cannot work normally\u3002 Suggest Privatization Come to experience the product\u3002","title":"Quick Start"},{"location":"%20%20%20Start%20Quickly/#official-idaas","text":"If you want to quickly understand the basic use of the system\uff0cAccessible https://idaas.arkid.cc After registration\uff0cCreate your own tenant\uff0cYou can use most of the system's function\u3002 If you want to experience Super administrator \uff0c Installation and configuration plugin .etc\uff0cRecommended Use Privatization The way","title":"Official IDAAS"},{"location":"%20%20%20Start%20Quickly/#privatization","text":"Deploy through ARKOS (recommendation) Deploy through docker Deploy through K8S","title":"Privatization"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/","text":"Deploy through ARKOS # ArkOSIt is a command line tool used to install K8S and Arkid\u3002 Some applications will be pre -installed when deploying\uff1a ArkID kuboard kubeapps Environmental preparation # Prepare operation and maintenance operation machine\uff1a # Need to prepare a machine to run docker\uff0cUse a container to deploy ARKID One CentOS7+Or ubuntu18+\uff0cInstall docker The following docker environment is also fine\uff1a macInstall docker desktop pcInstall docker desktop pc WSL 2.0 Install docker in the subsystem ## linuxThe system quickly installs docker curl -sSL https://get.daocloud.io/docker | sh Prepare to deploy ARKID machines # one\u3001Single machine deployment # Documents that need to be prepared - hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = xxxx Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos one two\u3001Multiple machine deployment (such as 5,6) # Documents that need to be prepared hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## In [Arkos-nodes] Add or delete the machine\uff0cRemember to increase the serial number ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ arkos-nodes ] arkos-node01 hostname = arkos-node01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 arkos-node02 hostname = arkos-node02 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = xxxx Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos two three\u3001Production high available deployment (10+Taiwan machine) # Two machines are used to deploy haproxy Three machines as K8S master Other machines as K8S node Documents that need to be prepared - hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## In [Arkos-nodes] You can add or delete the machine\uff0cRemember to increase the serial number ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-has ] arkos-halb01 hostname = arkos-halb01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-halb02 hostname = arkos-halb02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-master02 hostname = arkos-master02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-master03 hostname = arkos-master03 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ arkos-nodes ] arkos-node01 hostname = arkos-node01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-node02 hostname = arkos-node02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = root ## Need to prepare two VIPs\uff0cha_VIP is used to make a load balancing for the APISERVER of Masters\uff1blb_VIP is used to make a load balancing for the Ingress in the cluster\uff0cIt is also an IP that needs external DNS parsing\u3002 arkos_ha_vip = x.x.x.x arkos_lb_vip = x.x.x.x Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos three Visit initial ARKID # Browser open URL\uff1a http://{arches-master01-ip}:32580 Open Arkid for the first time\uff0cNeed to enter access URL\uff0cThis url can only enter this time\uff0cNeed to be cautious\uff01\uff01\uff01 If the production environment requires domain name access\uff0cPlease configure everything before filling this url\uff01\uff01\uff01 Initialized username\uff1aadmin/admin Visit Kuboard # Browser open URL\uff1a http://{arches-master01-ip}:32567 tokenObtain\uff1a ## exist arches-execute on the master01 machine ## copy to kuboard You can access it on the login page echo $(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep ^kuboard-user | awk '{print $1}') -o go-template='{{.data.token}}' | base64 -d) Visit Kubeapps # Browser open URL\uff1a http://{arches-master01-ip}:32581 tokenObtain\uff1a ## exist arches-execute on the master01 machine ## copy to kubeapps You can access it on the login page echo $(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep ^kuboard-user | awk '{print $1}') -o go-template='{{.data.token}}' | base64 -d) Update component version # arkid View the new version number in github https://github.com/longguikeji/arkid-charts/releases Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : arkid namespace : kube-system spec : chart : arkid version : 3.0.13 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : arkid kubeapps View the new version number in Artifacthub https://artifacthub.io/packages/helm/bitnami/kubeapps Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : kubeapps namespace : kube-system spec : chart : kubeapps version : 10.3.1 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : kubeapps","title":"Deploy through ARKOS"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#deploy-through-arkos","text":"ArkOSIt is a command line tool used to install K8S and Arkid\u3002 Some applications will be pre -installed when deploying\uff1a ArkID kuboard kubeapps","title":"Deploy through ARKOS"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#environmental-preparation","text":"","title":"Environmental preparation"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#prepare-operation-and-maintenance-operation-machine","text":"Need to prepare a machine to run docker\uff0cUse a container to deploy ARKID One CentOS7+Or ubuntu18+\uff0cInstall docker The following docker environment is also fine\uff1a macInstall docker desktop pcInstall docker desktop pc WSL 2.0 Install docker in the subsystem ## linuxThe system quickly installs docker curl -sSL https://get.daocloud.io/docker | sh","title":"Prepare operation and maintenance operation machine\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#prepare-to-deploy-arkid-machines","text":"","title":"Prepare to deploy ARKID machines"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#onesingle-machine-deployment","text":"Documents that need to be prepared - hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = xxxx Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos one","title":"one\u3001Single machine deployment"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#twomultiple-machine-deployment-such-as-56","text":"Documents that need to be prepared hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## In [Arkos-nodes] Add or delete the machine\uff0cRemember to increase the serial number ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ arkos-nodes ] arkos-node01 hostname = arkos-node01 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 arkos-node02 hostname = arkos-node02 ansible_ssh_host = x.x.x.x ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = xxxx Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos two","title":"two\u3001Multiple machine deployment (such as 5,6)"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#threeproduction-high-available-deployment-10taiwan-machine","text":"Two machines are used to deploy haproxy Three machines as K8S master Other machines as K8S node Documents that need to be prepared - hosts ## hosts file format ## Just modify the IP address and port\uff0cThere are also usernames and passwords ## In [Arkos-nodes] You can add or delete the machine\uff0cRemember to increase the serial number ## Put the hosts file into a directory in the operation and maintenance operation machine [ arkos-has ] arkos-halb01 hostname = arkos-halb01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-halb02 hostname = arkos-halb02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ arkos-masters ] arkos-master01 hostname = arkos-master01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-master02 hostname = arkos-master02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-master03 hostname = arkos-master03 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ arkos-nodes ] arkos-node01 hostname = arkos-node01 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 arkos-node02 hostname = arkos-node02 ansible_ssh_host = xx.xx.xx.xx ansible_ssh_port = 22 [ all:vars ] ansible_connection = ssh ansible_user = root ansible_password = root ## Need to prepare two VIPs\uff0cha_VIP is used to make a load balancing for the APISERVER of Masters\uff1blb_VIP is used to make a load balancing for the Ingress in the cluster\uff0cIt is also an IP that needs external DNS parsing\u3002 arkos_ha_vip = x.x.x.x arkos_lb_vip = x.x.x.x Operating deployment command\uff1a ## Execute the machine in operation and maintenance operation ## Enter the directory where the hosts file is located\uff0cExecute the command to install ARKID docker run --rm --mount type = bind,source = \" $( pwd ) \" /hosts,target = /etc/ansible/hosts harbor.longguikeji.com/ark-releases/arkos three","title":"three\u3001Production high available deployment (10+Taiwan machine)"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#visit-initial-arkid","text":"Browser open URL\uff1a http://{arches-master01-ip}:32580 Open Arkid for the first time\uff0cNeed to enter access URL\uff0cThis url can only enter this time\uff0cNeed to be cautious\uff01\uff01\uff01 If the production environment requires domain name access\uff0cPlease configure everything before filling this url\uff01\uff01\uff01 Initialized username\uff1aadmin/admin","title":"Visit initial ARKID"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#visit-kuboard","text":"Browser open URL\uff1a http://{arches-master01-ip}:32567 tokenObtain\uff1a ## exist arches-execute on the master01 machine ## copy to kuboard You can access it on the login page echo $(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep ^kuboard-user | awk '{print $1}') -o go-template='{{.data.token}}' | base64 -d)","title":"Visit Kuboard"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#visit-kubeapps","text":"Browser open URL\uff1a http://{arches-master01-ip}:32581 tokenObtain\uff1a ## exist arches-execute on the master01 machine ## copy to kubeapps You can access it on the login page echo $(kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep ^kuboard-user | awk '{print $1}') -o go-template='{{.data.token}}' | base64 -d)","title":"Visit Kubeapps"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughArkos/#update-component-version","text":"arkid View the new version number in github https://github.com/longguikeji/arkid-charts/releases Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : arkid namespace : kube-system spec : chart : arkid version : 3.0.13 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : arkid kubeapps View the new version number in Artifacthub https://artifacthub.io/packages/helm/bitnami/kubeapps Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : kubeapps namespace : kube-system spec : chart : kubeapps version : 10.3.1 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : kubeapps","title":"Update component version"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughDocker/","text":"docker-composedeploy # Configure Alibaba Cloud DNS domain name analysis\uff1a # arkid.xxx.xxx ==> docker-composemachine ip Deploy Arkid # git clone --branch main --depth 1 https://github.com/longguikeji/arkid-charts.git ##If you can't access github\uff0cYou can use a Gitee warehouse\uff1ahttps://gitee.com/longguikeji/arkid-charts.git cd arkid-charts/docker-compose ## 1\u3001Revise traventual.in YML 'certificatesResolvers: ali: acme: email:' Mail address for you ## 2\u3001Revise .env middle ALICLOUD_ACCESS_KEY and ALICLOUD_SECRET_KEY ## Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff0cUsed to automatically generate certificates\uff09 ## 3\u3001Revise .env middle MY_HOSTNAME\uff0cSet the domain name configured in Alibaba Cloud DNS ## Later sudo docker-compose up -d ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01 Update docker-compose deployment version # ## Enter docker-compose Table of contents cd arkid-charts/docker-compose ## stop docker-compose down ## Pull up update git warehouse git pull ## Execute the startup command again\uff0cWill draw a new mirror update version docker-compose up -d","title":"docker-composedeploy"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughDocker/#docker-composedeploy","text":"","title":"docker-composedeploy"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughDocker/#configure-alibaba-cloud-dns-domain-name-analysis","text":"arkid.xxx.xxx ==> docker-composemachine ip","title":"Configure Alibaba Cloud DNS domain name analysis\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughDocker/#deploy-arkid","text":"git clone --branch main --depth 1 https://github.com/longguikeji/arkid-charts.git ##If you can't access github\uff0cYou can use a Gitee warehouse\uff1ahttps://gitee.com/longguikeji/arkid-charts.git cd arkid-charts/docker-compose ## 1\u3001Revise traventual.in YML 'certificatesResolvers: ali: acme: email:' Mail address for you ## 2\u3001Revise .env middle ALICLOUD_ACCESS_KEY and ALICLOUD_SECRET_KEY ## Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff0cUsed to automatically generate certificates\uff09 ## 3\u3001Revise .env middle MY_HOSTNAME\uff0cSet the domain name configured in Alibaba Cloud DNS ## Later sudo docker-compose up -d ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01","title":"Deploy Arkid"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughDocker/#update-docker-compose-deployment-version","text":"## Enter docker-compose Table of contents cd arkid-charts/docker-compose ## stop docker-compose down ## Pull up update git warehouse git pull ## Execute the startup command again\uff0cWill draw a new mirror update version docker-compose up -d","title":"Update docker-compose deployment version"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/","text":"k3sdeploy # k3sOnly recommend single nodes to use\uff0cThe own component is enough storage\uff1alocal-storage\uff08Can only be used by a single machine\uff09 Gateway\uff1atraventual\uff08 = ingress + cert-manager + alidns webhook\uff09 helm-controller\uff1aManage the helm package k3sInstall\uff1a # curl -sfL https://rancher-mirror.oss-cn-beijing.aliyuncs.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR = cn sh - Configure Alibaba Cloud DNS domain name analysis\uff1a # arkid.xxx.xxx ==> k3s ip *.arkid.xxx.xxx ==> k3s ip Configure TrayFik # cert-managerDomain name authentication\uff0cThe domain name of the signing certificate must be you\uff0cIn order to issue a TLS certificate normally\u3002 Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff09 ## exist be-system Create secret in China kubectl -n kube-system create secret alidns-secret \\ --from-literal = ALICLOUD_ACCESS_KEY = youraccesskey \\ --from-literal = ALICLOUD_SECRET_KEY = youraccesssecret ## k3sThe configuration of its own component is in /was/lib/rancher/Stick/server/manifests vi /var/lib/rancher/k3s/server/manifests/traefik-config.yaml ## emailThe address is changed to your own\uff0cAfter saving and exiting, it will be updated automatically apiVersion: helm.cattle.io/v1 kind: HelmChartConfig metadata: name: traefik namespace: kube-system spec: valuesContent: | - persistence: enabled: true additionalArguments: - \"--certificatesResolvers.ali.acme.dnsChallenge.provider=alidns\" - \"--certificatesResolvers.ali.acme.email=youremail@xxxx\" - \"--certificatesResolvers.ali.acme.storage=/data/acme.json\" envFrom: - secretRef: name: alidns-secret Deploy Arkid # Recommended helm with K3S comes with-Controller to deploy Chart ## Create naming space kubectl create ns arkid ## Editing file arkid.yaml apiVersion: helm.cattle.io/v1 kind: HelmChart metadata: name: arkid namespace: arkid spec: chart: arkid version: 3 .2.14 repo: https://harbor.longguikeji.com/chartrepo/public targetNamespace: arkid valuesContent: | - ingress: enabled: true host: name: arkid.xxxx.xxx ## Fill in the correct domain name annotations: kubernetes.io/ingress.class: traefik traefik.ingress.kubernetes.io/router.entrypoints: websecure traefik.ingress.kubernetes.io/router.tls.certresolver: ali persistence: init: true accessMode: ReadWriteMany size: 8Gi mysql: auth: rootPassword: root database: arkid username: arkid password: arkid ## Install arkid kubectl apply -f arkid.yaml ## Check kubectl -n arkid get pods ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01","title":"DeployThroughK3S"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/#k3sdeploy","text":"k3sOnly recommend single nodes to use\uff0cThe own component is enough storage\uff1alocal-storage\uff08Can only be used by a single machine\uff09 Gateway\uff1atraventual\uff08 = ingress + cert-manager + alidns webhook\uff09 helm-controller\uff1aManage the helm package","title":"k3sdeploy"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/#k3sinstall","text":"curl -sfL https://rancher-mirror.oss-cn-beijing.aliyuncs.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR = cn sh -","title":"k3sInstall\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/#configure-alibaba-cloud-dns-domain-name-analysis","text":"arkid.xxx.xxx ==> k3s ip *.arkid.xxx.xxx ==> k3s ip","title":"Configure Alibaba Cloud DNS domain name analysis\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/#configure-trayfik","text":"cert-managerDomain name authentication\uff0cThe domain name of the signing certificate must be you\uff0cIn order to issue a TLS certificate normally\u3002 Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff09 ## exist be-system Create secret in China kubectl -n kube-system create secret alidns-secret \\ --from-literal = ALICLOUD_ACCESS_KEY = youraccesskey \\ --from-literal = ALICLOUD_SECRET_KEY = youraccesssecret ## k3sThe configuration of its own component is in /was/lib/rancher/Stick/server/manifests vi /var/lib/rancher/k3s/server/manifests/traefik-config.yaml ## emailThe address is changed to your own\uff0cAfter saving and exiting, it will be updated automatically apiVersion: helm.cattle.io/v1 kind: HelmChartConfig metadata: name: traefik namespace: kube-system spec: valuesContent: | - persistence: enabled: true additionalArguments: - \"--certificatesResolvers.ali.acme.dnsChallenge.provider=alidns\" - \"--certificatesResolvers.ali.acme.email=youremail@xxxx\" - \"--certificatesResolvers.ali.acme.storage=/data/acme.json\" envFrom: - secretRef: name: alidns-secret","title":"Configure TrayFik"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK3S/#deploy-arkid","text":"Recommended helm with K3S comes with-Controller to deploy Chart ## Create naming space kubectl create ns arkid ## Editing file arkid.yaml apiVersion: helm.cattle.io/v1 kind: HelmChart metadata: name: arkid namespace: arkid spec: chart: arkid version: 3 .2.14 repo: https://harbor.longguikeji.com/chartrepo/public targetNamespace: arkid valuesContent: | - ingress: enabled: true host: name: arkid.xxxx.xxx ## Fill in the correct domain name annotations: kubernetes.io/ingress.class: traefik traefik.ingress.kubernetes.io/router.entrypoints: websecure traefik.ingress.kubernetes.io/router.tls.certresolver: ali persistence: init: true accessMode: ReadWriteMany size: 8Gi mysql: auth: rootPassword: root database: arkid username: arkid password: arkid ## Install arkid kubectl apply -f arkid.yaml ## Check kubectl -n arkid get pods ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01","title":"Deploy Arkid"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/","text":"k8sdeploy # Pure cluster\uff0cThe manually installed K8S cluster generally does not have additional components At least three machines 0\u3001Configure Alibaba Cloud DNS domain name analysis\uff1a # arkid.xxx.xxx ==> k8s master ip or Load balancing ip *.arkid.xxx.xxx ==> k8s master ip or Load balancing ip 1\u3001storage\uff1arecommend Rook-Ceph or longhorn # The choice of storage must be very cautious\uff0cRook-Ceph and longhorn Both are relatively stable\uff0cThe function is also very powerful\uff0cBut the deployment is more complicated\uff0cThe requirements are also relatively high Please install the document operation of the official website\u3002Longhorn is best ubuntu+ext4; Rook-Ceph also recommends Ubuntu\uff0cThe best at Yunyun is the best Ubuntu\u3002 2\u3001Gateway\uff1aRecommend Ingress-nginx or traefik # If TrapeiK is installed as a gateway\uff0cThere is no need to deploy CERT alone-manager and alidns webhook https://kubernetes.github.io/ingress-nginx/deploy/ The following documents are in Ingress-Nginx as an example\uff0cTrayFik documentation and K3S deployment In the same way kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml 3\u3001Certificate management\uff1acert-manager + alidns webhook # https://artifacthub.io/packages/helm/cert-manager/cert-manager kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.10.1/cert-manager.crds.yaml helm repo add jetstack https://charts.jetstack.io kubectl create namespace cert-manager helm install cert-manager --namespace cert-manager --version v1.10.1 jetstack/cert-manager https://github.com/pragkent/alidns-webhook # 1\u3001Install alidns-webhook curl -O https://raw.githubusercontent.com/pragkent/alidns-webhook/master/deploy/bundle.yaml ## Modify Bundle.in yaml acme.yourcompany.com change into acme.xxxx.com\uff08The domain name of its own company\uff09\uff01 ## The clusterissuer behind this group name is the same kubectl apply -f bundle.yaml # 2\u3001 Create secret containing Alidns credentials ## Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff09 ## exist cert-manager Create secret in China kubectl -n cert-manager create secret alidns-secret \\ --from-literal = access-key = youraccesskey \\ --from-literal = secret-key = youraccesssecret # 3\u3001create ClusterIssuer ## groupNameAlso changed to the same as above\uff0cemail writes yourself\uff0cNo need to change other apiVersion: cert-manager.io/v1 kind: ClusterIssuer metadata: name: letsencrypt-prod spec: acme: email: xxxx@xxx.com server: https://acme-v02.api.letsencrypt.org/directory privateKeySecretRef: name: letsencrypt-prod solvers: - dns01: webhook: groupName: acme.xxxxx.com solverName: alidns config: region: \"\" accessKeySecretRef: name: alidns-secret key: access-key secretKeySecretRef: name: alidns-secret key: secret-key 4\u3001Pack management\uff1aRecommended helm-controller # CHARTCRD = ` kubectl get crd | grep helmcharts.helm.cattle.io ` if [ -z \" $CHARTCRD \" ] ; then kubectl create -f https://gitee.com/longguikeji/arkid-charts/raw/main/helmchartscrd.yaml fi 5\u3001Deploy Arkid # ## Create naming space kubectl create ns arkid ## Editing file arkid.yaml apiVersion: helm.cattle.io/v1 kind: HelmChart metadata: name: arkid namespace: arkid spec: chart: arkid version: 3 .2.14 repo: https://harbor.longguikeji.com/chartrepo/public targetNamespace: arkid valuesContent: | - ingress: enabled: true tls: true host: name: arkid.xxxx.xxx ## Fill in the correct domain name annotations: kubernetes.io/ingress.class: \"nginx\" cert-manager.io/clusterissuer: \"letsencrypt-prod\" persistence: init: true accessMode: ReadWriteMany size: 8Gi mysql: auth: rootPassword: root database: arkid username: arkid password: arkid ## Install arkid kubectl apply -f arkid.yaml ## Check kubectl -n arkid get pods ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01 upgrade arkid chart version # kubectl -n arkid edit helmcharts arkid ## Modified version number\uff0cSave exit, Will update automatically spec: chart: arkid version: 3 .2.14 More configuration # https://github.com/longguikeji/arkid-charts.git Public configuration # NAME Description DEFAULT VALUE imagePullSecrets SECRET name of pulling the image nil persistence.init Whether to create a new PVC\uff0cIf it is set to false, the PVC of Claimname must exist true persistence.storageClass storageclassname nil persistence.accessMode pvcAccess mode ReadWriteOnce persistence.size By default 8GB 8GI arkidConfiguration # NAME DESCRIPTION DEFAULT VALUE fe.image arkidFront -end mirror harbor.longguikeji.com/ark-releases/arkid-fe-In view of view:2.5.0 fe.pullPolicy IfNotPresent, Always IfNotPresent fe.resources.requests arkidRequests at the front end {\"cpu\": \"800m\",\"memory\": \"1024Mi\"} fe.resources.limits arkidLimits at the front end {} be.image arkidBack -end mirror harbor.longguikeji.com/ark-releases/arkid:2.5.0 be.pullPolicy be.resources.requests arkidRequests at the back end {\"cpu\": \"800m\",\"memory\": \"1024Mi\"} be.resources.limits arkidLimits at the back end {} mysqlDatabase configuration # NAME Description DEFAULT VALUE mysql.enabled trueWill deploy a MySQL\uff0cIf it is false, you need to set up the configuration under ExternalDataBase true externalDatabase.host External MySQL database host \"\" externalDatabase.port Port of the external MySQL database 3306 externalDatabase.database The name of the outer MySQL database \"\" externalDatabase.user User of external MySQL database \"\" externalDatabase.password Password of external MySQL database \"\" redisConfiguration # NaME Description DEFAULT VALUE redis.enabled trueWill deploy a redis\uff0cIf it is false, you need to set the configuration under Externalredis true externalRedis.host Host of external redis \"\" externalRedis.port External redis port 6379 externalRedis.db DB of external redis 0 ingressConfiguration # name DEscription default value ingress.enabled Add Ingress record false ingress.cert Use Cert-Manager generating certificate false ingress.annotations ingressAnnotation {\"kubernetes.io/ingress.class\": \"nginx\",\"certmanager.k8s.io/cluster-issuer\": \"Letsencrypt-prod\"} ingress.host.name ingressRecorded domain name \"\" ingress.tls if there is not cert-manager\uff0cTLS is True, and HELM will generate a self -signed certificate to the Secret false","title":"DeployThroughK8S"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#k8sdeploy","text":"Pure cluster\uff0cThe manually installed K8S cluster generally does not have additional components At least three machines","title":"k8sdeploy"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#0configure-alibaba-cloud-dns-domain-name-analysis","text":"arkid.xxx.xxx ==> k8s master ip or Load balancing ip *.arkid.xxx.xxx ==> k8s master ip or Load balancing ip","title":"0\u3001Configure Alibaba Cloud DNS domain name analysis\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#1storagerecommend-rook-ceph-or-longhorn","text":"The choice of storage must be very cautious\uff0cRook-Ceph and longhorn Both are relatively stable\uff0cThe function is also very powerful\uff0cBut the deployment is more complicated\uff0cThe requirements are also relatively high Please install the document operation of the official website\u3002Longhorn is best ubuntu+ext4; Rook-Ceph also recommends Ubuntu\uff0cThe best at Yunyun is the best Ubuntu\u3002","title":"1\u3001storage\uff1arecommend Rook-Ceph or longhorn"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#2gatewayrecommend-ingress-nginx-or-traefik","text":"If TrapeiK is installed as a gateway\uff0cThere is no need to deploy CERT alone-manager and alidns webhook https://kubernetes.github.io/ingress-nginx/deploy/ The following documents are in Ingress-Nginx as an example\uff0cTrayFik documentation and K3S deployment In the same way kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml","title":"2\u3001Gateway\uff1aRecommend Ingress-nginx or traefik"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#3certificate-managementcert-manager-alidns-webhook","text":"https://artifacthub.io/packages/helm/cert-manager/cert-manager kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.10.1/cert-manager.crds.yaml helm repo add jetstack https://charts.jetstack.io kubectl create namespace cert-manager helm install cert-manager --namespace cert-manager --version v1.10.1 jetstack/cert-manager https://github.com/pragkent/alidns-webhook # 1\u3001Install alidns-webhook curl -O https://raw.githubusercontent.com/pragkent/alidns-webhook/master/deploy/bundle.yaml ## Modify Bundle.in yaml acme.yourcompany.com change into acme.xxxx.com\uff08The domain name of its own company\uff09\uff01 ## The clusterissuer behind this group name is the same kubectl apply -f bundle.yaml # 2\u3001 Create secret containing Alidns credentials ## Generate ACCESSKEY and Accesssecret under the Alibaba Cloud account\uff08Given the domain name -related permissions\uff09 ## exist cert-manager Create secret in China kubectl -n cert-manager create secret alidns-secret \\ --from-literal = access-key = youraccesskey \\ --from-literal = secret-key = youraccesssecret # 3\u3001create ClusterIssuer ## groupNameAlso changed to the same as above\uff0cemail writes yourself\uff0cNo need to change other apiVersion: cert-manager.io/v1 kind: ClusterIssuer metadata: name: letsencrypt-prod spec: acme: email: xxxx@xxx.com server: https://acme-v02.api.letsencrypt.org/directory privateKeySecretRef: name: letsencrypt-prod solvers: - dns01: webhook: groupName: acme.xxxxx.com solverName: alidns config: region: \"\" accessKeySecretRef: name: alidns-secret key: access-key secretKeySecretRef: name: alidns-secret key: secret-key","title":"3\u3001Certificate management\uff1acert-manager + alidns webhook"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#4pack-managementrecommended-helm-controller","text":"CHARTCRD = ` kubectl get crd | grep helmcharts.helm.cattle.io ` if [ -z \" $CHARTCRD \" ] ; then kubectl create -f https://gitee.com/longguikeji/arkid-charts/raw/main/helmchartscrd.yaml fi","title":"4\u3001Pack management\uff1aRecommended helm-controller"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#5deploy-arkid","text":"## Create naming space kubectl create ns arkid ## Editing file arkid.yaml apiVersion: helm.cattle.io/v1 kind: HelmChart metadata: name: arkid namespace: arkid spec: chart: arkid version: 3 .2.14 repo: https://harbor.longguikeji.com/chartrepo/public targetNamespace: arkid valuesContent: | - ingress: enabled: true tls: true host: name: arkid.xxxx.xxx ## Fill in the correct domain name annotations: kubernetes.io/ingress.class: \"nginx\" cert-manager.io/clusterissuer: \"letsencrypt-prod\" persistence: init: true accessMode: ReadWriteMany size: 8Gi mysql: auth: rootPassword: root database: arkid username: arkid password: arkid ## Install arkid kubectl apply -f arkid.yaml ## Check kubectl -n arkid get pods ## Wait a moment\uff0cBrowser access\uff1a https://arkid.xxx.xxx ## Notice\uff1aOpen Arkid for the first time\uff0cThere will be an input box for confirmation address\uff0cAfter the confirmation is confirmed, you can\u2019t change it anymore\uff01","title":"5\u3001Deploy Arkid"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#upgrade-arkid-chart-version","text":"kubectl -n arkid edit helmcharts arkid ## Modified version number\uff0cSave exit, Will update automatically spec: chart: arkid version: 3 .2.14","title":"upgrade arkid chart version"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#more-configuration","text":"https://github.com/longguikeji/arkid-charts.git","title":"More configuration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#public-configuration","text":"NAME Description DEFAULT VALUE imagePullSecrets SECRET name of pulling the image nil persistence.init Whether to create a new PVC\uff0cIf it is set to false, the PVC of Claimname must exist true persistence.storageClass storageclassname nil persistence.accessMode pvcAccess mode ReadWriteOnce persistence.size By default 8GB 8GI","title":"Public configuration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#arkidconfiguration","text":"NAME DESCRIPTION DEFAULT VALUE fe.image arkidFront -end mirror harbor.longguikeji.com/ark-releases/arkid-fe-In view of view:2.5.0 fe.pullPolicy IfNotPresent, Always IfNotPresent fe.resources.requests arkidRequests at the front end {\"cpu\": \"800m\",\"memory\": \"1024Mi\"} fe.resources.limits arkidLimits at the front end {} be.image arkidBack -end mirror harbor.longguikeji.com/ark-releases/arkid:2.5.0 be.pullPolicy be.resources.requests arkidRequests at the back end {\"cpu\": \"800m\",\"memory\": \"1024Mi\"} be.resources.limits arkidLimits at the back end {}","title":"arkidConfiguration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#mysqldatabase-configuration","text":"NAME Description DEFAULT VALUE mysql.enabled trueWill deploy a MySQL\uff0cIf it is false, you need to set up the configuration under ExternalDataBase true externalDatabase.host External MySQL database host \"\" externalDatabase.port Port of the external MySQL database 3306 externalDatabase.database The name of the outer MySQL database \"\" externalDatabase.user User of external MySQL database \"\" externalDatabase.password Password of external MySQL database \"\"","title":"mysqlDatabase configuration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#redisconfiguration","text":"NaME Description DEFAULT VALUE redis.enabled trueWill deploy a redis\uff0cIf it is false, you need to set the configuration under Externalredis true externalRedis.host Host of external redis \"\" externalRedis.port External redis port 6379 externalRedis.db DB of external redis 0","title":"redisConfiguration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/DeployThroughK8S/#ingressconfiguration","text":"name DEscription default value ingress.enabled Add Ingress record false ingress.cert Use Cert-Manager generating certificate false ingress.annotations ingressAnnotation {\"kubernetes.io/ingress.class\": \"nginx\",\"certmanager.k8s.io/cluster-issuer\": \"Letsencrypt-prod\"} ingress.host.name ingressRecorded domain name \"\" ingress.tls if there is not cert-manager\uff0cTLS is True, and HELM will generate a self -signed certificate to the Secret false","title":"ingressConfiguration"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/","text":"download Open https://github.com/longguikeji/arkid/releases/tag/2.6.2 \uff08Manual check the latest version\uff0cClone ' s latest version tag\uff09 download arkid.zip Decompress\uff0cGet the following file be262.tar.gz desktop266.tar.gz fe262.tar.gz portal.conf settings_local.py supervisord.conf Native Arkid deployment.md Two machines A back end\uff1a # 1\u3001Software Installation # python 3.8 mysql 5.7 redis 5 gettext xmlsec1 supervisor tree freetds-dev freetds-bin python-dev python-pip 2\u3001Install the ARKID back end # # rear end Penetrately.tar.gz Decompress\uff0cPut /was/arkid/ # Revise settings_local.py\uff0cFill in the correct mysql information\uff0cMySQL needs to create a new empty database DEBUG = False # mysql database MYSQLHOST = \"localhost\" MYSQLPORT = \"3306\" MYSQLDATABASE = \"arkid\" MYSQLUSER = \"root\" MYSQLPASSWORD = \"root\" # Redis cache, Default port 6379 REDISHOST = \"localhost\" REDISPASSWD = None # Bundle settings_local.py and supervisord.conf Put /was/arkid/ Down 3\u3001Start the back end # # redis and mysql Need to keep start # Enter/was/arkid/ Under contents export PYTHONUSERBASE = /var/arkid/arkid_extensions export PATH = $PATH :/var/arkid/arkid_extensions/bin export ARKID_VERSION = 2 .6.2 pip install --disable-pip-version-check -r requirements.txt ; /usr/local/bin/python3.8 manage.py migrate supervisord One front end\uff1a # 1\u3001Software Installation # nginx 2\u3001nginxConfiguration file # # Move the default configuration mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf_back # Modify portal.conf file\uff0cBundle `http://be` Replace the address of the back -end deployment # Will portal.conf Put /etc/nginx/conf.d/portal.conf 3\u3001Install ARKID front end and desktop # # front end Falata.tar.gz Decompress\uff0cPut /usr/share/nginx/html/ # desktop desktop.tar.gz Decompress\uff0cPut /usr/share/nginx/html/desktop/ 4\u3001Start the front end # nginx -t nginx -s reload 5\u3001access http://Front -end machine IP","title":"NativeDeployment"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#a-back-end","text":"","title":"A back end\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#1software-installation","text":"python 3.8 mysql 5.7 redis 5 gettext xmlsec1 supervisor tree freetds-dev freetds-bin python-dev python-pip","title":"1\u3001Software Installation"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#2install-the-arkid-back-end","text":"# rear end Penetrately.tar.gz Decompress\uff0cPut /was/arkid/ # Revise settings_local.py\uff0cFill in the correct mysql information\uff0cMySQL needs to create a new empty database DEBUG = False # mysql database MYSQLHOST = \"localhost\" MYSQLPORT = \"3306\" MYSQLDATABASE = \"arkid\" MYSQLUSER = \"root\" MYSQLPASSWORD = \"root\" # Redis cache, Default port 6379 REDISHOST = \"localhost\" REDISPASSWD = None # Bundle settings_local.py and supervisord.conf Put /was/arkid/ Down","title":"2\u3001Install the ARKID back end"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#3start-the-back-end","text":"# redis and mysql Need to keep start # Enter/was/arkid/ Under contents export PYTHONUSERBASE = /var/arkid/arkid_extensions export PATH = $PATH :/var/arkid/arkid_extensions/bin export ARKID_VERSION = 2 .6.2 pip install --disable-pip-version-check -r requirements.txt ; /usr/local/bin/python3.8 manage.py migrate supervisord","title":"3\u3001Start the back end"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#one-front-end","text":"","title":"One front end\uff1a"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#1software-installation_1","text":"nginx","title":"1\u3001Software Installation"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#2nginxconfiguration-file","text":"# Move the default configuration mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf_back # Modify portal.conf file\uff0cBundle `http://be` Replace the address of the back -end deployment # Will portal.conf Put /etc/nginx/conf.d/portal.conf","title":"2\u3001nginxConfiguration file"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#3install-arkid-front-end-and-desktop","text":"# front end Falata.tar.gz Decompress\uff0cPut /usr/share/nginx/html/ # desktop desktop.tar.gz Decompress\uff0cPut /usr/share/nginx/html/desktop/","title":"3\u3001Install ARKID front end and desktop"},{"location":"%20%20%20Start%20Quickly/%20Privatization/NativeDeployment/#4start-the-front-end","text":"nginx -t nginx -s reload 5\u3001access http://Front -end machine IP","title":"4\u3001Start the front end"},{"location":"%20%20%20Start%20Quickly/Version%20Upgrade/","text":"Use Arkos deployment upgrade method # arkid View the new version number in github https://github.com/longguikeji/arkid-charts/releases Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : arkid namespace : kube-system spec : chart : arkid version : 3.0.13 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : arkid kubeapps View the new version number in Artifacthub https://artifacthub.io/packages/helm/bitnami/kubeapps Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : kubeapps namespace : kube-system spec : chart : kubeapps version : 10.3.1 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : kubeapps Using docker deployment upgrade method # ## Enter docker-compose Table of contents cd arkid-charts/docker-compose ## stop docker-compose down ## Pull up update git warehouse git pull ## Execute the startup command again\uff0cWill draw a new mirror update version docker-compose up -d The upgrade method deployed with K8S # helm repo update helm -n arkid upgrade arkid lgkj/arkid \\ --set persistence.init = true","title":"Index"},{"location":"%20%20%20Start%20Quickly/Version%20Upgrade/#use-arkos-deployment-upgrade-method","text":"arkid View the new version number in github https://github.com/longguikeji/arkid-charts/releases Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/arkid.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : arkid namespace : kube-system spec : chart : arkid version : 3.0.13 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : arkid kubeapps View the new version number in Artifacthub https://artifacthub.io/packages/helm/bitnami/kubeapps Modify the deployment file version number\uff0cLog in arches-Master01 operation Path of deployment files\uff1a The location of the first two deployment\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml The last high available deployment file location\uff1a/was/lib/rancher/Stick/server/manifests/kubeapps.yaml After saving, it will be updated automatically ## Revise version field\uff0cSave exit\uff0cWill complete the update later apiVersion : helm.cattle.io/v1 kind : HelmChart metadata : name : kubeapps namespace : kube-system spec : chart : kubeapps version : 10.3.1 repo : https://harbor.longguikeji.com/chartrepo/public targetNamespace : kubeapps","title":"Use Arkos deployment upgrade method"},{"location":"%20%20%20Start%20Quickly/Version%20Upgrade/#using-docker-deployment-upgrade-method","text":"## Enter docker-compose Table of contents cd arkid-charts/docker-compose ## stop docker-compose down ## Pull up update git warehouse git pull ## Execute the startup command again\uff0cWill draw a new mirror update version docker-compose up -d","title":"Using docker deployment upgrade method"},{"location":"%20%20%20Start%20Quickly/Version%20Upgrade/#the-upgrade-method-deployed-with-k8s","text":"helm repo update helm -n arkid upgrade arkid lgkj/arkid \\ --set persistence.init = true","title":"The upgrade method deployed with K8S"},{"location":"%20%20%20User%20Guide/","text":"User guide # Use ARKID to build an exclusive IDAAS/IAM platform Novice tutorial # Add the first OIDC application Add a new account Add an organizational structure or role Open an application for the target account Open a set of permissions for the target organizational structure Add mobile verification code as a new authentication factor ADSynchronization with Arkid Enable multiple tenants\uff0cBecome IDAAS User manual # general user # desktop Personal Management Certification Management Authorized Management Approval Management Tenant administrator # Application management Application List Application group Application Agreement User Management user list User Grouping Account life cycle Certification management Certification factor worth mentioning automatic log-in Certification rules Authorization Permanent List Power packet authority management Authorized rules Approval management Approval action Approval System Approval request Identity data source SCIMdata synchronization Permanent data synchronization Extension WebHook OpenAPI Event list Log management User log Administrator log Log configuration graph analysis Chart display analysis system Tenant management Practice configuration Sub -administrator Topic Settings Plug -in management Central Platform Platform administrator # Platform Management Plug -in management Language Package Management","title":"User guide"},{"location":"%20%20%20User%20Guide/#user-guide","text":"Use ARKID to build an exclusive IDAAS/IAM platform","title":"User guide"},{"location":"%20%20%20User%20Guide/#novice-tutorial","text":"Add the first OIDC application Add a new account Add an organizational structure or role Open an application for the target account Open a set of permissions for the target organizational structure Add mobile verification code as a new authentication factor ADSynchronization with Arkid Enable multiple tenants\uff0cBecome IDAAS","title":"Novice tutorial"},{"location":"%20%20%20User%20Guide/#user-manual","text":"","title":"User manual"},{"location":"%20%20%20User%20Guide/#general-user","text":"desktop Personal Management Certification Management Authorized Management Approval Management","title":"general user"},{"location":"%20%20%20User%20Guide/#tenant-administrator","text":"Application management Application List Application group Application Agreement User Management user list User Grouping Account life cycle Certification management Certification factor worth mentioning automatic log-in Certification rules Authorization Permanent List Power packet authority management Authorized rules Approval management Approval action Approval System Approval request Identity data source SCIMdata synchronization Permanent data synchronization Extension WebHook OpenAPI Event list Log management User log Administrator log Log configuration graph analysis Chart display analysis system Tenant management Practice configuration Sub -administrator Topic Settings Plug -in management Central Platform","title":"Tenant administrator"},{"location":"%20%20%20User%20Guide/#platform-administrator","text":"Platform Management Plug -in management Language Package Management","title":"Platform administrator"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/","text":"Novice tutorial # The following introduces the growth path of a novice administrator Preparation Create tenants in the SaaS system\uff0cOr after the privatization deployment is deployed, log in with the Admin account\uff0cYou can continue the following operations Add the first OIDC application # Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002 The meaning of related parameters\uff0cPlease refer to the [OIDC plug -in document] (../../%20%20 system plug -in/com_Dragon turtle_app_protocol_oidc/OIDC/) Add a new account # Open the user list Click to create Fill in the form below\uff0cJust click to create\u3002 Add an organizational structure or role # Open the user group Click to create Add users to group Choose a user You can see about the detailed introduction to the grouping [User Management-User grouping] (../User Manual/%20Tenants Administrator/User Management/#_3) Fill in the form below\uff0cJust click to create\u3002 Open an application for the target account # Open a set of permissions for the target organizational structure # Add mobile verification code as a new authentication factor # Open the authentication factor Click to create Open the authentication factor Choose the type of authentication factors\u201cmobile\u201d\uff0cFill in the form ADSynchronize with Arkid's data # Configure users and organizations in synchronous AD to ARKID Open SCIM data synchronization\uff0cClick to create Configure AD synchronization server Configure Arkid synchronization client View source data in AD View data in Arkid Hint SCIMSynchronous server: Choose the previous step created Ad synchronous server Timing time: Format refer to linux crontab, The figure below indicates every day 11\uff1a51 Run timing synchronization task The timing task needs to start Clery work and beat: celery -A arkid.core.tasks.celery beat -l debug celery -A arkid.core.tasks.celery worker -l debug Enable multiple tenants\uff0cBecome IDAAS #","title":"Novice tutorial"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#novice-tutorial","text":"The following introduces the growth path of a novice administrator Preparation Create tenants in the SaaS system\uff0cOr after the privatization deployment is deployed, log in with the Admin account\uff0cYou can continue the following operations","title":"Novice tutorial"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#add-the-first-oidc-application","text":"Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002 The meaning of related parameters\uff0cPlease refer to the [OIDC plug -in document] (../../%20%20 system plug -in/com_Dragon turtle_app_protocol_oidc/OIDC/)","title":"Add the first OIDC application"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#add-a-new-account","text":"Open the user list Click to create Fill in the form below\uff0cJust click to create\u3002","title":"Add a new account"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#add-an-organizational-structure-or-role","text":"Open the user group Click to create Add users to group Choose a user You can see about the detailed introduction to the grouping [User Management-User grouping] (../User Manual/%20Tenants Administrator/User Management/#_3) Fill in the form below\uff0cJust click to create\u3002","title":"Add an organizational structure or role"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#open-an-application-for-the-target-account","text":"","title":"Open an application for the target account"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#open-a-set-of-permissions-for-the-target-organizational-structure","text":"","title":"Open a set of permissions for the target organizational structure"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#add-mobile-verification-code-as-a-new-authentication-factor","text":"Open the authentication factor Click to create Open the authentication factor Choose the type of authentication factors\u201cmobile\u201d\uff0cFill in the form","title":"Add mobile verification code as a new authentication factor"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#adsynchronize-with-arkids-data","text":"Configure users and organizations in synchronous AD to ARKID Open SCIM data synchronization\uff0cClick to create Configure AD synchronization server Configure Arkid synchronization client View source data in AD View data in Arkid Hint SCIMSynchronous server: Choose the previous step created Ad synchronous server Timing time: Format refer to linux crontab, The figure below indicates every day 11\uff1a51 Run timing synchronization task The timing task needs to start Clery work and beat: celery -A arkid.core.tasks.celery beat -l debug celery -A arkid.core.tasks.celery worker -l debug","title":"ADSynchronize with Arkid's data"},{"location":"%20%20%20User%20Guide/Novice%20Tutorial/#enable-multiple-tenantsbecome-idaas","text":"","title":"Enable multiple tenants\uff0cBecome IDAAS"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/","text":"Register and log in # A total of four types of pages: Log in,register,reset Password\uff0cBinding account Each page determines its function based on the operating plug -in and its configuration\u3002 The basic structure of each page is as follows\uff1a Practitioner icon and name Subject form: Support multiple forms, Each form corresponds to a submit button, Trigger the corresponding API Form extension: Used to jump to other pages The extension of the login window: Third -party login entrance Other tips register\" Log in\" Practitioner icon and name # exist [Practice configuration] () Change Log in, register, reset Password # The contents of these three pages are mainly consistent [Certification factor] () Configuration decision\uff0cConfigure by administrator\uff0cSo as to have SMS verification\uff0cVarious functions of mailbox registration and other functions\u3002 Binding account # Hint The content of the binding account page is always consistent with the content of the login page\u3002 After you enter the system through a third party login\uff0cIf the account does not bind the account of ARKID\uff0c Binded account page Will open\u3002 Binded account window\uff0cWill clearly remind users to complete the login through which third -party account number\uff0cAnd display its avatar and name\u3002The content of this part\uff0cDirectly displayed in\u201cThe extension of the login window\u201dTo\u3002Text\uff1a\u201cYour WeChat account\uff08WeChat name\uff09No ARKID account\u3002If you already have an arkid account\uff0cLog in through this window to complete the binding\u3002If you have no\uff0cYou can enter the registration page to create a new account\u3002\u201d worth mentioning # The administrator can be worth mentioning Manage all third parties login\u3002 Click on the third party to log in\uff0cThere will be two cases\u3002 This three -party account has been bound to the ARKID account\uff0cThen there is no need to bind\uff0cDirectly enter the system\u3002 The second is that the account is not bound to ARKID account\uff0cIt is required to be binding\uff0cEnter the binding window","title":"Register and log in"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/#register-and-log-in","text":"A total of four types of pages: Log in,register,reset Password\uff0cBinding account Each page determines its function based on the operating plug -in and its configuration\u3002 The basic structure of each page is as follows\uff1a Practitioner icon and name Subject form: Support multiple forms, Each form corresponds to a submit button, Trigger the corresponding API Form extension: Used to jump to other pages The extension of the login window: Third -party login entrance Other tips register\" Log in\"","title":"Register and log in"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/#practitioner-icon-and-name","text":"exist [Practice configuration] () Change","title":"Practitioner icon and name"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/#log-in-register-reset-password","text":"The contents of these three pages are mainly consistent [Certification factor] () Configuration decision\uff0cConfigure by administrator\uff0cSo as to have SMS verification\uff0cVarious functions of mailbox registration and other functions\u3002","title":"Log in, register, reset Password"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/#binding-account","text":"Hint The content of the binding account page is always consistent with the content of the login page\u3002 After you enter the system through a third party login\uff0cIf the account does not bind the account of ARKID\uff0c Binded account page Will open\u3002 Binded account window\uff0cWill clearly remind users to complete the login through which third -party account number\uff0cAnd display its avatar and name\u3002The content of this part\uff0cDirectly displayed in\u201cThe extension of the login window\u201dTo\u3002Text\uff1a\u201cYour WeChat account\uff08WeChat name\uff09No ARKID account\u3002If you already have an arkid account\uff0cLog in through this window to complete the binding\u3002If you have no\uff0cYou can enter the registration page to create a new account\u3002\u201d","title":"Binding account"},{"location":"%20%20%20User%20Guide/User%20Manual/LoginAndRegister/#worth-mentioning","text":"The administrator can be worth mentioning Manage all third parties login\u3002 Click on the third party to log in\uff0cThere will be two cases\u3002 This three -party account has been bound to the ARKID account\uff0cThen there is no need to bind\uff0cDirectly enter the system\u3002 The second is that the account is not bound to ARKID account\uff0cIt is required to be binding\uff0cEnter the binding window","title":"worth mentioning"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/ApprovalRequest/","text":"Approval request # Approval request Click the menu \"Click the user avatar>Approval request\"","title":"Approval request"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/ApprovalRequest/#approval-request","text":"Approval request Click the menu \"Click the user avatar>Approval request\"","title":"Approval request"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/Authorization/","text":"Authorization # request for access\uff1aUsers can apply for their own permissions here List Click the menu \"Click the user avatar>Authorization\" Apply Click the menu \"Click the user avatar>Authorization>Choose a record>Apply\"","title":"Authorization"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/Authorization/#authorization","text":"request for access\uff1aUsers can apply for their own permissions here List Click the menu \"Click the user avatar>Authorization\" Apply Click the menu \"Click the user avatar>Authorization>Choose a record>Apply\"","title":"Authorization"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/","text":"Certification management # Binding of a three -party account # After clicking the binding button\uff0cWait a moment\uff0cThe page will jump to a third -party website to complete the authorization\uff0cAfter authorization, it will automatically jump to the current binding page Bind Click the menu \"Click the user avatar>Certification management>Three -party account binding\" Unbinding of a three -party account # After clicking the unbinding button\uff0cThe binding relationship between the three -party account and the user will be automatically lifted Unbind Click the menu \"Click the user avatar>Certification management>Three -party account binding\" change password # change password Click the menu \"Click the user avatar>Certification management>change password\" Change the mobile phone number # Change the mobile phone number Click the menu \"Click the user avatar>Certification management>Change the mobile phone number\" LDAPAgent certification password # LDAPAgent certification password Click the menu \"Click the user avatar>Certification management>LDAP proxy authentication password\" change password # change password Click the menu \"Click the user avatar>Certification management>change password\"","title":"Certification management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#certification-management","text":"","title":"Certification management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#binding-of-a-three-party-account","text":"After clicking the binding button\uff0cWait a moment\uff0cThe page will jump to a third -party website to complete the authorization\uff0cAfter authorization, it will automatically jump to the current binding page Bind Click the menu \"Click the user avatar>Certification management>Three -party account binding\"","title":"Binding of a three -party account"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#unbinding-of-a-three-party-account","text":"After clicking the unbinding button\uff0cThe binding relationship between the three -party account and the user will be automatically lifted Unbind Click the menu \"Click the user avatar>Certification management>Three -party account binding\"","title":"Unbinding of a three -party account"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#change-password","text":"change password Click the menu \"Click the user avatar>Certification management>change password\"","title":"change password"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#change-the-mobile-phone-number","text":"Change the mobile phone number Click the menu \"Click the user avatar>Certification management>Change the mobile phone number\"","title":"Change the mobile phone number"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#ldapagent-certification-password","text":"LDAPAgent certification password Click the menu \"Click the user avatar>Certification management>LDAP proxy authentication password\"","title":"LDAPAgent certification password"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/CertificationManagement/#change-password_1","text":"change password Click the menu \"Click the user avatar>Certification management>change password\"","title":"change password"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/Desktop/","text":"desktop # desktop\uff0cIn essence is the application list\u3002Here is a fast entrance that the current user can open all applications\u3002These applications are generally\uff0cJust in the tenant management\uff0cAdded and authorized to the current users by the tenant administrator\u3002 front page Click the menu \"Click on the homepage\"","title":"desktop"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/Desktop/#desktop","text":"desktop\uff0cIn essence is the application list\u3002Here is a fast entrance that the current user can open all applications\u3002These applications are generally\uff0cJust in the tenant management\uff0cAdded and authorized to the current users by the tenant administrator\u3002 front page Click the menu \"Click on the homepage\"","title":"desktop"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/MyNews/","text":"My news # I arrive Click the menu \"Click the user avatar>I arrive\"","title":"My news"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/MyNews/#my-news","text":"I arrive Click the menu \"Click the user avatar>I arrive\"","title":"My news"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/PersonalManagement/","text":"Personal management # personal information # Check Click the menu \"Click the user avatar>Personal management>personal information\" edit Click the menu \"Click the user avatar>Personal management>personal information>edit\" Application subscription # Check Click the menu \"Click the user avatar>Personal management>Application subscription\"","title":"Personal management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/PersonalManagement/#personal-management","text":"","title":"Personal management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/PersonalManagement/#personal-information","text":"Check Click the menu \"Click the user avatar>Personal management>personal information\" edit Click the menu \"Click the user avatar>Personal management>personal information>edit\"","title":"personal information"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/PersonalManagement/#application-subscription","text":"Check Click the menu \"Click the user avatar>Personal management>Application subscription\"","title":"Application subscription"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/SwitchToTenants/","text":"Switch to tenants # When multi -tenant function is opened\uff0cPlatform users can switch between multiple tenants List Click the menu \"Click the user avatar>Switch to tenants\" create Click the menu \"Click the user avatar>Switch to tenants>create\" Switch Click the menu \"Click the user avatar>Switch to tenants>Choose a record>Switch\"","title":"Switch to tenants"},{"location":"%20%20%20User%20Guide/User%20Manual/%20General%20User/SwitchToTenants/#switch-to-tenants","text":"When multi -tenant function is opened\uff0cPlatform users can switch between multiple tenants List Click the menu \"Click the user avatar>Switch to tenants\" create Click the menu \"Click the user avatar>Switch to tenants>create\" Switch Click the menu \"Click the user avatar>Switch to tenants>Choose a record>Switch\"","title":"Switch to tenants"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/","text":"Application management # Application List # Local application # List Click the menu \"Application management>Application List\" create Click the menu \"Application management>Application List>create\" edit Click the menu \"Application management>Application List>Choose a record>Click Edit\" delete Click the menu \"Application management>Application List>Choose a record>Click to delete\" Protocol configuration Click the menu \"Application management>Application List>Choose a record>Click the protocol configuration\" Open API configuration Click the menu \"Application management>Application List>Choose a record>Open API configuration\" app Store # Saasapplication # app Store\u2014SaaS application Click the menu \"Application management>app Store>SaaS application\" Install Click the menu \"Application management>app Store>SaaS application>Choose a record>Install to the local\" Private application # [app Store-Private application] (../../Platform administrator/app Store-Private application/) bought # bought Click the menu \"Application management>Application List>bought\" Application group # Can be packed on the application\uff0cSupport tree -shaped group structure\u3002 List Click the menu \"Application management>Application group\" create Click the menu \"Application management>Application group>create\" edit Click the menu \"Application management>Application group>Choose a record>Click Edit\" delete Click the menu \"Application management>Application group>Choose a record>Click to delete\" Add a group application Click the menu \"Application management>Application group>Choose a record>Add application\" Delete group application Click the menu \"Application management>Application group>Choose a record>Select group to application>delete\" Application protocol # View the application type supported by the system\uff0cDefault support OIDC OAuth2 Other protocols Saml2\uff0c CAS et al. Search in the plug -in List Click the menu \"Application management>Application protocol\"","title":"Application management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#application-management","text":"","title":"Application management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#application-list","text":"","title":"Application List"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#local-application","text":"List Click the menu \"Application management>Application List\" create Click the menu \"Application management>Application List>create\" edit Click the menu \"Application management>Application List>Choose a record>Click Edit\" delete Click the menu \"Application management>Application List>Choose a record>Click to delete\" Protocol configuration Click the menu \"Application management>Application List>Choose a record>Click the protocol configuration\" Open API configuration Click the menu \"Application management>Application List>Choose a record>Open API configuration\"","title":"Local application"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#app-store","text":"","title":"app Store"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#saasapplication","text":"app Store\u2014SaaS application Click the menu \"Application management>app Store>SaaS application\" Install Click the menu \"Application management>app Store>SaaS application>Choose a record>Install to the local\"","title":"Saasapplication"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#private-application","text":"[app Store-Private application] (../../Platform administrator/app Store-Private application/)","title":"Private application"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#bought","text":"bought Click the menu \"Application management>Application List>bought\"","title":"bought"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#application-group","text":"Can be packed on the application\uff0cSupport tree -shaped group structure\u3002 List Click the menu \"Application management>Application group\" create Click the menu \"Application management>Application group>create\" edit Click the menu \"Application management>Application group>Choose a record>Click Edit\" delete Click the menu \"Application management>Application group>Choose a record>Click to delete\" Add a group application Click the menu \"Application management>Application group>Choose a record>Add application\" Delete group application Click the menu \"Application management>Application group>Choose a record>Select group to application>delete\"","title":"Application group"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApplicationManagement/#application-protocol","text":"View the application type supported by the system\uff0cDefault support OIDC OAuth2 Other protocols Saml2\uff0c CAS et al. Search in the plug -in List Click the menu \"Application management>Application protocol\"","title":"Application protocol"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/","text":"Approval management # Approval # Click to create to define\u201cApproval\u201d\u3002 Once a API is defined as the approval action\uff0cThen all requests for the API will be hung up\uff0cAt the same time, generate an approval request\u3002Until the approval request was approved\uff0cThe API request will be released and executed\u3002If the request is rejected\uff0cThen the API request will be canceled\u3002 Each approval action requires to do a approval system\uff0cThe approval system is used to handle the approval request generated by the approval action\u3002 List Click the menu \"Approval management>Approval\" create Click the menu \"Approval management>Approval>create\" edit Click the menu \"Approval management>Approval>Choose a record>Click Edit\" delete Click the menu \"Approval management>Approval>Choose a record>Click to delete\" Approval request # Check Click the menu \"Approval management>Approval request\" Approval system # System used to process approval requests\u3002 Each approval system from the plug -in\uff0cThe plug -in will send the approval request to the various approval systems and accept the approval system's changes to the approval request.\u3002 Click to create\uff0cYou can add the configuration of the approval system plug -in\u3002Each plug -in configuration is different\uff0cFor details, see the documents of each plug -in\u3002 Default approval system processing logic is simple\uff0cJust by the tenant administrator [Default request processing] Come to handle related approval requests\u3002 List Click the menu \"Approval management>Approval system\" create Click the menu \"Approval management>Approval system>create\" edit Click the menu \"Approval management>Approval system>Choose a record>Click Edit\" delete Click the menu \"Approval management>Approval system>Choose a record>Click to delete\" Default request processing # Default approval system\uff0cPage of processing approval request\u3002 List Click the menu \"Approval management>Default request processing\" pass Click the menu \"Approval management>Default request processing>Choose a record>pass\" reject Click the menu \"Approval management>Default request processing>Choose a record>reject\"","title":"Approval management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/#approval-management","text":"","title":"Approval management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/#approval","text":"Click to create to define\u201cApproval\u201d\u3002 Once a API is defined as the approval action\uff0cThen all requests for the API will be hung up\uff0cAt the same time, generate an approval request\u3002Until the approval request was approved\uff0cThe API request will be released and executed\u3002If the request is rejected\uff0cThen the API request will be canceled\u3002 Each approval action requires to do a approval system\uff0cThe approval system is used to handle the approval request generated by the approval action\u3002 List Click the menu \"Approval management>Approval\" create Click the menu \"Approval management>Approval>create\" edit Click the menu \"Approval management>Approval>Choose a record>Click Edit\" delete Click the menu \"Approval management>Approval>Choose a record>Click to delete\"","title":"Approval"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/#approval-request","text":"Check Click the menu \"Approval management>Approval request\"","title":"Approval request"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/#approval-system","text":"System used to process approval requests\u3002 Each approval system from the plug -in\uff0cThe plug -in will send the approval request to the various approval systems and accept the approval system's changes to the approval request.\u3002 Click to create\uff0cYou can add the configuration of the approval system plug -in\u3002Each plug -in configuration is different\uff0cFor details, see the documents of each plug -in\u3002 Default approval system processing logic is simple\uff0cJust by the tenant administrator [Default request processing] Come to handle related approval requests\u3002 List Click the menu \"Approval management>Approval system\" create Click the menu \"Approval management>Approval system>create\" edit Click the menu \"Approval management>Approval system>Choose a record>Click Edit\" delete Click the menu \"Approval management>Approval system>Choose a record>Click to delete\"","title":"Approval system"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/ApprovalManagement/#default-request-processing","text":"Default approval system\uff0cPage of processing approval request\u3002 List Click the menu \"Approval management>Default request processing\" pass Click the menu \"Approval management>Default request processing>Choose a record>pass\" reject Click the menu \"Approval management>Default request processing>Choose a record>reject\"","title":"Default request processing"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/","text":"authority management # Permission list # View the permissions information that can be read by the login user\uff0cNew and editing permissions, etc. \"Open permission list\" \"New authority\" \"View creation results\" \"Delete permissions\" Only the permissions created by yourself are allowed to delete\uff0cCan't delete system permissions \"Permission search\" Permissions # The left tree structure\uff0cThe first layer is the application\uff0cThe second layer is a group of permissions in the application\u3002 On the right is the permissions in the grouping You can create a new permissions group here again\uff0cAnd edit the authority\u3002 \"Open the List of Permanent Subsidies\" \"New authority group\" \"View creation results\" Only the permissions group created by yourself allow delete and editing\uff0cCan't delete and edit system groups \"View permissions of permission grouping\" \"Power packet adding permissions\" \"View the result of adding permissions\" Only the permissions added by yourself can be deleted Authorization # From three perspectives\uff1auser\uff0cUser group\uff0capplication To allocate permissions Can add permissions or delete permissions to a user You can add permissions or delete permissions to a user You can add permissions or delete permissions or open permissions to an application User rights # \"Open the user authority list\" \"Add user permissions\" \"View the result of adding permissions\" \"Delete user permissions\" User packet authority # \"Open the user group list\" \"Add user group permissions\" \"View the user's grouping permissions\" \"Delete user group permissions\" Application authority # \"Open the application right list\" \"Add application permissions\" \"View the application permissions added\" \"Delete application permissions\" If you use the application ID and secret access # \"Get application ID and secret\" \"Access with application ID and secret\uff0cYou need to add an app to Headers-ID and app-Secret parameter\" Authorization rules # In addition to the authorization management method of RBAC in authorization management\uff0cAnd ABAC's authority management method\u3002The authorization rules are used to handle the type of ABAC\u3002 Click to create\uff0cYou can add the relevant plug -in configuration\u3002 Different plug -in processing authorization rules are different\uff0cThe respective configuration is also different\uff0cPlease refer to [Detailed plug -in document] (../../../../%20%20 system plug -in/com_Dragon turtle_impower_rule/DefaultImpowerRule/) \"Open the list of authorization rules\" \"Newly -built authorization rules\" \"Edit Authorization Rules\" \"Delete authorization rules\"","title":"authority management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#authority-management","text":"","title":"authority management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#permission-list","text":"View the permissions information that can be read by the login user\uff0cNew and editing permissions, etc. \"Open permission list\" \"New authority\" \"View creation results\" \"Delete permissions\" Only the permissions created by yourself are allowed to delete\uff0cCan't delete system permissions \"Permission search\"","title":"Permission list"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#permissions","text":"The left tree structure\uff0cThe first layer is the application\uff0cThe second layer is a group of permissions in the application\u3002 On the right is the permissions in the grouping You can create a new permissions group here again\uff0cAnd edit the authority\u3002 \"Open the List of Permanent Subsidies\" \"New authority group\" \"View creation results\" Only the permissions group created by yourself allow delete and editing\uff0cCan't delete and edit system groups \"View permissions of permission grouping\" \"Power packet adding permissions\" \"View the result of adding permissions\" Only the permissions added by yourself can be deleted","title":"Permissions"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#authorization","text":"From three perspectives\uff1auser\uff0cUser group\uff0capplication To allocate permissions Can add permissions or delete permissions to a user You can add permissions or delete permissions to a user You can add permissions or delete permissions or open permissions to an application","title":"Authorization"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#user-rights","text":"\"Open the user authority list\" \"Add user permissions\" \"View the result of adding permissions\" \"Delete user permissions\"","title":"User rights"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#user-packet-authority","text":"\"Open the user group list\" \"Add user group permissions\" \"View the user's grouping permissions\" \"Delete user group permissions\"","title":"User packet authority"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#application-authority","text":"\"Open the application right list\" \"Add application permissions\" \"View the application permissions added\" \"Delete application permissions\"","title":"Application authority"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#if-you-use-the-application-id-and-secret-access","text":"\"Get application ID and secret\" \"Access with application ID and secret\uff0cYou need to add an app to Headers-ID and app-Secret parameter\"","title":"If you use the application ID and secret access"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/AuthorityManagement/#authorization-rules","text":"In addition to the authorization management method of RBAC in authorization management\uff0cAnd ABAC's authority management method\u3002The authorization rules are used to handle the type of ABAC\u3002 Click to create\uff0cYou can add the relevant plug -in configuration\u3002 Different plug -in processing authorization rules are different\uff0cThe respective configuration is also different\uff0cPlease refer to [Detailed plug -in document] (../../../../%20%20 system plug -in/com_Dragon turtle_impower_rule/DefaultImpowerRule/) \"Open the list of authorization rules\" \"Newly -built authorization rules\" \"Edit Authorization Rules\" \"Delete authorization rules\"","title":"Authorization rules"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/","text":"Certification management # Authentication # During the certification process\uff0cAll functional modules that may appear in the authentication window\uff0cCan be considered a certification factor\u3002 Generally speaking\uff0cA authentication factor contains\uff0cLog in\uff0cregister\uff0cForget the various types of functions such as passwords\u3002So the configuration part of each cognitive factors\uff0cWill there be whether to log in\uff0cWhether to open up\uff0cWhether to turn on the switch that forgets the password\u3002 Each authentication factors will also have their own personality configuration\uff0cThis needs to refer to the plug -in document\u3002 List Click the menu \"Certification management>Authentication\" create Click the menu \"Certification management>Authentication>create\" edit Click the menu \"Certification management>Authentication>Choose a record>Click Edit\" delete Click the menu \"Certification management>Authentication>Choose a record>Click to delete\" third-party certification # This is a special certification factor\uff0cClassify it separately Click here to create a new third -party certification\uff0cThe type that can be added depends on whether the platform has the current plug -in\u3002 Related plug -in configurations need to refer to the document of each plug -in\u3002 List Click the menu \"Certification management>third-party certification\" create Click the menu \"Certification management>third-party certification>create\" edit Click the menu \"Certification management>third-party certification>Choose a record>Click Edit\" delete Click the menu \"Certification management>third-party certification>Choose a record>Click to delete\" Automatic authentication # Automatic authentication refers to in some special environments\uff0cYou may not need a user to enter any account password to automatically complete the certification\u3002For example\uff1aIn Window domain\uff0cWhen the user enters the computer, you will ask for input AD's account density to turn on the computer\uff0cAt this time, you can turn on the Kuberos plug -in\uff0cUsers do not need to enter a password\uff0cUse the authentication part that has been authenticated to complete the automatic login\u3002 For specific documents, see each related plug -in\u3002 List Click the menu \"Certification management>Automatic authentication\" create Click the menu \"Certification management>Automatic authentication>create\" edit Click the menu \"Certification management>Automatic authentication>Choose a record>Click Edit\" delete Click the menu \"Certification management>Automatic authentication>Choose a record>Click to delete\" Certification rules # During the certification process\uff0cAll kinds of parameters need to be on users\uff0cFor example, the environment where the user is located\uff0cIP address\uff0cVarious types of password errors, etc.\uff0cJudgment\uff0cAnd affect the process of user certification\u3002 Click to create\uff0cAdd the configuration of the certification rules plug -in\u3002Different plugins\uff0cDifferent configuration\uff0cDifferent functional\u3002For details, see the document description of each plug -in\u3002 Default plug -in function\uff0cYou can set the upper limit of the number of user password errors\uff0cIf users repeatedly make mistakes within one day, they need to enable another authentication factor\u3002 List Click the menu \"Certification management>Certification rules\" create Click the menu \"Certification management>Certification rules>create\" edit Click the menu \"Certification management>Certification rules>Choose a record>Click Edit\" delete Click the menu \"Certification management>Certification rules>Choose a record>Click to delete\"","title":"Certification management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/#certification-management","text":"","title":"Certification management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/#authentication","text":"During the certification process\uff0cAll functional modules that may appear in the authentication window\uff0cCan be considered a certification factor\u3002 Generally speaking\uff0cA authentication factor contains\uff0cLog in\uff0cregister\uff0cForget the various types of functions such as passwords\u3002So the configuration part of each cognitive factors\uff0cWill there be whether to log in\uff0cWhether to open up\uff0cWhether to turn on the switch that forgets the password\u3002 Each authentication factors will also have their own personality configuration\uff0cThis needs to refer to the plug -in document\u3002 List Click the menu \"Certification management>Authentication\" create Click the menu \"Certification management>Authentication>create\" edit Click the menu \"Certification management>Authentication>Choose a record>Click Edit\" delete Click the menu \"Certification management>Authentication>Choose a record>Click to delete\"","title":"Authentication"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/#third-party-certification","text":"This is a special certification factor\uff0cClassify it separately Click here to create a new third -party certification\uff0cThe type that can be added depends on whether the platform has the current plug -in\u3002 Related plug -in configurations need to refer to the document of each plug -in\u3002 List Click the menu \"Certification management>third-party certification\" create Click the menu \"Certification management>third-party certification>create\" edit Click the menu \"Certification management>third-party certification>Choose a record>Click Edit\" delete Click the menu \"Certification management>third-party certification>Choose a record>Click to delete\"","title":"third-party certification"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/#automatic-authentication","text":"Automatic authentication refers to in some special environments\uff0cYou may not need a user to enter any account password to automatically complete the certification\u3002For example\uff1aIn Window domain\uff0cWhen the user enters the computer, you will ask for input AD's account density to turn on the computer\uff0cAt this time, you can turn on the Kuberos plug -in\uff0cUsers do not need to enter a password\uff0cUse the authentication part that has been authenticated to complete the automatic login\u3002 For specific documents, see each related plug -in\u3002 List Click the menu \"Certification management>Automatic authentication\" create Click the menu \"Certification management>Automatic authentication>create\" edit Click the menu \"Certification management>Automatic authentication>Choose a record>Click Edit\" delete Click the menu \"Certification management>Automatic authentication>Choose a record>Click to delete\"","title":"Automatic authentication"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/CertificationManagement/#certification-rules","text":"During the certification process\uff0cAll kinds of parameters need to be on users\uff0cFor example, the environment where the user is located\uff0cIP address\uff0cVarious types of password errors, etc.\uff0cJudgment\uff0cAnd affect the process of user certification\u3002 Click to create\uff0cAdd the configuration of the certification rules plug -in\u3002Different plugins\uff0cDifferent configuration\uff0cDifferent functional\u3002For details, see the document description of each plug -in\u3002 Default plug -in function\uff0cYou can set the upper limit of the number of user password errors\uff0cIf users repeatedly make mistakes within one day, they need to enable another authentication factor\u3002 List Click the menu \"Certification management>Certification rules\" create Click the menu \"Certification management>Certification rules>create\" edit Click the menu \"Certification management>Certification rules>Choose a record>Click Edit\" delete Click the menu \"Certification management>Certification rules>Choose a record>Click to delete\"","title":"Certification rules"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Extension/","text":"Extension # Webhook # ArkIDAll events in the system can trigger webhook calls outside\u3002 Click to create\uff0cYou can configure the webhook call corresponding to an event\uff0cThe parameters related to this incident are sent by JSON\u3002 Each webhook\uff0cYou can view its call history and try again\u3002 List Click the menu \"Extension>Webhook\" create Click the menu \"Extension>Webhook>create\" edit Click the menu \"Extension>Webhook>Choose a record>Click Edit\" delete Click the menu \"Extension>Webhook>Choose a record>Click to delete\" history record Click the menu \"Extension>Webhook>Choose a record>Click historical record\" Event list # Display all events in the ARKID system\u3002 List Click the menu \"Extension>Event list\" APIDocumentation # ArkIDAll interfaces include the interface document of the plugin\u3002 Documentation Click the menu \"Extension>API documentation\"","title":"Extension"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Extension/#extension","text":"","title":"Extension"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Extension/#webhook","text":"ArkIDAll events in the system can trigger webhook calls outside\u3002 Click to create\uff0cYou can configure the webhook call corresponding to an event\uff0cThe parameters related to this incident are sent by JSON\u3002 Each webhook\uff0cYou can view its call history and try again\u3002 List Click the menu \"Extension>Webhook\" create Click the menu \"Extension>Webhook>create\" edit Click the menu \"Extension>Webhook>Choose a record>Click Edit\" delete Click the menu \"Extension>Webhook>Choose a record>Click to delete\" history record Click the menu \"Extension>Webhook>Choose a record>Click historical record\"","title":"Webhook"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Extension/#event-list","text":"Display all events in the ARKID system\u3002 List Click the menu \"Extension>Event list\"","title":"Event list"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Extension/#apidocumentation","text":"ArkIDAll interfaces include the interface document of the plugin\u3002 Documentation Click the menu \"Extension>API documentation\"","title":"APIDocumentation"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/GraphAnalysis/","text":"graph analysis # Practitioner data analysis # View tenants data analysis results Click the menu \"graph analysis>Practitioner data analysis>View analysis results\" User data analysis # View user data analysis results Click the menu \"graph analysis>User data analysis>View analysis data\" analysis system #","title":"graph analysis"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/GraphAnalysis/#graph-analysis","text":"","title":"graph analysis"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/GraphAnalysis/#practitioner-data-analysis","text":"View tenants data analysis results Click the menu \"graph analysis>Practitioner data analysis>View analysis results\"","title":"Practitioner data analysis"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/GraphAnalysis/#user-data-analysis","text":"View user data analysis results Click the menu \"graph analysis>User data analysis>View analysis data\"","title":"User data analysis"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/GraphAnalysis/#analysis-system","text":"","title":"analysis system"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/IdentityDataSource/","text":"Identity data source # SCIMdata synchronization # User data synchronization\uff0cUse the SCIM standard protocol\u3002 The protocol is supported in the mainstream cloud flat platform\u3002 Generally speaking\uff0cDifferent systems require different plug -in to support\u3002 The SCIM synchronization plug -in of the system comes with Arkid's self -default\uff0cSupport two modes: CLIENT and Server\u3002 Create by clicking\uff0cTo add the corresponding plug -in configuration\u3002Different plug -in configurations are different\uff0cPlease refer to your own documentation\u3002 Through ARKID\uff0cOther systems can be synchronized and docking\uff0cInstead of passing ARKID's database\u3002 graph LR A[ADarea] --> B[ArkID]; A --> C[HRsystem]; C --> A; List Click the menu \"Identity data source>SCIM data synchronization\" create Click the menu \"Identity data source>SCIM data synchronization>create\" edit Click the menu \"Identity data source>SCIM data synchronization>Choose a record>Click Edit\" delete Click the menu \"Identity data source>SCIM data synchronization>Choose a record>Click to delete\" Permanent data synchronization # In order to achieve the purpose of unified authority management\uff0cSynchronization of permission data is not lost in the same way\u3002 ArkIDCustomized a set of standard data models to synchronize permission data\u3002Docking other systems requires plug -in to transform the data of each system into this standard model\uff0cThen write it to Arkid\u3002Or transform this standard model into data in other systems\u3002 Similar to SCIM protocol\uff0cDirect docking of other systems also supports other systems\u3002","title":"Identity data source"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/IdentityDataSource/#identity-data-source","text":"","title":"Identity data source"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/IdentityDataSource/#scimdata-synchronization","text":"User data synchronization\uff0cUse the SCIM standard protocol\u3002 The protocol is supported in the mainstream cloud flat platform\u3002 Generally speaking\uff0cDifferent systems require different plug -in to support\u3002 The SCIM synchronization plug -in of the system comes with Arkid's self -default\uff0cSupport two modes: CLIENT and Server\u3002 Create by clicking\uff0cTo add the corresponding plug -in configuration\u3002Different plug -in configurations are different\uff0cPlease refer to your own documentation\u3002 Through ARKID\uff0cOther systems can be synchronized and docking\uff0cInstead of passing ARKID's database\u3002 graph LR A[ADarea] --> B[ArkID]; A --> C[HRsystem]; C --> A; List Click the menu \"Identity data source>SCIM data synchronization\" create Click the menu \"Identity data source>SCIM data synchronization>create\" edit Click the menu \"Identity data source>SCIM data synchronization>Choose a record>Click Edit\" delete Click the menu \"Identity data source>SCIM data synchronization>Choose a record>Click to delete\"","title":"SCIMdata synchronization"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/IdentityDataSource/#permanent-data-synchronization","text":"In order to achieve the purpose of unified authority management\uff0cSynchronization of permission data is not lost in the same way\u3002 ArkIDCustomized a set of standard data models to synchronize permission data\u3002Docking other systems requires plug -in to transform the data of each system into this standard model\uff0cThen write it to Arkid\u3002Or transform this standard model into data in other systems\u3002 Similar to SCIM protocol\uff0cDirect docking of other systems also supports other systems\u3002","title":"Permanent data synchronization"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/LogManagement/","text":"Log management # Log configuration # Configuration Click the menu \"Log management>Log configuration\" Administrator behavior log # List Click the menu \"Log management>Administrator behavior log\" Check Click the menu \"Log management>Administrator behavior log>Check\" User behavior log # List Click the menu \"Log management>User behavior log\" Check Click the menu \"Log management>User behavior log>Check\"","title":"Log management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/LogManagement/#log-management","text":"","title":"Log management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/LogManagement/#log-configuration","text":"Configuration Click the menu \"Log management>Log configuration\"","title":"Log configuration"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/LogManagement/#administrator-behavior-log","text":"List Click the menu \"Log management>Administrator behavior log\" Check Click the menu \"Log management>Administrator behavior log>Check\"","title":"Administrator behavior log"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/LogManagement/#user-behavior-log","text":"List Click the menu \"Log management>User behavior log\" Check Click the menu \"Log management>User behavior log>Check\"","title":"User behavior log"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Plug-InManagement/","text":"Plug -in management # Practitioner plug -in management # Lease # List Click the menu \"Plug -in management>Practitioner plug -in management>Lease\" Documentation Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Documentation\" Tenant configuration Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Tenant configuration\" Configuration at running Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Configuration at running\" Plug -in lease # List Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease\" Documentation Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease>Documentation\" lease Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease>lease\"","title":"Plug -in management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Plug-InManagement/#plug-in-management","text":"","title":"Plug -in management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Plug-InManagement/#practitioner-plug-in-management","text":"","title":"Practitioner plug -in management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Plug-InManagement/#lease","text":"List Click the menu \"Plug -in management>Practitioner plug -in management>Lease\" Documentation Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Documentation\" Tenant configuration Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Tenant configuration\" Configuration at running Click the menu \"Plug -in management>Practitioner plug -in management>Lease>Configuration at running\"","title":"Lease"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/Plug-InManagement/#plug-in-lease","text":"List Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease\" Documentation Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease>Documentation\" lease Click the menu \"Plug -in management>Practitioner plug -in management>Plug -in lease>lease\"","title":"Plug -in lease"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/","text":"Tenant management # Tenant configuration # Tenant configuration Click the menu \"Tenant management>Tenant configuration\" Sub -administrator # List Click the menu \"Tenant management>Tenant configuration\" create Click the menu \"Tenant management>Tenant configuration>create\" edit Click the menu \"Tenant management>Tenant configuration>Choose a record>Click Edit\" delete Click the menu \"Tenant management>Tenant configuration>Choose a record>Click to delete\" Theme settings # List Click the menu \"Tenant management>Theme settings\" create Click the menu \"Tenant management>Theme settings>create\" edit Click the menu \"Tenant management>Theme settings>Choose a record>Click Edit\" delete Click the menu \"Tenant management>Theme settings>Choose a record>Click to delete\" Central platform # set up Click the menu \"Tenant management>Central platform>set up\"","title":"Tenant management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/#tenant-management","text":"","title":"Tenant management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/#tenant-configuration","text":"Tenant configuration Click the menu \"Tenant management>Tenant configuration\"","title":"Tenant configuration"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/#sub-administrator","text":"List Click the menu \"Tenant management>Tenant configuration\" create Click the menu \"Tenant management>Tenant configuration>create\" edit Click the menu \"Tenant management>Tenant configuration>Choose a record>Click Edit\" delete Click the menu \"Tenant management>Tenant configuration>Choose a record>Click to delete\"","title":"Sub -administrator"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/#theme-settings","text":"List Click the menu \"Tenant management>Theme settings\" create Click the menu \"Tenant management>Theme settings>create\" edit Click the menu \"Tenant management>Theme settings>Choose a record>Click Edit\" delete Click the menu \"Tenant management>Theme settings>Choose a record>Click to delete\"","title":"Theme settings"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/TenantManagement/#central-platform","text":"set up Click the menu \"Tenant management>Central platform>set up\"","title":"Central platform"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/UserManagement/","text":"User Management # user list # List Click the menu \"User Management>user list\" create Click the menu \"User Management>user list>create\" edit Click the menu \"User Management>user list>Choose a record>Click Edit\" delete Click the menu \"User Management>user list>Choose a record>Click to delete\" Import Click the menu \"User Management>user list>Import\" \"Choose down pull down\uff0cClick the export template\" \"Form data\uff0cClick to import\" Export Click the menu \"User Management>user list>Export\" reset Password Click the menu \"User Management>user list>Choose a record>reset Password\" User group # List Click the menu \"User Management>User group\" create Click the menu \"User Management>User group>create\" edit Click the menu \"User Management>User group>Choose a record>Click Edit\" delete Click the menu \"User Management>User group>Choose a record>Click to delete\" Import Click the menu \"User Management>User group>Import\" \"Choose down pull down\uff0cClick the export template\" \"Form data\uff0cClick to import\" Export Click the menu \"User Management>User group>Export\" Add user Click the menu \"User Management>User group>Click to select a group>Click to add users\" Add user Click the menu \"User Management>User group>Click to select a group>Select users on the right and delete\" Account life cycle # Edit configuration Click the menu \"User Management>Account life cycle>Edit life cycle timing task\" create Click the menu \"User Management>Account life cycle>create\" edit Click the menu \"User Management>Account life cycle>Choose a record>Click Edit\" delete Click the menu \"User Management>Account life cycle>Choose a record>Click to delete\"","title":"User Management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/UserManagement/#user-management","text":"","title":"User Management"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/UserManagement/#user-list","text":"List Click the menu \"User Management>user list\" create Click the menu \"User Management>user list>create\" edit Click the menu \"User Management>user list>Choose a record>Click Edit\" delete Click the menu \"User Management>user list>Choose a record>Click to delete\" Import Click the menu \"User Management>user list>Import\" \"Choose down pull down\uff0cClick the export template\" \"Form data\uff0cClick to import\" Export Click the menu \"User Management>user list>Export\" reset Password Click the menu \"User Management>user list>Choose a record>reset Password\"","title":"user list"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/UserManagement/#user-group","text":"List Click the menu \"User Management>User group\" create Click the menu \"User Management>User group>create\" edit Click the menu \"User Management>User group>Choose a record>Click Edit\" delete Click the menu \"User Management>User group>Choose a record>Click to delete\" Import Click the menu \"User Management>User group>Import\" \"Choose down pull down\uff0cClick the export template\" \"Form data\uff0cClick to import\" Export Click the menu \"User Management>User group>Export\" Add user Click the menu \"User Management>User group>Click to select a group>Click to add users\" Add user Click the menu \"User Management>User group>Click to select a group>Select users on the right and delete\"","title":"User group"},{"location":"%20%20%20User%20Guide/User%20Manual/%20Tenant%20Administrator/UserManagement/#account-life-cycle","text":"Edit configuration Click the menu \"User Management>Account life cycle>Edit life cycle timing task\" create Click the menu \"User Management>Account life cycle>create\" edit Click the menu \"User Management>Account life cycle>Choose a record>Click Edit\" delete Click the menu \"User Management>Account life cycle>Choose a record>Click to delete\"","title":"Account life cycle"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/ApplicationStore-PrivateApplication/","text":"app Store-Private application # app Store\u2014Private application Click the menu \"Application management>app Store>Private application\" Buy or try Click the menu \"Application management>app Store>Private application>Choose a record>Buy or try\" bought Click the menu \"Application management>app Store>Private application>bought>\" View default configuration Click the menu \"Application management>app Store>Private application>bought>Choose a record>default allocation\" Install Click the menu \"Application management>app Store>Private application>bought>Choose a record>Install\"\uff0cConfigure reference helm Chart's values.yaml\uff0cCan be empty Custom configuration parameter description\uff1aApply installation support automatic configuration OIDC to log into the application\uff0cThe parameters in the table below will be sent to Helm Chart's values.Replace it with the actual OIDC address before yaml parameter illustrate example $arkid_oidc_root_url ArkIDApplication entry address https://1 You will add 4470 A0 D. 16 DB 459431.Ark.dev.Dragon Turtle Technology.com $arkid_oidc_client_id client_id 1hQdgZJ9Gf9KhQGhL9RLmatEV1q97rp8Od9kR8n8 $arkid_oidc_client_secret client_secret FT2rETrpg9tmtB0wChSBUmRLlHXNH6eesPbeRl2qHpZ1nD3fcCFlEfa3UxLRsiR5MpHvc15i6zZcwLmMtcqVy5zf7ONqSOALNRXP1bBaWALbn2nrn8BLtEuaFIZvtrEm $arkid_oidc_authorize authorizeaddress https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/app/J0 d 0253 a-Accompanied-4 Slack-8506-Dam 1275573 Bear/oauth/authorize/ $arkid_oidc_token Get the token address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/token/ $arkid_oidc_jwks Get the JWKS certificate address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/.well-known/jwks.json $arkid_oidc_userinfo Get user information address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/userinfo/ $arkid_oidc_logout Login address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oidc/logout/ Example 1\uff1a Jumpserver Installation parameter global: storageClass: standard ## Please configure your MySQL server first ## Jumpserver will not start the external MySQL server. ## externalDatabase: engine: mysql host: jms-mysql port: 3306 user: root password: \"weakPassword\" database: jumpserver ## Please configure your Redis server first ## Jumpserver will not start the external Redis server. ## externalRedis: host: jms-redis-master port: 6379 password: \"weakPassword\" ingress: hosts: - \"test.jumpserver.org\" core: config: # Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50` secretKey: \"GxrLH7rewfsRN8B9Zl6MEGD50Uou4LF6UVsEIwfsRN8B9Zl6MEGD50UouayGMhYll8dqmn\" # Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` bootstrapToken: \"ilR8RvAbK7lgRTxs\" log: level: DEBUG env: # Doc: https://docs.jumpserver.org/zh/master/admin-guide/authentication/openid/#5-jumpserver AUTH_OPENID: True BASE_SITE_URL: $arkid_oidc_root_url AUTH_OPENID_CLIENT_ID: $arkid_oidc_client_id AUTH_OPENID_CLIENT_SECRET: $arkid_oidc_client_secret AUTH_OPENID_PROVIDER_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_AUTHORIZATION_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_TOKEN_ENDPOINT: $arkid_oidc_client_token AUTH_OPENID_PROVIDER_JWKS_ENDPOINT: $arkid_oidc_jwks AUTH_OPENID_PROVIDER_USERINFO_ENDPOINT: $arkid_oidc_client_userinfo AUTH_OPENID_PROVIDER_END_SESSION_ENDPOINT: $arkid_oidc_logout AUTH_OPENID_PROVIDER_SIGNATURE_ALG: HS256 AUTH_OPENID_PROVIDER_SIGNATURE_KEY: null AUTH_OPENID_SCOPES: openid profile email AUTH_OPENID_ID_TOKEN_MAX_AGE: 60 AUTH_OPENID_ID_TOKEN_INCLUDE_CLAIMS: True AUTH_OPENID_USE_STATE: True AUTH_OPENID_USE_NONCE: True AUTH_OPENID_SHARE_SESSION: False AUTH_OPENID_IGNORE_SSL_VERIFICATION: True Example 2\uff1a Scrape Installation parameter ## arkid-oidc.yaml env: GF_SERVER_ROOT_URL: $arkid_oidc_root_url GF_AUTH_GENERIC_OAUTH_ENABLED: \"true\" GF_AUTH_GENERIC_OAUTH_NAME: \"arkid\" GF_AUTH_GENERIC_OAUTH_CLIENT_ID: \"$arkid_oidc_client_id\" GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: \"$arkid_oidc_client_secret\" GF_AUTH_GENERIC_OAUTH_SCOPES: \"email,openid,userinfo\" GF_AUTH_GENERIC_OAUTH_AUTH_URL: \"$arkid_oidc_authorize\" GF_AUTH_GENERIC_OAUTH_TOKEN_URL: \"$arkid_oidc_token\" GF_AUTH_GENERIC_OAUTH_API_URL: \"$arkid_oidc_userinfo\" If the privatization application has an entry address\uff0cAfter installation, automatically create the corresponding entry application in the application list # Private application Chart.yaml Annotations must be added to configuration\uff0cOnly then will automatically create an entry application annotations: web_url_from_services: App To access the application\uff0cClick on the homepage>App\uff0cAccessable application Example 1\uff1aJumpserver Homepage click JumpServer Enter JumpServer, Click Openid to log in\uff0cStart OIDC login JumpServer Example 2\uff1aScrape Home Click Grafana Enter Grafana\uff0cClick SIGN in with arkid\uff0cStart OIDC login Grafana","title":"app Store-Private application"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/ApplicationStore-PrivateApplication/#app-store-private-application","text":"app Store\u2014Private application Click the menu \"Application management>app Store>Private application\" Buy or try Click the menu \"Application management>app Store>Private application>Choose a record>Buy or try\" bought Click the menu \"Application management>app Store>Private application>bought>\" View default configuration Click the menu \"Application management>app Store>Private application>bought>Choose a record>default allocation\" Install Click the menu \"Application management>app Store>Private application>bought>Choose a record>Install\"\uff0cConfigure reference helm Chart's values.yaml\uff0cCan be empty Custom configuration parameter description\uff1aApply installation support automatic configuration OIDC to log into the application\uff0cThe parameters in the table below will be sent to Helm Chart's values.Replace it with the actual OIDC address before yaml parameter illustrate example $arkid_oidc_root_url ArkIDApplication entry address https://1 You will add 4470 A0 D. 16 DB 459431.Ark.dev.Dragon Turtle Technology.com $arkid_oidc_client_id client_id 1hQdgZJ9Gf9KhQGhL9RLmatEV1q97rp8Od9kR8n8 $arkid_oidc_client_secret client_secret FT2rETrpg9tmtB0wChSBUmRLlHXNH6eesPbeRl2qHpZ1nD3fcCFlEfa3UxLRsiR5MpHvc15i6zZcwLmMtcqVy5zf7ONqSOALNRXP1bBaWALbn2nrn8BLtEuaFIZvtrEm $arkid_oidc_authorize authorizeaddress https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/app/J0 d 0253 a-Accompanied-4 Slack-8506-Dam 1275573 Bear/oauth/authorize/ $arkid_oidc_token Get the token address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/token/ $arkid_oidc_jwks Get the JWKS certificate address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/.well-known/jwks.json $arkid_oidc_userinfo Get user information address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/userinfo/ $arkid_oidc_logout Login address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oidc/logout/ Example 1\uff1a Jumpserver Installation parameter global: storageClass: standard ## Please configure your MySQL server first ## Jumpserver will not start the external MySQL server. ## externalDatabase: engine: mysql host: jms-mysql port: 3306 user: root password: \"weakPassword\" database: jumpserver ## Please configure your Redis server first ## Jumpserver will not start the external Redis server. ## externalRedis: host: jms-redis-master port: 6379 password: \"weakPassword\" ingress: hosts: - \"test.jumpserver.org\" core: config: # Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50` secretKey: \"GxrLH7rewfsRN8B9Zl6MEGD50Uou4LF6UVsEIwfsRN8B9Zl6MEGD50UouayGMhYll8dqmn\" # Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` bootstrapToken: \"ilR8RvAbK7lgRTxs\" log: level: DEBUG env: # Doc: https://docs.jumpserver.org/zh/master/admin-guide/authentication/openid/#5-jumpserver AUTH_OPENID: True BASE_SITE_URL: $arkid_oidc_root_url AUTH_OPENID_CLIENT_ID: $arkid_oidc_client_id AUTH_OPENID_CLIENT_SECRET: $arkid_oidc_client_secret AUTH_OPENID_PROVIDER_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_AUTHORIZATION_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_TOKEN_ENDPOINT: $arkid_oidc_client_token AUTH_OPENID_PROVIDER_JWKS_ENDPOINT: $arkid_oidc_jwks AUTH_OPENID_PROVIDER_USERINFO_ENDPOINT: $arkid_oidc_client_userinfo AUTH_OPENID_PROVIDER_END_SESSION_ENDPOINT: $arkid_oidc_logout AUTH_OPENID_PROVIDER_SIGNATURE_ALG: HS256 AUTH_OPENID_PROVIDER_SIGNATURE_KEY: null AUTH_OPENID_SCOPES: openid profile email AUTH_OPENID_ID_TOKEN_MAX_AGE: 60 AUTH_OPENID_ID_TOKEN_INCLUDE_CLAIMS: True AUTH_OPENID_USE_STATE: True AUTH_OPENID_USE_NONCE: True AUTH_OPENID_SHARE_SESSION: False AUTH_OPENID_IGNORE_SSL_VERIFICATION: True Example 2\uff1a Scrape Installation parameter ## arkid-oidc.yaml env: GF_SERVER_ROOT_URL: $arkid_oidc_root_url GF_AUTH_GENERIC_OAUTH_ENABLED: \"true\" GF_AUTH_GENERIC_OAUTH_NAME: \"arkid\" GF_AUTH_GENERIC_OAUTH_CLIENT_ID: \"$arkid_oidc_client_id\" GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: \"$arkid_oidc_client_secret\" GF_AUTH_GENERIC_OAUTH_SCOPES: \"email,openid,userinfo\" GF_AUTH_GENERIC_OAUTH_AUTH_URL: \"$arkid_oidc_authorize\" GF_AUTH_GENERIC_OAUTH_TOKEN_URL: \"$arkid_oidc_token\" GF_AUTH_GENERIC_OAUTH_API_URL: \"$arkid_oidc_userinfo\" If the privatization application has an entry address\uff0cAfter installation, automatically create the corresponding entry application in the application list # Private application Chart.yaml Annotations must be added to configuration\uff0cOnly then will automatically create an entry application annotations: web_url_from_services: App To access the application\uff0cClick on the homepage>App\uff0cAccessable application Example 1\uff1aJumpserver Homepage click JumpServer Enter JumpServer, Click Openid to log in\uff0cStart OIDC login JumpServer Example 2\uff1aScrape Home Click Grafana Enter Grafana\uff0cClick SIGN in with arkid\uff0cStart OIDC login Grafana","title":"app Store-Private application"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/LanguagePackageManagement/","text":"Language Package Management # List Click the menu \"Platform management>Language Package Management\" create Click the menu \"Platform management>Language Package Management>create\" edit Click the menu \"Platform management>Language Package Management>Choose a record>Click Edit\" delete Click the menu \"Platform management>Language Package Management>Choose a record>Click to delete\"","title":"Language Package Management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/LanguagePackageManagement/#language-package-management","text":"List Click the menu \"Platform management>Language Package Management\" create Click the menu \"Platform management>Language Package Management>create\" edit Click the menu \"Platform management>Language Package Management>Choose a record>Click Edit\" delete Click the menu \"Platform management>Language Package Management>Choose a record>Click to delete\"","title":"Language Package Management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/MenuManagement/","text":"Menu management # List Click the menu \"Platform management>Menu management\" switch Click the menu \"Platform management>Menu management>Choose a record>Click the switch\"","title":"Menu management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/MenuManagement/#menu-management","text":"List Click the menu \"Platform management>Menu management\" switch Click the menu \"Platform management>Menu management>Choose a record>Click the switch\"","title":"Menu management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/PlatformConfiguration/","text":"Platform configuration # Configuration Click the menu \"Platform management>Platform configuration\"","title":"Platform configuration"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/PlatformConfiguration/#platform-configuration","text":"Configuration Click the menu \"Platform management>Platform configuration\"","title":"Platform configuration"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/Plug-InManagement/","text":"Platform plug -in management # Installed # List Click the menu \"Plug -in management>Platform plug -in management>Installed\" Documentation Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>Documentation\" renew Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>renew\" Plug -in configuration Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>Plug -in configuration\" Plug -in store # List Click the menu \"Plug -in management>Platform plug -in management>Plug -in store\" Documentation Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>Documentation\" Buy Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>Buy\" try out Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>try out\" Binding agent Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Binding agent\" bought # List Click the menu \"Plug -in management>Platform plug -in management>bought\" Documentation Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>Documentation\" historic version Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>historic version\" Install Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>Install\"","title":"Platform plug -in management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/Plug-InManagement/#platform-plug-in-management","text":"","title":"Platform plug -in management"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/Plug-InManagement/#installed","text":"List Click the menu \"Plug -in management>Platform plug -in management>Installed\" Documentation Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>Documentation\" renew Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>renew\" Plug -in configuration Click the menu \"Plug -in management>Platform plug -in management>Installed>Choose a record>Plug -in configuration\"","title":"Installed"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/Plug-InManagement/#plug-in-store","text":"List Click the menu \"Plug -in management>Platform plug -in management>Plug -in store\" Documentation Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>Documentation\" Buy Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>Buy\" try out Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Choose a record>try out\" Binding agent Click the menu \"Plug -in management>Platform plug -in management>Plug -in store>Binding agent\"","title":"Plug -in store"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/Plug-InManagement/#bought","text":"List Click the menu \"Plug -in management>Platform plug -in management>bought\" Documentation Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>Documentation\" historic version Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>historic version\" Install Click the menu \"Plug -in management>Platform plug -in management>bought>Choose a record>Install\"","title":"bought"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/TenantList/","text":"Tenant list # List Click the menu \"Platform management>Tenant list\" create Click the menu \"Platform management>Tenant list>create\" Switch Click the menu \"Platform management>Tenant list>Choose a record>Click to switch\"","title":"Tenant list"},{"location":"%20%20%20User%20Guide/User%20Manual/Platform%20Administrator/TenantList/#tenant-list","text":"List Click the menu \"Platform management>Tenant list\" create Click the menu \"Platform management>Tenant list>create\" Switch Click the menu \"Platform management>Tenant list>Choose a record>Click to switch\"","title":"Tenant list"},{"location":"%20%20Business%20Cooperation%20Guide/","text":"Business Cooperation Guide # Any individual or enterprise\uff0cEveryone is welcome to become our business partner\u3002 You can participate in and build the ARKID ecology through the following three methods\uff1a become ARKID developer become ARKID agent become Arkid operator At the same time, we are also open to various types of cooperation methods\uff0cIf you have any other thoughts\uff0cWelcome to contact us\u3002 Contact mailbox\uff1a[bd@longguikeji.com] (Mailto:bd@longguikeji.com)","title":"Business Cooperation Guide"},{"location":"%20%20Business%20Cooperation%20Guide/#business-cooperation-guide","text":"Any individual or enterprise\uff0cEveryone is welcome to become our business partner\u3002 You can participate in and build the ARKID ecology through the following three methods\uff1a become ARKID developer become ARKID agent become Arkid operator At the same time, we are also open to various types of cooperation methods\uff0cIf you have any other thoughts\uff0cWelcome to contact us\u3002 Contact mailbox\uff1a[bd@longguikeji.com] (Mailto:bd@longguikeji.com)","title":"Business Cooperation Guide"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/","text":"ArkIDAgent # If you can contact customers\uff0cAnd conquer customers\u3002That's very suitable to be an ARKID agent\u3002 Proxy condition # Have the opportunity to contact customers Having ARKID account Visit ArkStore Plug -in proxy rules # Visit ArkStore Clicked Agent-Agent details\uff0cHere you can see all the information of the current agent Agent trademark Total sales\uff08Market guidance\uff09 Annual sales\uff08Market guidance\uff09 Actual total sales\uff08Trading price\uff09 Actual annual sales\uff08Trading price\uff09 Initial level Annual Agent level Level discount Sales required for upgrade Proxy discount\uff08Can be changed\uff09 Explain the meaning and role of each parameter\uff1a Total sales\uff0cIt shows the total cumulative sales of this agent,Calculate by the development of the developer's market guidance price\u3002 Annual sales\uff0cRefers to this year's sales\uff0cCalculate by the development of the developer's market guidance price\u3002 Actual total sales\uff0cCalculate with the actual transaction price\uff0cAll cumulative sales\u3002 Actual annual sales\uff0cCalculated at the actual transaction price\uff0cThis year's sales\u3002 Agent trademark # When your client uses privatization deployment to install ARKID\uff0cYou can be in the back office of the ARKID management\uff1aPlatform management - Platform plug -in Found the upper right corner of the page \u201cSet an agent\u201d Button\uff0cClick and fill in the pop -up dialog box\"Agent trademark\"\uff0cClick to confirm\u3002This completes the client\uff0cAgent's binding\u3002 After the customer completes the agent binding\uff0cThe price of its plug -in store and application store will display the price of the agent's agent\uff0cAnd all purchase behaviors will pass the agent to produce orders\u3002 Agent level # Total sales\uff0cAgent level\uff08Initial level\uff0cAnnual\uff09\uff0c Agent level discount\uff0cSales required for annual level upgrade\u3002These parameters are part of the agent level system\u3002 Agent level Pick Initial level of agents and Agent year Maximum value Initial level of agents\uff1aAgent last year Annual Will become agents this year Initial level \uff0cThe default value is 1 Agent year\uff1aEarly morning on January 1st every year, it will be reset to 1\uff0cAnd the annual sales clearly zero The agent level will determine the corresponding level discount\uff0cSee the table below\uff1a Proxy Level discount Annual Upgrade requires annual sales\uff08Yuan\uff09 1\uff08Initial level\uff09 0.9 0 2 0.8 200 3 0.7 400 4 0.6 800 5 0.5 1600 6 0.4 3200 7 0.3 6400 8 0.2 12800 9 0.1 25600 10 0 51200 Notice Annual sales of annual upgrade\uff0cIt is calculated based on market guidance price\u3002 Level discount determines the minimum discount of the agent to get the goods\uff0cIf the developer of this product is set up Cost discount Agent Level discount \uff0cFollow Level discount Calculate the price of the goods\uff0cIf a developer Cost discount Greater than agent Level discount \uff0cThen press Cost discount Calculate the price of the goods\u3002which is\uff1a Agent takes the goods price = Developer market guidance price * Maximum value (developer cost discount\uff0cAgent level discount) + ArkStore platform commission ArkStorePlatform commission # ArkStorePlatform commission = Minimum\uff08Developer market guidance price * 0.1 \uff0c Developer cost price * 0.3\uff09 This means\uff0cIf the developer's market guidance price is 0\uff0cImmediately free\uff0cUsers can get it for free\u3002 If the cost of the developer is 0\uff0cThat is, the cost discount of developers is 0\uff0cThen the agent can pick up the goods for free\u3002 Proxy discount # Set freely by agents 0-1 Number\u3002 The calculation rules are as follows # Agent takes the goods price Agent takes the goods price = Developer market guidance price * Maximum value (developer cost discount\uff0cAgent level discount) + ArkStore platform commission Product expected sales price Product expected sales price = Developer market guidance price * Agent agent discount + Agent takes the goods price Product final sales price\uff1aIt must not be higher than the market guidance price agreed Product final sales price = Minimum value (product expected sales price, Developer market guidance price) Agent profit = Developer market guidance price * Agent agent discount\u3002 Agent profit = Product final sales price - Agent takes the goods price Application proxy rules # Application proxy rules compared to Plug -in Be more complicated\u3002Because the application access standards are different\uff0cThe division ratio required by each application developer\uff0cDifferent accounting periods\u3002Each application requires specific proxy rules\u3002 Roughly divided into these categories\uff1a OIDC and Store payment The application uses the OIDC protocol to connect with Arkid and connect to the store payment standard\uff0cThe proxy rules are consistent with the plug -in\u3002 In -application payment Application OIDC protocol or Custom protocol Access with Arkid\uff0cBut use internal payment\uff0cIt also means that the application is free application\u3002The division ratio is based on the developer set\u3002 sponsored links and In -application payment If the application only uses the promotion link\uff0cARKID cannot obtain the mapping relationship with ARKID identity in the application\uff0cUnable to divide the agent according to the actual usage\u3002 The promotion link uses a record of clicks and calculates the clicks to the proportion\uff0cDivide the proportion through this clicks\u3002 Order and withdrawal # You can check the agent order or initiate a withdrawal application in the ARKSTORE expense center\u3002 Q&A #","title":"ArkIDAgent"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#arkidagent","text":"If you can contact customers\uff0cAnd conquer customers\u3002That's very suitable to be an ARKID agent\u3002","title":"ArkIDAgent"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#proxy-condition","text":"Have the opportunity to contact customers Having ARKID account Visit ArkStore","title":"Proxy condition"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#plug-in-proxy-rules","text":"Visit ArkStore Clicked Agent-Agent details\uff0cHere you can see all the information of the current agent Agent trademark Total sales\uff08Market guidance\uff09 Annual sales\uff08Market guidance\uff09 Actual total sales\uff08Trading price\uff09 Actual annual sales\uff08Trading price\uff09 Initial level Annual Agent level Level discount Sales required for upgrade Proxy discount\uff08Can be changed\uff09 Explain the meaning and role of each parameter\uff1a Total sales\uff0cIt shows the total cumulative sales of this agent,Calculate by the development of the developer's market guidance price\u3002 Annual sales\uff0cRefers to this year's sales\uff0cCalculate by the development of the developer's market guidance price\u3002 Actual total sales\uff0cCalculate with the actual transaction price\uff0cAll cumulative sales\u3002 Actual annual sales\uff0cCalculated at the actual transaction price\uff0cThis year's sales\u3002","title":"Plug -in proxy rules"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#agent-trademark","text":"When your client uses privatization deployment to install ARKID\uff0cYou can be in the back office of the ARKID management\uff1aPlatform management - Platform plug -in Found the upper right corner of the page \u201cSet an agent\u201d Button\uff0cClick and fill in the pop -up dialog box\"Agent trademark\"\uff0cClick to confirm\u3002This completes the client\uff0cAgent's binding\u3002 After the customer completes the agent binding\uff0cThe price of its plug -in store and application store will display the price of the agent's agent\uff0cAnd all purchase behaviors will pass the agent to produce orders\u3002","title":"Agent trademark"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#agent-level","text":"Total sales\uff0cAgent level\uff08Initial level\uff0cAnnual\uff09\uff0c Agent level discount\uff0cSales required for annual level upgrade\u3002These parameters are part of the agent level system\u3002 Agent level Pick Initial level of agents and Agent year Maximum value Initial level of agents\uff1aAgent last year Annual Will become agents this year Initial level \uff0cThe default value is 1 Agent year\uff1aEarly morning on January 1st every year, it will be reset to 1\uff0cAnd the annual sales clearly zero The agent level will determine the corresponding level discount\uff0cSee the table below\uff1a Proxy Level discount Annual Upgrade requires annual sales\uff08Yuan\uff09 1\uff08Initial level\uff09 0.9 0 2 0.8 200 3 0.7 400 4 0.6 800 5 0.5 1600 6 0.4 3200 7 0.3 6400 8 0.2 12800 9 0.1 25600 10 0 51200 Notice Annual sales of annual upgrade\uff0cIt is calculated based on market guidance price\u3002 Level discount determines the minimum discount of the agent to get the goods\uff0cIf the developer of this product is set up Cost discount Agent Level discount \uff0cFollow Level discount Calculate the price of the goods\uff0cIf a developer Cost discount Greater than agent Level discount \uff0cThen press Cost discount Calculate the price of the goods\u3002which is\uff1a Agent takes the goods price = Developer market guidance price * Maximum value (developer cost discount\uff0cAgent level discount) + ArkStore platform commission","title":"Agent level"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#arkstoreplatform-commission","text":"ArkStorePlatform commission = Minimum\uff08Developer market guidance price * 0.1 \uff0c Developer cost price * 0.3\uff09 This means\uff0cIf the developer's market guidance price is 0\uff0cImmediately free\uff0cUsers can get it for free\u3002 If the cost of the developer is 0\uff0cThat is, the cost discount of developers is 0\uff0cThen the agent can pick up the goods for free\u3002","title":"ArkStorePlatform commission"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#proxy-discount","text":"Set freely by agents 0-1 Number\u3002","title":"Proxy discount"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#the-calculation-rules-are-as-follows","text":"Agent takes the goods price Agent takes the goods price = Developer market guidance price * Maximum value (developer cost discount\uff0cAgent level discount) + ArkStore platform commission Product expected sales price Product expected sales price = Developer market guidance price * Agent agent discount + Agent takes the goods price Product final sales price\uff1aIt must not be higher than the market guidance price agreed Product final sales price = Minimum value (product expected sales price, Developer market guidance price) Agent profit = Developer market guidance price * Agent agent discount\u3002 Agent profit = Product final sales price - Agent takes the goods price","title":"The calculation rules are as follows"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#application-proxy-rules","text":"Application proxy rules compared to Plug -in Be more complicated\u3002Because the application access standards are different\uff0cThe division ratio required by each application developer\uff0cDifferent accounting periods\u3002Each application requires specific proxy rules\u3002 Roughly divided into these categories\uff1a OIDC and Store payment The application uses the OIDC protocol to connect with Arkid and connect to the store payment standard\uff0cThe proxy rules are consistent with the plug -in\u3002 In -application payment Application OIDC protocol or Custom protocol Access with Arkid\uff0cBut use internal payment\uff0cIt also means that the application is free application\u3002The division ratio is based on the developer set\u3002 sponsored links and In -application payment If the application only uses the promotion link\uff0cARKID cannot obtain the mapping relationship with ARKID identity in the application\uff0cUnable to divide the agent according to the actual usage\u3002 The promotion link uses a record of clicks and calculates the clicks to the proportion\uff0cDivide the proportion through this clicks\u3002","title":"Application proxy rules"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#order-and-withdrawal","text":"You can check the agent order or initiate a withdrawal application in the ARKSTORE expense center\u3002","title":"Order and withdrawal"},{"location":"%20%20Business%20Cooperation%20Guide/Agent/#qa","text":"","title":"Q&amp;A"},{"location":"%20%20Business%20Cooperation%20Guide/IncomeCalculator/","text":"Income calculator # It is convenient to calculate a product sales\uff0cParticipate in the final price of the income and product of all parties\u3002 function compute(){ //Developer market_price = document.getElementById(\"market_price\").value cost_rate = document.getElementById(\"cost_rate\").value income = round(market_price * cost_rate) //ArkStore market_price_rate = document.getElementById(\"market_price_rate\").value cost_price_rate = document.getElementById(\"cost_price_rate\").value market_price_rate_price = round(market_price * market_price_rate) cost_price_rate_price = round(income * cost_price_rate) final_rate_price = Math.min(market_price_rate_price, cost_price_rate_price) init_level = document.getElementById(\"init_level\").value year_all_sell = document.getElementById(\"year_all_sell\").value year_level = 1 if(year_all_sell >= 200) year_level = 2 if(year_all_sell >= 400) year_level = 3 if(year_all_sell >= 800) year_level = 4 if(year_all_sell >= 1600) year_level = 5 if(year_all_sell >= 3200) year_level = 6 if(year_all_sell >= 6400) year_level = 7 if(year_all_sell >= 12800) year_level = 8 if(year_all_sell >= 25600) year_level = 9 if(year_all_sell >= 51200) year_level = 10 dl_level = Math.max(init_level, year_level) dl_level_rate = round((10-dl_level)*0.1) dl_final_rate = Math.max(dl_level_rate, cost_rate) dl_final_rate_price = round(market_price * dl_final_rate + final_rate_price) dl_rate = document.getElementById(\"dl_rate\").value dl_hope_income = round(market_price * dl_rate) hope_price = dl_final_rate_price + dl_hope_income final_price = Math.min(hope_price, market_price) dl_income = final_price - dl_final_rate_price document.getElementById(\"market_price\").value = market_price document.getElementById(\"income\").value = income document.getElementById(\"market_price_rate_price\").value = market_price_rate_price document.getElementById(\"cost_price_rate_price\").value = cost_price_rate_price document.getElementById(\"final_rate_price\").value = final_rate_price document.getElementById(\"year_level\").value = year_level document.getElementById(\"dl_level\").value = dl_level document.getElementById(\"dl_level_rate\").value = dl_level_rate document.getElementById(\"dl_final_rate\").value = dl_final_rate document.getElementById(\"dl_final_rate_price\").value = dl_final_rate_price document.getElementById(\"dl_hope_income\").value = dl_hope_income document.getElementById(\"hope_price\").value = hope_price document.getElementById(\"final_price\").value = final_price document.getElementById(\"dl_income\").value = dl_income } function round(num){ return Math.round(num * 100)/100 } Developer Market guidance Customizer Cost discount Developer custom income/Cost Market guidance * Cost discount ArkStoreplatform Market price Fixed value Market price cubing amount Market guidance * Market price Cost price Fixed value Cost -priced amount Cost * Cost price Final cub Cost -priced amount and Market price cubing amount Minimum value Agent Initial level Initially 1\uff0cOr last year Annual Decide Annual sales This year's market guidance price of all sales products Annual Determined by annual sales Agent level Initial level and Annual The maximum value Level discount See\uff1a\u300aThe corresponding table of the agent level and the level discount\u300b Final discount Level discount and Cost discount The maximum value Price Market guidance * Final discount + ARKSTORE platform's final commission Proxy discount Agent custom Agent expected income Market guidance * Proxy discount Product expected price Price + Agent expected income Product final price Product expected price and Market guidance Minimize Acting actual income Product final price - Price","title":"Income calculator"},{"location":"%20%20Business%20Cooperation%20Guide/IncomeCalculator/#income-calculator","text":"It is convenient to calculate a product sales\uff0cParticipate in the final price of the income and product of all parties\u3002 function compute(){ //Developer market_price = document.getElementById(\"market_price\").value cost_rate = document.getElementById(\"cost_rate\").value income = round(market_price * cost_rate) //ArkStore market_price_rate = document.getElementById(\"market_price_rate\").value cost_price_rate = document.getElementById(\"cost_price_rate\").value market_price_rate_price = round(market_price * market_price_rate) cost_price_rate_price = round(income * cost_price_rate) final_rate_price = Math.min(market_price_rate_price, cost_price_rate_price) init_level = document.getElementById(\"init_level\").value year_all_sell = document.getElementById(\"year_all_sell\").value year_level = 1 if(year_all_sell >= 200) year_level = 2 if(year_all_sell >= 400) year_level = 3 if(year_all_sell >= 800) year_level = 4 if(year_all_sell >= 1600) year_level = 5 if(year_all_sell >= 3200) year_level = 6 if(year_all_sell >= 6400) year_level = 7 if(year_all_sell >= 12800) year_level = 8 if(year_all_sell >= 25600) year_level = 9 if(year_all_sell >= 51200) year_level = 10 dl_level = Math.max(init_level, year_level) dl_level_rate = round((10-dl_level)*0.1) dl_final_rate = Math.max(dl_level_rate, cost_rate) dl_final_rate_price = round(market_price * dl_final_rate + final_rate_price) dl_rate = document.getElementById(\"dl_rate\").value dl_hope_income = round(market_price * dl_rate) hope_price = dl_final_rate_price + dl_hope_income final_price = Math.min(hope_price, market_price) dl_income = final_price - dl_final_rate_price document.getElementById(\"market_price\").value = market_price document.getElementById(\"income\").value = income document.getElementById(\"market_price_rate_price\").value = market_price_rate_price document.getElementById(\"cost_price_rate_price\").value = cost_price_rate_price document.getElementById(\"final_rate_price\").value = final_rate_price document.getElementById(\"year_level\").value = year_level document.getElementById(\"dl_level\").value = dl_level document.getElementById(\"dl_level_rate\").value = dl_level_rate document.getElementById(\"dl_final_rate\").value = dl_final_rate document.getElementById(\"dl_final_rate_price\").value = dl_final_rate_price document.getElementById(\"dl_hope_income\").value = dl_hope_income document.getElementById(\"hope_price\").value = hope_price document.getElementById(\"final_price\").value = final_price document.getElementById(\"dl_income\").value = dl_income } function round(num){ return Math.round(num * 100)/100 } Developer Market guidance Customizer Cost discount Developer custom income/Cost Market guidance * Cost discount ArkStoreplatform Market price Fixed value Market price cubing amount Market guidance * Market price Cost price Fixed value Cost -priced amount Cost * Cost price Final cub Cost -priced amount and Market price cubing amount Minimum value Agent Initial level Initially 1\uff0cOr last year Annual Decide Annual sales This year's market guidance price of all sales products Annual Determined by annual sales Agent level Initial level and Annual The maximum value Level discount See\uff1a\u300aThe corresponding table of the agent level and the level discount\u300b Final discount Level discount and Cost discount The maximum value Price Market guidance * Final discount + ARKSTORE platform's final commission Proxy discount Agent custom Agent expected income Market guidance * Proxy discount Product expected price Price + Agent expected income Product final price Product expected price and Market guidance Minimize Acting actual income Product final price - Price","title":"Income calculator"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/","text":"ArkIDOperator # If you want to operate your independent IDAAS site\uff0cYour user uses Arkid directly as a tenant\uff0cThen you can expose Arkid on the public website\uff0cConfigure the domain name\u3002 Operator conditions # Public network server (any cloud service is available) Deploy private ARKID and set domain names Open ARKID's multi -tenant switch Operating rules # Plug -in lease # Practitioner paid to use operator's Arkid service\u3002Arkid's plug -in supports lease\u3002That is, tenants need lease to use these plug -ins\u3002 The operator is regarded as a kind of agent\uff0cRelated settings are exactly the same as the agent\u3002 Also Agent level \uff0cSet up Agent discount Similar to proxy\uff0cAll tenants regard the operator as their agents\u3002The relevant calculations are as follows\uff1a Tenture rental price Tenture rental price = Developer rental market guidance price * Operator agent discount + Operator takes the price Operator takes the price Operator takes the price = Developer rental market guidance price * Maximum\uff08Developer rental cost discount\uff0cOperator agent level discount\uff09+ ArkStore platform commission ArkStorePlatform commission ArkStorePlatform commission = Minimum\uff08Developer rental market guidance price * 0.1 \uff0c Developer rental market guidance price * Developer rental cost discount * 0.3\uff09 Operator level discount Operator level discount rules\uff0cSee [Agent level discount rules] (../%20 agent/#_4) Application purchase # The operator will be regarded as the agent of its tenant\uff0cThat is, tenants purchase application\uff0cThe operator will also get the corresponding division\u3002 Operating expenses # In addition to the operator needs to purchase plug -in or apps directly from a plug -in or app store\uff0cIn principle, Long Gui will not have any additional charges to operators\uff0cIt does not rule out that the operator needs additional hosting\uff0cOperation and maintenance\uff0cDevelopment service\uff0cThis part can be sent to [BD@longguikeji.com] (Mailto:bd@longguikeji.com)\uff0cInform your needs\uff0cWe will contact you\u3002 Order and withdrawal # You can check the agent order or initiate a withdrawal application in the ARKSTORE expense center\u3002","title":"ArkIDOperator"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#arkidoperator","text":"If you want to operate your independent IDAAS site\uff0cYour user uses Arkid directly as a tenant\uff0cThen you can expose Arkid on the public website\uff0cConfigure the domain name\u3002","title":"ArkIDOperator"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#operator-conditions","text":"Public network server (any cloud service is available) Deploy private ARKID and set domain names Open ARKID's multi -tenant switch","title":"Operator conditions"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#operating-rules","text":"","title":"Operating rules"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#plug-in-lease","text":"Practitioner paid to use operator's Arkid service\u3002Arkid's plug -in supports lease\u3002That is, tenants need lease to use these plug -ins\u3002 The operator is regarded as a kind of agent\uff0cRelated settings are exactly the same as the agent\u3002 Also Agent level \uff0cSet up Agent discount Similar to proxy\uff0cAll tenants regard the operator as their agents\u3002The relevant calculations are as follows\uff1a Tenture rental price Tenture rental price = Developer rental market guidance price * Operator agent discount + Operator takes the price Operator takes the price Operator takes the price = Developer rental market guidance price * Maximum\uff08Developer rental cost discount\uff0cOperator agent level discount\uff09+ ArkStore platform commission ArkStorePlatform commission ArkStorePlatform commission = Minimum\uff08Developer rental market guidance price * 0.1 \uff0c Developer rental market guidance price * Developer rental cost discount * 0.3\uff09 Operator level discount Operator level discount rules\uff0cSee [Agent level discount rules] (../%20 agent/#_4)","title":"Plug -in lease"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#application-purchase","text":"The operator will be regarded as the agent of its tenant\uff0cThat is, tenants purchase application\uff0cThe operator will also get the corresponding division\u3002","title":"Application purchase"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#operating-expenses","text":"In addition to the operator needs to purchase plug -in or apps directly from a plug -in or app store\uff0cIn principle, Long Gui will not have any additional charges to operators\uff0cIt does not rule out that the operator needs additional hosting\uff0cOperation and maintenance\uff0cDevelopment service\uff0cThis part can be sent to [BD@longguikeji.com] (Mailto:bd@longguikeji.com)\uff0cInform your needs\uff0cWe will contact you\u3002","title":"Operating expenses"},{"location":"%20%20Business%20Cooperation%20Guide/Operator/#order-and-withdrawal","text":"You can check the agent order or initiate a withdrawal application in the ARKSTORE expense center\u3002","title":"Order and withdrawal"},{"location":"%20%20Business%20Cooperation%20Guide/TechnicalConsultationAndSupport/","text":"premise # arkidKernel use AGPL-3.0 Open source protocol\uff0cYou can use it at random in the condition of keeping open source\u3002 If you don't want to follow the open source agreement\uff0cThen you need to obtain official business authorization\u3002The following consultation service\uff0cMetropolitan business authorization\u3002 Support range # In order to use in the development stage and production environment ArKID The company provides original business support\u3002 Service Content # Service support includes architecture review\u3001Code review\u3001troubleshooting\u3001diagnosis\u3001suggestion\u3001Upgrade and security patch\uff0cTo ensure that the Arkid's normal operation\u3002 If you have modified the core of Arkid\uff0cOr have custom plugins\uff0cIt is recommended to buy a high -end version\uff0cSo that we can understand these changes and position and solve the fault faster\u3002 Standard version High -end version Commercial authorization \u2713 \u2713 Recommendation mode Critical business Critical business Close communication Operation and maintenance deployment \u2713 \u2713 Fault investigation - \u2713 Patch \u2713 \u2713 new version update - \u2713 Performance tuning - \u2713 technical consulting&Answer questions \u2713 \u2713 Architecture review \u2713 \u2713 Code review - \u2713 Support method Email\\WeChat Email\\WeChat\\Phone Support time operating hours\uff085x8h\uff09 Sd 24h Response time SLA 8 Hour high\uff1a30 minute;middle\uff1a1 Hour;Low\uff1a24 Hour Technical support contact person 1 2 Technical support manager - \u2713 Inspection - \u2713 Gift additional development support time - 5 people TOLL # According to different service levels\uff0cTolls are based on annual subscriptions\u3002Beyond the duration of development support in the package\uff0cExtracted payment\u3002 Standard version\uff1a 50000 Yuan/year High -end version\uff1a 120000 Yuan/year Development support\uff1a 3000 Yuan/Heavenly","title":"TechnicalConsultationAndSupport"},{"location":"%20%20Business%20Cooperation%20Guide/TechnicalConsultationAndSupport/#premise","text":"arkidKernel use AGPL-3.0 Open source protocol\uff0cYou can use it at random in the condition of keeping open source\u3002 If you don't want to follow the open source agreement\uff0cThen you need to obtain official business authorization\u3002The following consultation service\uff0cMetropolitan business authorization\u3002","title":"premise"},{"location":"%20%20Business%20Cooperation%20Guide/TechnicalConsultationAndSupport/#support-range","text":"In order to use in the development stage and production environment ArKID The company provides original business support\u3002","title":"Support range"},{"location":"%20%20Business%20Cooperation%20Guide/TechnicalConsultationAndSupport/#service-content","text":"Service support includes architecture review\u3001Code review\u3001troubleshooting\u3001diagnosis\u3001suggestion\u3001Upgrade and security patch\uff0cTo ensure that the Arkid's normal operation\u3002 If you have modified the core of Arkid\uff0cOr have custom plugins\uff0cIt is recommended to buy a high -end version\uff0cSo that we can understand these changes and position and solve the fault faster\u3002 Standard version High -end version Commercial authorization \u2713 \u2713 Recommendation mode Critical business Critical business Close communication Operation and maintenance deployment \u2713 \u2713 Fault investigation - \u2713 Patch \u2713 \u2713 new version update - \u2713 Performance tuning - \u2713 technical consulting&Answer questions \u2713 \u2713 Architecture review \u2713 \u2713 Code review - \u2713 Support method Email\\WeChat Email\\WeChat\\Phone Support time operating hours\uff085x8h\uff09 Sd 24h Response time SLA 8 Hour high\uff1a30 minute;middle\uff1a1 Hour;Low\uff1a24 Hour Technical support contact person 1 2 Technical support manager - \u2713 Inspection - \u2713 Gift additional development support time - 5 people","title":"Service Content"},{"location":"%20%20Business%20Cooperation%20Guide/TechnicalConsultationAndSupport/#toll","text":"According to different service levels\uff0cTolls are based on annual subscriptions\u3002Beyond the duration of development support in the package\uff0cExtracted payment\u3002 Standard version\uff1a 50000 Yuan/year High -end version\uff1a 120000 Yuan/year Development support\uff1a 3000 Yuan/Heavenly","title":"TOLL"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/","text":"ArkIDDeveloper # If you have development capabilities\uff0cOr operate your own SaaS product independently\uff0cAccess only through Arkid account\uff0cYou can become an ARKID developer\u3002 Developer condition # Any individual or enterprise Have the ability to develop self -research Having ARKID account Visit ArkStore Developers can provide two types of products from the ARKID ecology\uff1a ARKID plug -in and SaaS application \u3002 Price rule # Store payment # The plug -in can only choose the way the store pays\uff0cApplication can be a way for store payment or in -app payment\u3002 Whether it is a plug -in or application\uff0cDevelopers can set prices\u3002 There are two categories\uff1a price and Lease price \uff0cThe composition of the two prices is the same\u3002 The price contains two elements\uff1a Market guidance and Cost discount The unit of market guidance is\uff1a X yuan/Y people/Zky As X=0\uff0cIt is considered free When Y=0\uff0cIt is considered unlimited number of people As Z=0\uff0cIt is considered unlimited number of days The cost discount can be 0-Any two decimals between 1\u3002 Notice One product per transaction\uff0cThe actual benefits of developers are\uff1aMarket guidance * Cost discount The price can be set up multiple\uff0cTo satisfy different pricing strategies\u3002 In -application payment # Your application can not be paid through the store\uff0cIt is the user to complete the payment on your own application payment page by yourself\u3002 This situation\uff0cNeed you to sign a related cooperation agreement with Long Gui\uff0cAnd agreed to divide the proportion\uff0cJust settle with Longgui regularly\u3002 Order record # In ArkStore\uff0cClicked Expense center-Developer order You can view withdraw # In ArkStore\uff0cClicked Expense center-Apply for withdrawal You can initiate an application\uff0cAfter the background review, the payment will be made\u3002 WeChat division function is accessing\u3002","title":"ArkIDDeveloper"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#arkiddeveloper","text":"If you have development capabilities\uff0cOr operate your own SaaS product independently\uff0cAccess only through Arkid account\uff0cYou can become an ARKID developer\u3002","title":"ArkIDDeveloper"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#developer-condition","text":"Any individual or enterprise Have the ability to develop self -research Having ARKID account Visit ArkStore Developers can provide two types of products from the ARKID ecology\uff1a ARKID plug -in and SaaS application \u3002","title":"Developer condition"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#price-rule","text":"","title":"Price rule"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#store-payment","text":"The plug -in can only choose the way the store pays\uff0cApplication can be a way for store payment or in -app payment\u3002 Whether it is a plug -in or application\uff0cDevelopers can set prices\u3002 There are two categories\uff1a price and Lease price \uff0cThe composition of the two prices is the same\u3002 The price contains two elements\uff1a Market guidance and Cost discount The unit of market guidance is\uff1a X yuan/Y people/Zky As X=0\uff0cIt is considered free When Y=0\uff0cIt is considered unlimited number of people As Z=0\uff0cIt is considered unlimited number of days The cost discount can be 0-Any two decimals between 1\u3002 Notice One product per transaction\uff0cThe actual benefits of developers are\uff1aMarket guidance * Cost discount The price can be set up multiple\uff0cTo satisfy different pricing strategies\u3002","title":"Store payment"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#in-application-payment","text":"Your application can not be paid through the store\uff0cIt is the user to complete the payment on your own application payment page by yourself\u3002 This situation\uff0cNeed you to sign a related cooperation agreement with Long Gui\uff0cAnd agreed to divide the proportion\uff0cJust settle with Longgui regularly\u3002","title":"In -application payment"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#order-record","text":"In ArkStore\uff0cClicked Expense center-Developer order You can view","title":"Order record"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/#withdraw","text":"In ArkStore\uff0cClicked Expense center-Apply for withdrawal You can initiate an application\uff0cAfter the background review, the payment will be made\u3002 WeChat division function is accessing\u3002","title":"withdraw"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/","text":"Application access # Create an application # SaaSapplication # OIDC # 1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Application management-Center ARKID-Application management-Application List-Local application-create\uff0cCreate an application Click to create Create an application 3.Application for new creation\uff0cClick the protocol configuration\uff0cChoose OIDC-Platform protocol\uff0cAnd complete application access Hint OIDC-platformIs the OIDC protocol\uff0cBut this type of application can be accessed by all tenants of the entire platform\u3002You can access it according to OIDC's access process\uff0cIt's just that the user parameters will increase\uff1aTenant\u3002 4.Click on developer-SaaS application-Add application\uff0cThe access method selects OIDC\uff0cApplication ID created in the application ID input step 2\uff08You can get by clicking the editor button created in step 2 to get\uff09 Click to add an application Add application Get application ID 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 6.Submit review 7.After the dragon returns the audit\uff0cApplication is completed\uff0cAll ARKID users can see the application in their app store\u3002 Custom certification agreement # If your application uses other non -standard protocols\uff0cPlease contact us\u3002 Dense replacement # If your application is temporarily unable to access it through OIDC\uff0cWe also recommend using the method of filling in the accounts on behalf of\u3002 Create a densely filled application application is similar to the creation of OIDC applications\uff0cJust protocol configuration in step 3 to select AutoFormfill\uff0cAt the same time, select the form to fill in the form 4\u3002 The confidentiality of the account is not a one -point login protocol\uff0cJust record the account password of the corresponding site in the browser\uff0cAnd automatically fill in and click login\u3002 If the website uses an additional way such as the verification code\uff0cThen the account is not applicable to fill in\u3002 sponsored links # If the current application does not support the above -mentioned various situations\uff0cYou can just upload an exclusive promotion link of ARKID\uff0cAnd record the user's subsequent registration\uff0cLog in\uff0cPaid and other behaviors\uff0cUsed as a basis for splitting with ARKID\u3002 This is usually the case\uff0cPayment will use the form of internal payment\uff0cYou need to contact us\u3002 Private deployment application # Private deployment application packaging # Privatization deployment application adopts helm Chart method package\uff0creference\uff1ahttps://helm.sh/docs/topics/charts/ Simultaneously\uff0cPrivate deployment application packages need to be helm CHART package for additional processing\uff0cIn order to connect with ARKID application creation and automation OIDC configuration\u3002 1.Chart.yamlAdd additional fields to the file Chart.yamlAnnotations must be added to configuration\uff0cOnly will ARKID automatically create an entry application annotations: web_url_from_services: HelmChartApp Exemplary\uff1a annotations: category: Infrastructure # This will be installed after the use of Grafana in privatization\uff0cIn Arkid application management page\uff0cAutomatically create Grafana application web_url_from_services: grafana apiVersion: v2 appVersion: 9.2.5 description: The leading tool for querying and visualizing time series and metrics. home: https://grafana.net icon: https://raw.githubusercontent.com/grafana/grafana/master/public/img/logo_transparent_400x.png kubeVersion: ^1.8.0-0 maintainers: - email: zanhsieh@gmail.com name: zanhsieh - email: rluckie@cisco.com name: rtluckie - email: maor.friedman@redhat.com name: maorfr - email: miroslav.hadzhiev@gmail.com name: Xtigyro - email: mail@torstenwalter.de name: torstenwalter name: grafana sources: - https://github.com/grafana/grafana type: application version: 6.44.6 2.Helm ChartThe root directory adds Arkid-oidc.yaml file\uff0cWith Values.YAML is in the same directory arkid-oidc.yamlWhen the file is installed in the privateization deployment application\uff0cAs a custom configuration, cover Helm Chart default value.yaml configuration\u3002 arkid-oidc.yamlThe file supports the following OIDC custom configuration parameters\uff0cillustrate\uff1aApply installation support automatic configuration OIDC to log into the application\uff0cThe parameters in the table below will be sent to Helm before replacing the actual OIDC address parameter illustrate example $arkid_oidc_root_url ArkIDApplication entry address https://1 You will add 4470 A0 D. 16 DB 459431.Ark.dev.Dragon Turtle Technology.com $arkid_oidc_client_id client_id 1hQdgZJ9Gf9KhQGhL9RLmatEV1q97rp8Od9kR8n8 $arkid_oidc_client_secret client_secret FT2rETrpg9tmtB0wChSBUmRLlHXNH6eesPbeRl2qHpZ1nD3fcCFlEfa3UxLRsiR5MpHvc15i6zZcwLmMtcqVy5zf7ONqSOALNRXP1bBaWALbn2nrn8BLtEuaFIZvtrEm $arkid_oidc_authorize authorizeaddress https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/app/J0 d 0253 a-Accompanied-4 Slack-8506-Dam 1275573 Bear/oauth/authorize/ $arkid_oidc_token Get the token address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/token/ $arkid_oidc_jwks Get the JWKS certificate address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/.well-known/jwks.json $arkid_oidc_userinfo Get user information address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/userinfo/ $arkid_oidc_logout Login address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oidc/logout/ Example 1\uff1a Jumpserver's Arkid-oidc.yaml file global: storageClass: standard ## Please configure your MySQL server first ## Jumpserver will not start the external MySQL server. ## externalDatabase: engine: mysql host: jms-mysql port: 3306 user: root password: \"weakPassword\" database: jumpserver ## Please configure your Redis server first ## Jumpserver will not start the external Redis server. ## externalRedis: host: jms-redis-master port: 6379 password: \"weakPassword\" ingress: hosts: - \"test.jumpserver.org\" core: config: # Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50` secretKey: \"GxrLH7rewfsRN8B9Zl6MEGD50Uou4LF6UVsEIwfsRN8B9Zl6MEGD50UouayGMhYll8dqmn\" # Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` bootstrapToken: \"ilR8RvAbK7lgRTxs\" log: level: DEBUG env: # Doc: https://docs.jumpserver.org/zh/master/admin-guide/authentication/openid/#5-jumpserver AUTH_OPENID: True BASE_SITE_URL: $arkid_oidc_root_url AUTH_OPENID_CLIENT_ID: $arkid_oidc_client_id AUTH_OPENID_CLIENT_SECRET: $arkid_oidc_client_secret AUTH_OPENID_PROVIDER_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_AUTHORIZATION_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_TOKEN_ENDPOINT: $arkid_oidc_client_token AUTH_OPENID_PROVIDER_JWKS_ENDPOINT: $arkid_oidc_jwks AUTH_OPENID_PROVIDER_USERINFO_ENDPOINT: $arkid_oidc_client_userinfo AUTH_OPENID_PROVIDER_END_SESSION_ENDPOINT: $arkid_oidc_logout AUTH_OPENID_PROVIDER_SIGNATURE_ALG: HS256 AUTH_OPENID_PROVIDER_SIGNATURE_KEY: null AUTH_OPENID_SCOPES: openid profile email AUTH_OPENID_ID_TOKEN_MAX_AGE: 60 AUTH_OPENID_ID_TOKEN_INCLUDE_CLAIMS: True AUTH_OPENID_USE_STATE: True AUTH_OPENID_USE_NONCE: True AUTH_OPENID_SHARE_SESSION: False AUTH_OPENID_IGNORE_SSL_VERIFICATION: True Example 2\uff1a Grafana \u7684 arkid-oidc.yaml file ## arkid-oidc.yaml env: GF_SERVER_ROOT_URL: $arkid_oidc_root_url GF_AUTH_GENERIC_OAUTH_ENABLED: \"true\" GF_AUTH_GENERIC_OAUTH_NAME: \"arkid\" GF_AUTH_GENERIC_OAUTH_CLIENT_ID: \"$arkid_oidc_client_id\" GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: \"$arkid_oidc_client_secret\" GF_AUTH_GENERIC_OAUTH_SCOPES: \"email,openid,userinfo\" GF_AUTH_GENERIC_OAUTH_AUTH_URL: \"$arkid_oidc_authorize\" GF_AUTH_GENERIC_OAUTH_TOKEN_URL: \"$arkid_oidc_token\" GF_AUTH_GENERIC_OAUTH_API_URL: \"$arkid_oidc_userinfo\" Privatization deployment application upload # 1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Application management-Private deployment application-Add application\uff0cUpload helm Charts's TGZ format compression package Click to create Upload file helm Chart's TGZ file 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 4.Submit review 7.After the dragon returns the audit\uff0cApplication is completed\uff0cAll ARKID users can see the application in their app store\u3002","title":"Application access"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#application-access","text":"","title":"Application access"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#create-an-application","text":"","title":"Create an application"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#saasapplication","text":"","title":"SaaSapplication"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#oidc","text":"1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Application management-Center ARKID-Application management-Application List-Local application-create\uff0cCreate an application Click to create Create an application 3.Application for new creation\uff0cClick the protocol configuration\uff0cChoose OIDC-Platform protocol\uff0cAnd complete application access Hint OIDC-platformIs the OIDC protocol\uff0cBut this type of application can be accessed by all tenants of the entire platform\u3002You can access it according to OIDC's access process\uff0cIt's just that the user parameters will increase\uff1aTenant\u3002 4.Click on developer-SaaS application-Add application\uff0cThe access method selects OIDC\uff0cApplication ID created in the application ID input step 2\uff08You can get by clicking the editor button created in step 2 to get\uff09 Click to add an application Add application Get application ID 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 6.Submit review 7.After the dragon returns the audit\uff0cApplication is completed\uff0cAll ARKID users can see the application in their app store\u3002","title":"OIDC"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#custom-certification-agreement","text":"If your application uses other non -standard protocols\uff0cPlease contact us\u3002","title":"Custom certification agreement"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#dense-replacement","text":"If your application is temporarily unable to access it through OIDC\uff0cWe also recommend using the method of filling in the accounts on behalf of\u3002 Create a densely filled application application is similar to the creation of OIDC applications\uff0cJust protocol configuration in step 3 to select AutoFormfill\uff0cAt the same time, select the form to fill in the form 4\u3002 The confidentiality of the account is not a one -point login protocol\uff0cJust record the account password of the corresponding site in the browser\uff0cAnd automatically fill in and click login\u3002 If the website uses an additional way such as the verification code\uff0cThen the account is not applicable to fill in\u3002","title":"Dense replacement"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#sponsored-links","text":"If the current application does not support the above -mentioned various situations\uff0cYou can just upload an exclusive promotion link of ARKID\uff0cAnd record the user's subsequent registration\uff0cLog in\uff0cPaid and other behaviors\uff0cUsed as a basis for splitting with ARKID\u3002 This is usually the case\uff0cPayment will use the form of internal payment\uff0cYou need to contact us\u3002","title":"sponsored links"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#private-deployment-application","text":"","title":"Private deployment application"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#private-deployment-application-packaging","text":"Privatization deployment application adopts helm Chart method package\uff0creference\uff1ahttps://helm.sh/docs/topics/charts/ Simultaneously\uff0cPrivate deployment application packages need to be helm CHART package for additional processing\uff0cIn order to connect with ARKID application creation and automation OIDC configuration\u3002 1.Chart.yamlAdd additional fields to the file Chart.yamlAnnotations must be added to configuration\uff0cOnly will ARKID automatically create an entry application annotations: web_url_from_services: HelmChartApp Exemplary\uff1a annotations: category: Infrastructure # This will be installed after the use of Grafana in privatization\uff0cIn Arkid application management page\uff0cAutomatically create Grafana application web_url_from_services: grafana apiVersion: v2 appVersion: 9.2.5 description: The leading tool for querying and visualizing time series and metrics. home: https://grafana.net icon: https://raw.githubusercontent.com/grafana/grafana/master/public/img/logo_transparent_400x.png kubeVersion: ^1.8.0-0 maintainers: - email: zanhsieh@gmail.com name: zanhsieh - email: rluckie@cisco.com name: rtluckie - email: maor.friedman@redhat.com name: maorfr - email: miroslav.hadzhiev@gmail.com name: Xtigyro - email: mail@torstenwalter.de name: torstenwalter name: grafana sources: - https://github.com/grafana/grafana type: application version: 6.44.6 2.Helm ChartThe root directory adds Arkid-oidc.yaml file\uff0cWith Values.YAML is in the same directory arkid-oidc.yamlWhen the file is installed in the privateization deployment application\uff0cAs a custom configuration, cover Helm Chart default value.yaml configuration\u3002 arkid-oidc.yamlThe file supports the following OIDC custom configuration parameters\uff0cillustrate\uff1aApply installation support automatic configuration OIDC to log into the application\uff0cThe parameters in the table below will be sent to Helm before replacing the actual OIDC address parameter illustrate example $arkid_oidc_root_url ArkIDApplication entry address https://1 You will add 4470 A0 D. 16 DB 459431.Ark.dev.Dragon Turtle Technology.com $arkid_oidc_client_id client_id 1hQdgZJ9Gf9KhQGhL9RLmatEV1q97rp8Od9kR8n8 $arkid_oidc_client_secret client_secret FT2rETrpg9tmtB0wChSBUmRLlHXNH6eesPbeRl2qHpZ1nD3fcCFlEfa3UxLRsiR5MpHvc15i6zZcwLmMtcqVy5zf7ONqSOALNRXP1bBaWALbn2nrn8BLtEuaFIZvtrEm $arkid_oidc_authorize authorizeaddress https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/app/J0 d 0253 a-Accompanied-4 Slack-8506-Dam 1275573 Bear/oauth/authorize/ $arkid_oidc_token Get the token address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/token/ $arkid_oidc_jwks Get the JWKS certificate address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/.well-known/jwks.json $arkid_oidc_userinfo Get user information address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oauth/userinfo/ $arkid_oidc_logout Login address https://Ark.dev.Dragon Turtle Technology.com/api/v1/tenant/49 Boss 1127-Hurt-4535-917 d-Get 024831/oidc/logout/ Example 1\uff1a Jumpserver's Arkid-oidc.yaml file global: storageClass: standard ## Please configure your MySQL server first ## Jumpserver will not start the external MySQL server. ## externalDatabase: engine: mysql host: jms-mysql port: 3306 user: root password: \"weakPassword\" database: jumpserver ## Please configure your Redis server first ## Jumpserver will not start the external Redis server. ## externalRedis: host: jms-redis-master port: 6379 password: \"weakPassword\" ingress: hosts: - \"test.jumpserver.org\" core: config: # Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50` secretKey: \"GxrLH7rewfsRN8B9Zl6MEGD50Uou4LF6UVsEIwfsRN8B9Zl6MEGD50UouayGMhYll8dqmn\" # Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` bootstrapToken: \"ilR8RvAbK7lgRTxs\" log: level: DEBUG env: # Doc: https://docs.jumpserver.org/zh/master/admin-guide/authentication/openid/#5-jumpserver AUTH_OPENID: True BASE_SITE_URL: $arkid_oidc_root_url AUTH_OPENID_CLIENT_ID: $arkid_oidc_client_id AUTH_OPENID_CLIENT_SECRET: $arkid_oidc_client_secret AUTH_OPENID_PROVIDER_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_AUTHORIZATION_ENDPOINT: $arkid_oidc_client_authorize AUTH_OPENID_PROVIDER_TOKEN_ENDPOINT: $arkid_oidc_client_token AUTH_OPENID_PROVIDER_JWKS_ENDPOINT: $arkid_oidc_jwks AUTH_OPENID_PROVIDER_USERINFO_ENDPOINT: $arkid_oidc_client_userinfo AUTH_OPENID_PROVIDER_END_SESSION_ENDPOINT: $arkid_oidc_logout AUTH_OPENID_PROVIDER_SIGNATURE_ALG: HS256 AUTH_OPENID_PROVIDER_SIGNATURE_KEY: null AUTH_OPENID_SCOPES: openid profile email AUTH_OPENID_ID_TOKEN_MAX_AGE: 60 AUTH_OPENID_ID_TOKEN_INCLUDE_CLAIMS: True AUTH_OPENID_USE_STATE: True AUTH_OPENID_USE_NONCE: True AUTH_OPENID_SHARE_SESSION: False AUTH_OPENID_IGNORE_SSL_VERIFICATION: True Example 2\uff1a Grafana \u7684 arkid-oidc.yaml file ## arkid-oidc.yaml env: GF_SERVER_ROOT_URL: $arkid_oidc_root_url GF_AUTH_GENERIC_OAUTH_ENABLED: \"true\" GF_AUTH_GENERIC_OAUTH_NAME: \"arkid\" GF_AUTH_GENERIC_OAUTH_CLIENT_ID: \"$arkid_oidc_client_id\" GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: \"$arkid_oidc_client_secret\" GF_AUTH_GENERIC_OAUTH_SCOPES: \"email,openid,userinfo\" GF_AUTH_GENERIC_OAUTH_AUTH_URL: \"$arkid_oidc_authorize\" GF_AUTH_GENERIC_OAUTH_TOKEN_URL: \"$arkid_oidc_token\" GF_AUTH_GENERIC_OAUTH_API_URL: \"$arkid_oidc_userinfo\"","title":"Private deployment application packaging"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Application/#privatization-deployment-application-upload","text":"1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Application management-Private deployment application-Add application\uff0cUpload helm Charts's TGZ format compression package Click to create Upload file helm Chart's TGZ file 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 4.Submit review 7.After the dragon returns the audit\uff0cApplication is completed\uff0cAll ARKID users can see the application in their app store\u3002","title":"Privatization deployment application upload"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Plug-In/","text":"Plug -in # Create plug -in # ArkIDPlug -in # 1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Plug -in management-Warehouse management\uff0cGitee warehouse or ZIP compressed package where the plug -in is located Notice Name must be filled\uff0cSelect one of the warehouse branch and upload file 3.If you choose the GITEE method to create a warehouse\uff0cAnd the warehouse is a private warehouse\uff0cYou need to authorize the return to your gitee warehouse\uff0cPublic GITEE warehouse and zip compressed package method can skip this step Click to authorize Jump to gitee Consent authorization 4.Import plug -in, After the plug -in is imported, it will be displayed in the plug -in package management Click to import plug -in Plug -in package management 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 6.Submit review 7.After the dragon returns the audit\uff0cThe plug -in is completed\uff0cAll ARKID users can see the plug -in in their plug -in store\u3002","title":"Plug -in"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Plug-In/#plug-in","text":"","title":"Plug -in"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Plug-In/#create-plug-in","text":"","title":"Create plug -in"},{"location":"%20%20Business%20Cooperation%20Guide/%20%20Arkid%20Developer/Plug-In/#arkidplug-in","text":"1.Click on application management in Arkid-Application List-Local application\uff0cClick to develop and proxy\uff0cJump to ArkStore 2.Click on the developer in ArkStore-Plug -in management-Warehouse management\uff0cGitee warehouse or ZIP compressed package where the plug -in is located Notice Name must be filled\uff0cSelect one of the warehouse branch and upload file 3.If you choose the GITEE method to create a warehouse\uff0cAnd the warehouse is a private warehouse\uff0cYou need to authorize the return to your gitee warehouse\uff0cPublic GITEE warehouse and zip compressed package method can skip this step Click to authorize Jump to gitee Consent authorization 4.Import plug -in, After the plug -in is imported, it will be displayed in the plug -in package management Click to import plug -in Plug -in package management 5.Set price\uff0cPlease see See Price rule Click to set the price Set price 6.Submit review 7.After the dragon returns the audit\uff0cThe plug -in is completed\uff0cAll ARKID users can see the plug -in in their plug -in store\u3002","title":"ArkIDPlug -in"},{"location":"%20%20Developer%20Guide/","text":"Overview # ArkIDBuild\uff1a Django 4 Django-ninja Vue3 Bootstrap 5","title":"Overview"},{"location":"%20%20Developer%20Guide/#overview","text":"ArkIDBuild\uff1a Django 4 Django-ninja Vue3 Bootstrap 5","title":"Overview"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/","text":"Foreword # In order to facilitate the configuration development environment\uff0cARKID only supports development with containerization\u3002 one\u3001Required tools # vscode new Docker Desktop The latest version and install plug -in remote-containers\u3001python docker-compose two\u3001Cloning ARKID code # ## You can give this warehouse first\uff0cThen the clone down fork the warehouse git clone https://github.com/longguikeji/arkid.git three\u3001start up docker-compose # cd arkid/docker-compose docker-compose up -d ## Need to wait for all containers to start completed\uff0cIt may take a few minutes to start for the first time Four\u3001VSCODE opens the environment in the container\uff0cDevelop # 1\u3001Open VSCODE\uff0cClicked\u201cAttach to Running Container\u201d, Choose Arkid-be 2\u3001You need to click after the first opening Open the folder\uff0cThe project file is /arkid Ignore git changes in the container environment\uff0cBecause the Git command cannot be used in the container\uff0cYou need to use the GIT tool outside the container for pulling push and other operations 4\u3001Open the terminal of the container environment\uff0cView process # The default rear start command is supervisord # View process status\uff1a supervisorctl status # Turn off all processes\uff1a supervisorctl stop all # Start all processes\uff1a supervisorctl start all 5\u3001Open the browser http://localhost:8989 You need to fill in the access address for the first time\uff0cClick OK D","title":"Index"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/#foreword","text":"In order to facilitate the configuration development environment\uff0cARKID only supports development with containerization\u3002","title":"Foreword"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/#onerequired-tools","text":"vscode new Docker Desktop The latest version and install plug -in remote-containers\u3001python docker-compose","title":"one\u3001Required tools"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/#twocloning-arkid-code","text":"## You can give this warehouse first\uff0cThen the clone down fork the warehouse git clone https://github.com/longguikeji/arkid.git","title":"two\u3001Cloning ARKID code"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/#threestart-up-docker-compose","text":"cd arkid/docker-compose docker-compose up -d ## Need to wait for all containers to start completed\uff0cIt may take a few minutes to start for the first time","title":"three\u3001start up docker-compose"},{"location":"%20%20Developer%20Guide/%20%20%20Configuration%20Development%20Environment/#fourvscode-opens-the-environment-in-the-containerdevelop","text":"1\u3001Open VSCODE\uff0cClicked\u201cAttach to Running Container\u201d, Choose Arkid-be 2\u3001You need to click after the first opening Open the folder\uff0cThe project file is /arkid Ignore git changes in the container environment\uff0cBecause the Git command cannot be used in the container\uff0cYou need to use the GIT tool outside the container for pulling push and other operations 4\u3001Open the terminal of the container environment\uff0cView process # The default rear start command is supervisord # View process status\uff1a supervisorctl status # Turn off all processes\uff1a supervisorctl stop all # Start all processes\uff1a supervisorctl start all 5\u3001Open the browser http://localhost:8989 You need to fill in the access address for the first time\uff0cClick OK D","title":"Four\u3001VSCODE opens the environment in the container\uff0cDevelop"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/","text":"Application access # Business system # Before starting to access\uff0cTo figure out the general situation of the company's business system\uff1a What systems are there All systems are supported by what protocols are supported by single -point login or unified accounts There are several users' data sources\uff0cWhat are the retention and abandonment What is the synchronization relationship between data sources etc. system structure # After dealing with these problems\uff0cYou can start designing the system architecture\uff0cThe figure below shows a typical system architecture diagram example\uff1a After the user data enters the EHR system\uff0cSynchronize to AD domain via SCIM data\uff0cUse AD domain as the standard data source\uff0cMicrosoft systems or systems that support ADs can directly connect with AD domain\uff08Notice\uff0cAD domain is a unified account dense\uff0cNot single -point login\uff09\uff0cOther systems such as OA can be connected to ARKID through single -point login protocols such as OIDC or SAML2\u3002 There can also be another architecture design\uff0cAs shown in the figure\uff1a In this architecture\uff0cArkid can be used as LDAP Server provides unified account secret services outside\uff0cThe system that has supported AD domain can be directly accessible\u3002Such as flying books\uff0cThree -party systems such as Office365 can be accepted through the SAML2 protocol to complete the single point login\u3002 Application access # sign in # ArkID Support for different protocols\uff0cSo as to support a variety of single -point login protocols Unified authority # In addition to the inlet authority that can be controlled by a single point and corresponding to the single -point login\uff0cArkid also provides a technical solution for uniformly controlling permissions in the application\u3002 Unified approval # ArkIDProvides all technical solutions for all requests that need to be approved within the application\uff0cAnd support these approval requests to push to different approval systems\u3002","title":"Application access"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#application-access","text":"","title":"Application access"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#business-system","text":"Before starting to access\uff0cTo figure out the general situation of the company's business system\uff1a What systems are there All systems are supported by what protocols are supported by single -point login or unified accounts There are several users' data sources\uff0cWhat are the retention and abandonment What is the synchronization relationship between data sources etc.","title":"Business system"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#system-structure","text":"After dealing with these problems\uff0cYou can start designing the system architecture\uff0cThe figure below shows a typical system architecture diagram example\uff1a After the user data enters the EHR system\uff0cSynchronize to AD domain via SCIM data\uff0cUse AD domain as the standard data source\uff0cMicrosoft systems or systems that support ADs can directly connect with AD domain\uff08Notice\uff0cAD domain is a unified account dense\uff0cNot single -point login\uff09\uff0cOther systems such as OA can be connected to ARKID through single -point login protocols such as OIDC or SAML2\u3002 There can also be another architecture design\uff0cAs shown in the figure\uff1a In this architecture\uff0cArkid can be used as LDAP Server provides unified account secret services outside\uff0cThe system that has supported AD domain can be directly accessible\u3002Such as flying books\uff0cThree -party systems such as Office365 can be accepted through the SAML2 protocol to complete the single point login\u3002","title":"system structure"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#application-access_1","text":"","title":"Application access"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#sign-in","text":"ArkID Support for different protocols\uff0cSo as to support a variety of single -point login protocols","title":"sign in"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#unified-authority","text":"In addition to the inlet authority that can be controlled by a single point and corresponding to the single -point login\uff0cArkid also provides a technical solution for uniformly controlling permissions in the application\u3002","title":"Unified authority"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/#unified-approval","text":"ArkIDProvides all technical solutions for all requests that need to be approved within the application\uff0cAnd support these approval requests to push to different approval systems\u3002","title":"Unified approval"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/","text":"sign in # Although ARKID can support various application access protocols through plugins\uff0cBut we recommend using OIDC to complete access\u3002 For different application protocols\uff0cPlease refer to the documents of their respective plugins\uff1a OAuth2 OIDC SAML2 CAS etc.\uff0cOther protocols can find the corresponding plug -in support in the plug -in store If you encounter an agreement that has not yet supported\uff0cWelcome to leave a message in gitee or github to us ArkStoreApplication access # If you are a developer of SaaS app\uff0cThen you need to complete the application access and submit it to ArkStore in the center ARKID\u3002 ArkStoreApplication access\uff0cWe support the following methods\uff1a OIDCprotocol Dense replacement sponsored links customize OIDCprotocol # 1.In [Central Arkid] (https://central.arkid.cc/)\uff0cClick on application management-Application List-create\uff0cCreate an application 2.Click the protocol configuration of the center ARKID application\uff0cApp Type selection OIDC-Platform\uff0cConfigure the content of the corresponding content of the OIDC protocol 3.In [ArkStore] (https://sheet.longguikeji.com/)\uff0cClick on developer-Application management-Add application\uff0cAdd application Replenishment The access method selects OIDC Application ID fields created by the application ID field\uff0cYou can edit the application in the center Arkid to view 4.After adding an application in ArkStore\uff0cClick to submit review\uff0cLong Gui will review your application\uff0cAfter passing, the market will be set to ArkStore Application Market Dense replacement # Not from Arkid V2 migrate to V2.5 sponsored links # 1.In [Central Arkid] (https://central.arkid.cc/)\uff0cClick on application management-Application List-create\uff0cCreate an application 2.In [ArkStore] (https://sheet.longguikeji.com/)\uff0cClick on developer-Application management-Add application\uff0cAdd application Replenishment The access method selects the promotion link Application ID fields created by the application ID field\uff0cYou can edit the application in the center Arkid to view 3.After adding an application in ArkStore\uff0cClick to submit review\uff0cLong Gui will review your application\uff0cAfter passing, the market will be set to ArkStore Application Market customize # If your application does not want to access any of the following ways\uff0cIf you want to access it with a self -defined protocol\uff0cWelcome to contact us\uff1a support@longguikeji.com","title":"sign in"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#sign-in","text":"Although ARKID can support various application access protocols through plugins\uff0cBut we recommend using OIDC to complete access\u3002 For different application protocols\uff0cPlease refer to the documents of their respective plugins\uff1a OAuth2 OIDC SAML2 CAS etc.\uff0cOther protocols can find the corresponding plug -in support in the plug -in store If you encounter an agreement that has not yet supported\uff0cWelcome to leave a message in gitee or github to us","title":"sign in"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#arkstoreapplication-access","text":"If you are a developer of SaaS app\uff0cThen you need to complete the application access and submit it to ArkStore in the center ARKID\u3002 ArkStoreApplication access\uff0cWe support the following methods\uff1a OIDCprotocol Dense replacement sponsored links customize","title":"ArkStoreApplication access"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#oidcprotocol","text":"1.In [Central Arkid] (https://central.arkid.cc/)\uff0cClick on application management-Application List-create\uff0cCreate an application 2.Click the protocol configuration of the center ARKID application\uff0cApp Type selection OIDC-Platform\uff0cConfigure the content of the corresponding content of the OIDC protocol 3.In [ArkStore] (https://sheet.longguikeji.com/)\uff0cClick on developer-Application management-Add application\uff0cAdd application Replenishment The access method selects OIDC Application ID fields created by the application ID field\uff0cYou can edit the application in the center Arkid to view 4.After adding an application in ArkStore\uff0cClick to submit review\uff0cLong Gui will review your application\uff0cAfter passing, the market will be set to ArkStore Application Market","title":"OIDCprotocol"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#dense-replacement","text":"Not from Arkid V2 migrate to V2.5","title":"Dense replacement"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#sponsored-links","text":"1.In [Central Arkid] (https://central.arkid.cc/)\uff0cClick on application management-Application List-create\uff0cCreate an application 2.In [ArkStore] (https://sheet.longguikeji.com/)\uff0cClick on developer-Application management-Add application\uff0cAdd application Replenishment The access method selects the promotion link Application ID fields created by the application ID field\uff0cYou can edit the application in the center Arkid to view 3.After adding an application in ArkStore\uff0cClick to submit review\uff0cLong Gui will review your application\uff0cAfter passing, the market will be set to ArkStore Application Market","title":"sponsored links"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/SignIn/#customize","text":"If your application does not want to access any of the following ways\uff0cIf you want to access it with a self -defined protocol\uff0cWelcome to contact us\uff1a support@longguikeji.com","title":"customize"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedApproval/","text":"Unified approval # Features # The unified approval consists of three parts\uff1a Approval Approval request Approval system ArkIDCore (approval action\uff0cApproval request\uff0cApproval system plug -in base class)\uff1a # create Approval : Specify the API interface required for approval, And responsible for approving the API call Approval system Monitor API call: When API calls occur\uff0cDo the following treatment: If the API call does not create the corresponding Approval request \uff0cAPI call interrupt\uff0ccreate Approval request \uff0cpass CREATE_APPROVE_REQUEST The event is sent to the corresponding approval system\u3002 If the API call has created the corresponding Approval request : Should Approval request quilt Approval system Not processed\uff0cAPI call interrupt Should Approval request quilt Approval system reject\uff0cAPI call interrupt Should Approval request quilt Approval system agree\uff0cAPI calls continue to execute Approval system plug -in base class See ARKID.core.extension.approve_system.ApproveSystemExtension monitor CREATE_APPROVE_REQUEST event\uff0cDefine abstract functions create_approve_request , The third -party plug -in system can implement this method\uff0cSend the approval request to the third -party system for processing Create two interfaces to handle the logic of approval requests passing and rejection: agree Approval request interface path\uff1a/approve_requests/{{request_id}}/pass/ method: PUT Processing function\uff1apass_approve_request_handler Need to implement abstract methods: pass_approve_request reject Approval request interface path\uff1a/approve_requests/{{request_id}}/deny/' method: PUT Processing function\uff1adeny_approve_request_handler Need to implement abstract methods: deny_approve_request ArkIDSystem default approval system Third -party approval system plug -in can refer to the logic of the system plug -in with the default approval system plug -in\uff0c See the default approval system for Extension_root.com_Dragon turtle_approve_system_arkid.ApproveSystemArkIDExtension","title":"Unified approval"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedApproval/#unified-approval","text":"","title":"Unified approval"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedApproval/#features","text":"The unified approval consists of three parts\uff1a Approval Approval request Approval system","title":"Features"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedApproval/#arkidcore-approval-actionapproval-requestapproval-system-plug-in-base-class","text":"create Approval : Specify the API interface required for approval, And responsible for approving the API call Approval system Monitor API call: When API calls occur\uff0cDo the following treatment: If the API call does not create the corresponding Approval request \uff0cAPI call interrupt\uff0ccreate Approval request \uff0cpass CREATE_APPROVE_REQUEST The event is sent to the corresponding approval system\u3002 If the API call has created the corresponding Approval request : Should Approval request quilt Approval system Not processed\uff0cAPI call interrupt Should Approval request quilt Approval system reject\uff0cAPI call interrupt Should Approval request quilt Approval system agree\uff0cAPI calls continue to execute Approval system plug -in base class See ARKID.core.extension.approve_system.ApproveSystemExtension monitor CREATE_APPROVE_REQUEST event\uff0cDefine abstract functions create_approve_request , The third -party plug -in system can implement this method\uff0cSend the approval request to the third -party system for processing Create two interfaces to handle the logic of approval requests passing and rejection: agree Approval request interface path\uff1a/approve_requests/{{request_id}}/pass/ method: PUT Processing function\uff1apass_approve_request_handler Need to implement abstract methods: pass_approve_request reject Approval request interface path\uff1a/approve_requests/{{request_id}}/deny/' method: PUT Processing function\uff1adeny_approve_request_handler Need to implement abstract methods: deny_approve_request ArkIDSystem default approval system Third -party approval system plug -in can refer to the logic of the system plug -in with the default approval system plug -in\uff0c See the default approval system for Extension_root.com_Dragon turtle_approve_system_arkid.ApproveSystemArkIDExtension","title":"ArkIDCore (approval action\uff0cApproval request\uff0cApproval system plug -in base class)\uff1a"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedAuthority/","text":"Unified authority # arkidSupport third -party applications\uff0cBy output your own interface document\uff0cArkid here by reading the application itself interface document\uff0cYou can flexible management authority in ARKID\u3002 Access step # 1.Need to prepare a readable Openapi.json access address\uff0cAt least Permissions nodes in JSON\uff0cPermissions contain basic role information\uff0cAnd interface information\u3002Here\uff0cCan be used as a reference: { \"permissions\" :[ { \"name\" : \"customer\" , \"sort_id\" : 0 , \"type\" : \"group\" , \"container\" :[ 3 , 6 ] }, { \"name\" : \"tenant-admin\" , \"sort_id\" : 1 , \"type\" : \"group\" , \"container\" :[ 4 ] }, { \"name\" : \"platform-admin\" , \"sort_id\" : 2 , \"type\" : \"group\" , \"container\" :[ 5 ] }, { \"name\" : \"appList\" , \"sort_id\" : 3 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_list_apps\" }, { \"name\" : \"Create an application\" , \"sort_id\" : 4 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_create_app\" }, { \"name\" : \"Public app list\" , \"sort_id\" : 5 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_list_open_apps\" }, { \"name\" : \"Get an app\" , \"sort_id\" : 6 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_get_app\" } ] } parameter name Parameter Description name name sort_id Sorting ID (developer generates itself) type Type (API or group) container SORT containing interfaces_ID (only value in the group type) operation_id Operation ID (only the API type has this field) 2.Application lists needed under the application management menu\uff0cCreate a new application 3.Need to configure the application\uff0cHere we take the application of OIDC type as an example Replenishment Currently only supports OIDC type\uff0cOr OAUTH2 type application\u3002Other types of applications cannot use the function of obtaining right -limited string 4.You need to open an open API configuration Replenishment If the contents content in the interface document is changed\uff0cNeed to change the application version\uff0cExcept for the first configuration how to use # 1.Can be under the authority management menu\uff0cAll of the application pages under the authorization management menu\uff0cPay the authorized permissions\uff0cAuthorized to other tenants to use\u3002 Replenishment The distribution of permissions is step by step downward\uff0cWhen the general authorization is opened\uff0cExcept for the permissions to be opened\uff0cWill open the application entry permissions\uff0cPrevent users from other tenants from logging in Authorize:This permission is authorized to use it for other tenants\uff0cOther tenants administrators have the permissions first\uff0cOther tenant administrators can allocate their own permissions secondary allocation\u3002 Authorize:If this permissions switch from the opening state to the closed state\uff0cThe permissions that have been assigned to other tenants\uff0cWill be retracted\uff0cIncluding the secondary distribution of other tenants\u3002 2.Except for authorization to other tenants\uff0cCan also be in the tenant\uff0cPerform user permissions How to obtain the user's permissions string # 1.Access application list\uff0cEdit application\uff0cGet parameter information English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address 2.Get Authorization Code Request address: authorize url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Fill in (openid userinfo) Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176 3.Get ACCESS Token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token id_token id_token Return sample: { \"access_token\" : \"nRmo1Ko5UbStrtBNtySnUi8Ezw9YBm\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"openid userinfo\" , \"refresh_token\" : \"na3bP6WX3JzZynqLSJS8wI4m6zWiC9\" , \"id_token\" : \"eyJhbGciOiAiUlMyNTYiLCAidXNlIjogInNpZyIsICJraWQiOiAiRjlYSlg3N0VkTjVnNnA5Q3ZnS1NnTW9GRTh4cjNJeWp6aUNLTnR3enhWTSIsICJlIjogIkFRQUIiLCAia3R5IjogIlJTQSIsICJuIjogImlFNFkyMDhLV0x1QzhLcWZLQU96NmctaUlfeHNLU3hTYmoyMWxXbmdnMmwtay01b2ZKaVRDQklKZjFTR1dyQ3hfRXNGT1ptZUxEM29xcE96WUNhdFZ3NlBlNnVacFJhRFZSekFoOV9Da00waUFWclc2bHB4QkowSFlxZ1d3cHBpSG15M2VEbkg2V3lGVkNQUFhKd3F1MU5ETlludENqcUtWa2gxamotdjktVSJ9.eyJhdWQiOiAiQXJkeHJwajVVb0JmUUNiN1F4TDE1RG9YR2ozcHpOeHFkeFl2U1YxeCIsICJpYXQiOiAxNjYwMTE1MDU4LCAiYXRfaGFzaCI6ICJqa19ET1M0MFNnT3Fubk91QzhjeHdnIiwgInN1YiI6ICJmYWY1YWFlNi0zY2RmLTQ1OTUtOGI0YS0zYTA2YjMxMTE3YzgiLCAic3ViX2lkIjogImZhZjVhYWU2LTNjZGYtNDU5NS04YjRhLTNhMDZiMzExMTdjOCIsICJwcmVmZXJyZWRfdXNlcm5hbWUiOiAiYWRtaW4iLCAiZ3JvdXBzIjogWyJ0ZW5hbnRfYWRtaW4iXSwgInRlbmFudF9pZCI6ICI0ZGExMTRjZS1lMTE1LTQ0YTAtODIzYi1kMzcyMTE0NDI1ZDAiLCAidGVuYW50X3NsdWciOiAiIiwgImlzcyI6ICJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL3RlbmFudC80ZGExMTRjZS1lMTE1LTQ0YTAtODIzYi1kMzcyMTE0NDI1ZDAiLCAiZXhwIjogMTY2MDE1MTA1OCwgImF1dGhfdGltZSI6IDE2NjAxMTUwNTh9.Xcz9d79UdPAVtiObwkauIPVodQtDK8ZX9zYBhTgmjs5_lQhlgzCeUZPeUJCsIb_3AR9BChDw_EDYzwFhg1h4vYofYlRk4V9wHZypbRoDFopm343h78JbzGeexFiRhE_e4zIPmVsQj925TpMuMOP4zLKX3U6pTPJETflrvblXcUs\" } 4.Getting rights string Request address: /api/v1/app/permission_result Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary ID-TOKEN Get ACCESS_The ID returned to the token interface_token xxxxx Return parameter: parameter name Parameter Description Exemplary result User permissions string (1 is a permissions\uff0c0 is no authority\uff0cEach with sort in the interface document_ID corresponds) Return sample: { \"result\" : \"11111\" }","title":"Unified authority"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedAuthority/#unified-authority","text":"arkidSupport third -party applications\uff0cBy output your own interface document\uff0cArkid here by reading the application itself interface document\uff0cYou can flexible management authority in ARKID\u3002","title":"Unified authority"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedAuthority/#access-step","text":"1.Need to prepare a readable Openapi.json access address\uff0cAt least Permissions nodes in JSON\uff0cPermissions contain basic role information\uff0cAnd interface information\u3002Here\uff0cCan be used as a reference: { \"permissions\" :[ { \"name\" : \"customer\" , \"sort_id\" : 0 , \"type\" : \"group\" , \"container\" :[ 3 , 6 ] }, { \"name\" : \"tenant-admin\" , \"sort_id\" : 1 , \"type\" : \"group\" , \"container\" :[ 4 ] }, { \"name\" : \"platform-admin\" , \"sort_id\" : 2 , \"type\" : \"group\" , \"container\" :[ 5 ] }, { \"name\" : \"appList\" , \"sort_id\" : 3 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_list_apps\" }, { \"name\" : \"Create an application\" , \"sort_id\" : 4 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_create_app\" }, { \"name\" : \"Public app list\" , \"sort_id\" : 5 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_list_open_apps\" }, { \"name\" : \"Get an app\" , \"sort_id\" : 6 , \"type\" : \"api\" , \"container\" :[ ], \"operation_id\" : \"api_v1_views_app_get_app\" } ] } parameter name Parameter Description name name sort_id Sorting ID (developer generates itself) type Type (API or group) container SORT containing interfaces_ID (only value in the group type) operation_id Operation ID (only the API type has this field) 2.Application lists needed under the application management menu\uff0cCreate a new application 3.Need to configure the application\uff0cHere we take the application of OIDC type as an example Replenishment Currently only supports OIDC type\uff0cOr OAUTH2 type application\u3002Other types of applications cannot use the function of obtaining right -limited string 4.You need to open an open API configuration Replenishment If the contents content in the interface document is changed\uff0cNeed to change the application version\uff0cExcept for the first configuration","title":"Access step"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedAuthority/#how-to-use","text":"1.Can be under the authority management menu\uff0cAll of the application pages under the authorization management menu\uff0cPay the authorized permissions\uff0cAuthorized to other tenants to use\u3002 Replenishment The distribution of permissions is step by step downward\uff0cWhen the general authorization is opened\uff0cExcept for the permissions to be opened\uff0cWill open the application entry permissions\uff0cPrevent users from other tenants from logging in Authorize:This permission is authorized to use it for other tenants\uff0cOther tenants administrators have the permissions first\uff0cOther tenant administrators can allocate their own permissions secondary allocation\u3002 Authorize:If this permissions switch from the opening state to the closed state\uff0cThe permissions that have been assigned to other tenants\uff0cWill be retracted\uff0cIncluding the secondary distribution of other tenants\u3002 2.Except for authorization to other tenants\uff0cCan also be in the tenant\uff0cPerform user permissions","title":"how to use"},{"location":"%20%20Developer%20Guide/%20%20Application%20Access/UnifiedAuthority/#how-to-obtain-the-users-permissions-string","text":"1.Access application list\uff0cEdit application\uff0cGet parameter information English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address 2.Get Authorization Code Request address: authorize url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Fill in (openid userinfo) Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176 3.Get ACCESS Token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token id_token id_token Return sample: { \"access_token\" : \"nRmo1Ko5UbStrtBNtySnUi8Ezw9YBm\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"openid userinfo\" , \"refresh_token\" : \"na3bP6WX3JzZynqLSJS8wI4m6zWiC9\" , \"id_token\" : \"eyJhbGciOiAiUlMyNTYiLCAidXNlIjogInNpZyIsICJraWQiOiAiRjlYSlg3N0VkTjVnNnA5Q3ZnS1NnTW9GRTh4cjNJeWp6aUNLTnR3enhWTSIsICJlIjogIkFRQUIiLCAia3R5IjogIlJTQSIsICJuIjogImlFNFkyMDhLV0x1QzhLcWZLQU96NmctaUlfeHNLU3hTYmoyMWxXbmdnMmwtay01b2ZKaVRDQklKZjFTR1dyQ3hfRXNGT1ptZUxEM29xcE96WUNhdFZ3NlBlNnVacFJhRFZSekFoOV9Da00waUFWclc2bHB4QkowSFlxZ1d3cHBpSG15M2VEbkg2V3lGVkNQUFhKd3F1MU5ETlludENqcUtWa2gxamotdjktVSJ9.eyJhdWQiOiAiQXJkeHJwajVVb0JmUUNiN1F4TDE1RG9YR2ozcHpOeHFkeFl2U1YxeCIsICJpYXQiOiAxNjYwMTE1MDU4LCAiYXRfaGFzaCI6ICJqa19ET1M0MFNnT3Fubk91QzhjeHdnIiwgInN1YiI6ICJmYWY1YWFlNi0zY2RmLTQ1OTUtOGI0YS0zYTA2YjMxMTE3YzgiLCAic3ViX2lkIjogImZhZjVhYWU2LTNjZGYtNDU5NS04YjRhLTNhMDZiMzExMTdjOCIsICJwcmVmZXJyZWRfdXNlcm5hbWUiOiAiYWRtaW4iLCAiZ3JvdXBzIjogWyJ0ZW5hbnRfYWRtaW4iXSwgInRlbmFudF9pZCI6ICI0ZGExMTRjZS1lMTE1LTQ0YTAtODIzYi1kMzcyMTE0NDI1ZDAiLCAidGVuYW50X3NsdWciOiAiIiwgImlzcyI6ICJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3YxL3RlbmFudC80ZGExMTRjZS1lMTE1LTQ0YTAtODIzYi1kMzcyMTE0NDI1ZDAiLCAiZXhwIjogMTY2MDE1MTA1OCwgImF1dGhfdGltZSI6IDE2NjAxMTUwNTh9.Xcz9d79UdPAVtiObwkauIPVodQtDK8ZX9zYBhTgmjs5_lQhlgzCeUZPeUJCsIb_3AR9BChDw_EDYzwFhg1h4vYofYlRk4V9wHZypbRoDFopm343h78JbzGeexFiRhE_e4zIPmVsQj925TpMuMOP4zLKX3U6pTPJETflrvblXcUs\" } 4.Getting rights string Request address: /api/v1/app/permission_result Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary ID-TOKEN Get ACCESS_The ID returned to the token interface_token xxxxx Return parameter: parameter name Parameter Description Exemplary result User permissions string (1 is a permissions\uff0c0 is no authority\uff0cEach with sort in the interface document_ID corresponds) Return sample: { \"result\" : \"11111\" }","title":"How to obtain the user's permissions string"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/","text":"Plug -in development # What is the plug -in\uff1f # The main purpose of the plug -in is to meet the user's personality needs as much as possible\uff0cAnd prevent ARKID's own products from being too high and too high\u3002 The plug -in is an independent Python module\u3002 What can I do in my plug -in\uff1f # The plug -in can use Django and Django-Except for the complete function used by Ninja framework\uff0c ArkIDDefine or provide the following functions for plug -in\uff1a Custom new API\uff0cOr update the kernel API Custom new back -end routing\uff0cFront -end routing\uff0cFront -end page Custom new Django Model\uff0cOr expand the niche original Model Customize new events (Event)\uff0cOr listen to the kernel event Custom PIP dependencies Custom configuration Custom document Custom language package How to develop plug -in\uff1f # CLONE of Arkid's warehouse to locally\uff0cexist extension_root Add a folder in the directory\uff0cThis folder is the main catalog of the plug -in\u3002 Add in this directory __init__.py document\uff0cPlug -in main document\u3002 exist extension_root In the directory\uff0cOfficially provided multiple default plugins\uff0cThey are all good examples\u3002 More teaching\uff0creference [Novice Tutorial\uff1aDevelop the first plug -in] (%20 Develop the first plug -in/) Want to share or sell your plug -in\uff1f # Officially provided a plug -in store\uff0cDevelopers can put the plug -in github private warehouse link or zip package Upload\uff0cYou can share or sell your plug -in\u3002 Specific tutorial reference\uff1a [Plug -in release] (%20 Test and release/release/) need help\uff1f # You need any help\uff0cYou can contact us at any time by mail\uff0cemail address\uff1a support@longguikeji.com Can also be below Comment or [github forum] (https://github.com/longguikeji/arkid/discussions) Ask us to ask us questions or leave a message\u3002","title":"Plug -in development"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#plug-in-development","text":"","title":"Plug -in development"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#what-is-the-plug-in","text":"The main purpose of the plug -in is to meet the user's personality needs as much as possible\uff0cAnd prevent ARKID's own products from being too high and too high\u3002 The plug -in is an independent Python module\u3002","title":"What is the plug -in\uff1f"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#what-can-i-do-in-my-plug-in","text":"The plug -in can use Django and Django-Except for the complete function used by Ninja framework\uff0c ArkIDDefine or provide the following functions for plug -in\uff1a Custom new API\uff0cOr update the kernel API Custom new back -end routing\uff0cFront -end routing\uff0cFront -end page Custom new Django Model\uff0cOr expand the niche original Model Customize new events (Event)\uff0cOr listen to the kernel event Custom PIP dependencies Custom configuration Custom document Custom language package","title":"What can I do in my plug -in\uff1f"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#how-to-develop-plug-in","text":"CLONE of Arkid's warehouse to locally\uff0cexist extension_root Add a folder in the directory\uff0cThis folder is the main catalog of the plug -in\u3002 Add in this directory __init__.py document\uff0cPlug -in main document\u3002 exist extension_root In the directory\uff0cOfficially provided multiple default plugins\uff0cThey are all good examples\u3002 More teaching\uff0creference [Novice Tutorial\uff1aDevelop the first plug -in] (%20 Develop the first plug -in/)","title":"How to develop plug -in\uff1f"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#want-to-share-or-sell-your-plug-in","text":"Officially provided a plug -in store\uff0cDevelopers can put the plug -in github private warehouse link or zip package Upload\uff0cYou can share or sell your plug -in\u3002 Specific tutorial reference\uff1a [Plug -in release] (%20 Test and release/release/)","title":"Want to share or sell your plug -in\uff1f"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/#need-help","text":"You need any help\uff0cYou can contact us at any time by mail\uff0cemail address\uff1a support@longguikeji.com Can also be below Comment or [github forum] (https://github.com/longguikeji/arkid/discussions) Ask us to ask us questions or leave a message\u3002","title":"need help\uff1f"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/","text":"Develop the first plug -in # Create a plug -in directory and file # cloneUnder ARKID's git warehouse\uff0cFind in the root directory arkid.toml document turn up extension item\uff0cThe file location of the configuration indicator plugin\uff0cas follows\uff1a [extension] root = [ \"./extension_root\" , \"./my_extensions\" ] exist my_extensions New folder in the directory\uff0cnamed\uff1a com_company_type_helloworld Notice The file name of the plug -in directory should completely correspond to its Package\uff0cJust put the symbol point of Package ' . ' Change to the bottom line' _ ' In a folder com_company_type_helloworld Down\uff0ccreate a new file __init__.py In this way, the main directory of the plugin and the main file are completed\u3002 Write plug -in code (parsing by line by line) # exist __init__.py Insert the following code in the file\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 from arkid.core import extension , api , event # (1) from pydantic import Field HELLOWORLD = 'HELLOWORLD' # (2) package = 'com.company.type.helloworld' # (3) HelloworldOutSchema = extension . create_extension_schema ( # (11) 'HelloworldOutSchema' , package , fields = [ ( 'data' , str , Field ()) ] ) class HelloworldExtension ( extension . Extension ): # (4) def load ( self ): # (5) super () . load () self . register_api ( # (10) '/helloworld_api/' , 'GET' , self . helloworld_api , tags = [ 'helloworld' ], response = HelloworldOutSchema ) hellowold_event_tag = self . register_event ( HELLOWORLD , 'helloworld' ) # (6) self . listen_event ( hellowold_event_tag , self . helloworld ) # (7) def helloworld_api ( self , request ): event_results = event . dispatch_event ( event . Event ( package + '.' + HELLOWORLD , tenant = None , data = 'helloworld' )) # (12) for fun , ( result , ext ) in event_results : return { 'data' : result } def helloworld ( self , event , ** kwargs ): # (8) print ( event . data ) # (9) return event . data extension = HelloworldExtension ( # (13) package = package , description = 'my first extension' , version = '1.0' , labels = 'hellowworld' , homepage = 'https://arkid.cc' , logo = '' , author = 'your-name@your-company.com' , ) ArkIDThe kernel code is in Arkid.Core in this package, extension (various base classes related to plugins), API (encapsulated ninja API object), Event (all objects and methods related to the event) Event tag Package of the plug -in, Because of repeatedly\uff0cShould be defined alone Define plug -in\uff0cInherit the most basic plug -in base class Extension load() Abstract method\uff0cThe core startup method of all plug -in\uff0cMust be realized Registration event in the plug -in\uff0cIn order to make the TAG naming conflict\uff0cWill add in front of the passing tag package+'.' Prefix Add the callback function of the listening event Define the callback function Print the data parameter of Event Define a API\uff0cReference django-Ninja related documents Define the SCHEMA of the API\uff0cIn order to avoid naming conflicts\uff0cCan only be via extension.create_extension_schema method Throw an incident\uff0cNote that the tag of the event is to add the prefix part Single object that generates the plugin\uff0cArkid will get__init__.The extension object in the py file as the main body of the plugin Load and start plug -in # Start django python manager.py runserver ArkIDWill according to Arkid.Configuration in TOML file\uff0cAutomatically load all plug -in in turn in all plug -in directory\uff0cAnd print out loading information\u3002 Importing my_extension/com_company_type_helloworld xxxx-xx-xx 03 :21:57,944 - arkid - INFO - Imported <module 'my_extension.com_company_type_helloworld' from '/arkid/my_extension/com_company_type_helloworld/__init__.py' > xxxx-xx-xx 03 :21:57,944 - arkid - INFO - my_extension.com_company_type_helloworld import success After loading successfully\uff0cIf the plug -in is enabled\uff0cWill call it load() function\uff0c Complete the startup\uff0cThe start success will be printed and the following content will be printed\uff1a 2022 -xx-xx 03 :22:00,993 - arkid - INFO - my_extension.com_company_type_helloworld load success Check and test plug -in # access: http:// { ArkID host } /api/redoc#tag/helloworld/operation/my_extension_com_company_type_helloworld_helloworld You can see that the API defined in the plug -in will be displayed in the documentation\uff0c Try to call the interface\uff0cCan get printing\uff1a helloworld [ xx/xx/xxxx 03 :22:07 ] \"GET /api/v1/tenant/{tenant_id}/helloworld/ HTTP/1.1\" 200 4 Hint Interface tenant_id allowable Tenant management-Practice configuration See","title":"Develop the first plug -in"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/#develop-the-first-plug-in","text":"","title":"Develop the first plug -in"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/#create-a-plug-in-directory-and-file","text":"cloneUnder ARKID's git warehouse\uff0cFind in the root directory arkid.toml document turn up extension item\uff0cThe file location of the configuration indicator plugin\uff0cas follows\uff1a [extension] root = [ \"./extension_root\" , \"./my_extensions\" ] exist my_extensions New folder in the directory\uff0cnamed\uff1a com_company_type_helloworld Notice The file name of the plug -in directory should completely correspond to its Package\uff0cJust put the symbol point of Package ' . ' Change to the bottom line' _ ' In a folder com_company_type_helloworld Down\uff0ccreate a new file __init__.py In this way, the main directory of the plugin and the main file are completed\u3002","title":"Create a plug -in directory and file"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/#write-plug-in-code-parsing-by-line-by-line","text":"exist __init__.py Insert the following code in the file\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 from arkid.core import extension , api , event # (1) from pydantic import Field HELLOWORLD = 'HELLOWORLD' # (2) package = 'com.company.type.helloworld' # (3) HelloworldOutSchema = extension . create_extension_schema ( # (11) 'HelloworldOutSchema' , package , fields = [ ( 'data' , str , Field ()) ] ) class HelloworldExtension ( extension . Extension ): # (4) def load ( self ): # (5) super () . load () self . register_api ( # (10) '/helloworld_api/' , 'GET' , self . helloworld_api , tags = [ 'helloworld' ], response = HelloworldOutSchema ) hellowold_event_tag = self . register_event ( HELLOWORLD , 'helloworld' ) # (6) self . listen_event ( hellowold_event_tag , self . helloworld ) # (7) def helloworld_api ( self , request ): event_results = event . dispatch_event ( event . Event ( package + '.' + HELLOWORLD , tenant = None , data = 'helloworld' )) # (12) for fun , ( result , ext ) in event_results : return { 'data' : result } def helloworld ( self , event , ** kwargs ): # (8) print ( event . data ) # (9) return event . data extension = HelloworldExtension ( # (13) package = package , description = 'my first extension' , version = '1.0' , labels = 'hellowworld' , homepage = 'https://arkid.cc' , logo = '' , author = 'your-name@your-company.com' , ) ArkIDThe kernel code is in Arkid.Core in this package, extension (various base classes related to plugins), API (encapsulated ninja API object), Event (all objects and methods related to the event) Event tag Package of the plug -in, Because of repeatedly\uff0cShould be defined alone Define plug -in\uff0cInherit the most basic plug -in base class Extension load() Abstract method\uff0cThe core startup method of all plug -in\uff0cMust be realized Registration event in the plug -in\uff0cIn order to make the TAG naming conflict\uff0cWill add in front of the passing tag package+'.' Prefix Add the callback function of the listening event Define the callback function Print the data parameter of Event Define a API\uff0cReference django-Ninja related documents Define the SCHEMA of the API\uff0cIn order to avoid naming conflicts\uff0cCan only be via extension.create_extension_schema method Throw an incident\uff0cNote that the tag of the event is to add the prefix part Single object that generates the plugin\uff0cArkid will get__init__.The extension object in the py file as the main body of the plugin","title":"Write plug -in code (parsing by line by line)"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/#load-and-start-plug-in","text":"Start django python manager.py runserver ArkIDWill according to Arkid.Configuration in TOML file\uff0cAutomatically load all plug -in in turn in all plug -in directory\uff0cAnd print out loading information\u3002 Importing my_extension/com_company_type_helloworld xxxx-xx-xx 03 :21:57,944 - arkid - INFO - Imported <module 'my_extension.com_company_type_helloworld' from '/arkid/my_extension/com_company_type_helloworld/__init__.py' > xxxx-xx-xx 03 :21:57,944 - arkid - INFO - my_extension.com_company_type_helloworld import success After loading successfully\uff0cIf the plug -in is enabled\uff0cWill call it load() function\uff0c Complete the startup\uff0cThe start success will be printed and the following content will be printed\uff1a 2022 -xx-xx 03 :22:00,993 - arkid - INFO - my_extension.com_company_type_helloworld load success","title":"Load and start plug -in"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/DevelopTheFirstPlug-In/#check-and-test-plug-in","text":"access: http:// { ArkID host } /api/redoc#tag/helloworld/operation/my_extension_com_company_type_helloworld_helloworld You can see that the API defined in the plug -in will be displayed in the documentation\uff0c Try to call the interface\uff0cCan get printing\uff1a helloworld [ xx/xx/xxxx 03 :22:07 ] \"GET /api/v1/tenant/{tenant_id}/helloworld/ HTTP/1.1\" 200 4 Hint Interface tenant_id allowable Tenant management-Practice configuration See","title":"Check and test plug -in"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/","text":"API # ArkIDBased on django-ninja framework to develop API\uff0cFully inherited all its abilities\u3002 Custom API # able to pass Django-ninja and Django native Two ways are defined API\u3002 The main difference is\uff0cDjango-Ninja method definition will automatically appear in Openapi.During JSON,And depend on schema\uff0cDjango native will not or need\u3002 Django-ninja of API Definition # use arkid.core.extension.Extension.register_api Create SCHEMA # use arkid.core.extension.create_extension_schema Notice\uff01The second parameter of this function\uff0cRefers to the plug -in __init__.py Directory where the file is located Exemplary from arkid.core import extension class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_api ( '/path/' , 'GET' , self . api_func ) def api_func ( self , request ): pass Authority # {todo} Pagination # arkidProvide the basic pagoe function\uff0cThe method of use is as follows\uff1a Pagination ... from ninja.pagination import paginate #Introduce paging decorative device from arkid.core.pagenation import CustomPagination #Introduction to the paging device ... # Declaration returns the column table structure class AppGroupListItemOut ( Schema ): id : str name : str # State the return structure class AppGroupListOut ( ResponseSchema ): data : List [ AppGroupListItemOut ] @api . get ( \"/path/\" , response = List [ AppGroupListItemOut ]) #Notice Here Therefore @operation ( AppGroupListOut ) @paginate ( CustomPagination ) def get_app_groups ( request , tenant_id : str ): \"\"\" Application group list \"\"\" groups = AppGroup . expand_objects . filter ( tenant__id = tenant_id ) parent_id = query_data . dict () . get ( \"parent_id\" , None ) groups = groups . filter ( parent__id = parent_id ) return groups . all () Django of API Definition # use arkid.core.extension.Extension.register_routers Exemplary from arkid.core import extension from django.urls import re_path from django class CaseExtension ( extension . Extension ): def load ( self ): super () . load () class CaseView ( View ): def post ( self , request ): pass path_list = [ re_path ( rf '^/path/$' , self . api_func ), re_path ( rf '^/path2/$' , CaseView . as_view ()), ] self . register_routers ( path_list ) def api_func ( self , request ): pass Modify the kernel API # When necessary\uff0cWe need to change the API in the original kernel\u3002 Modify Request # Modify Request\uff0cJust modify API -related Request Schema. after\uff0cWe want to get the request\uff0cAnd execute custom logic. Before each API response\uff0cWill throw a event\uff0cEvent tag is: operation_id + '_pre' , Listen to the incident to get the Request object Hint operation_id allowable openapi.json Look at use arkid.core.extension.Extension.register_extend_api arkid.core.extension.Extension.listen_event Exemplary from arkid.core import extension from api.v1.views.app import AppConfigSchemaIn class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_api ( AppConfigSchemaIn , case1 = str , case2 = ( str , Field ( title = 'case2_name' ))) self . listen_event ( 'api_v1_views_app_list_apps_pre' , self . app_list_pre_handler ) def app_list_pre_handler ( self , event , ** kwargs ): print ( event . request . case1 ) print ( event . request . case2 ) Modify response # Modify response\uff0cIn addition to modifying Response Other than Schema\uff0cIt also needs to really change the final return value After the response of each API is complete\uff0cWill also throw a event\uff0cThe tag of the event is operation_id\uff0c Just listen to the incident and modify the reponse in the incident\u3002 use arkid.core.extension.Extension.register_extend_api arkid.core.extension.Extension.listen_event Exemplary from arkid.core import extension from api.v1.views.app import AppConfigSchemaOut class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_api ( AppConfigSchemaOut , case1 = str , case2 = ( str , Field ( title = 'case2_name' ))) self . listen_event ( 'api_v1_views_app_list_apps' , self . app_list_handler ) def app_list_pre_handler ( self , event , ** kwargs ): event . response [ 'case1' ] = 'case1' event . response [ 'case2' ] = 'case2'","title":"API"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#api","text":"ArkIDBased on django-ninja framework to develop API\uff0cFully inherited all its abilities\u3002","title":"API"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#custom-api","text":"able to pass Django-ninja and Django native Two ways are defined API\u3002 The main difference is\uff0cDjango-Ninja method definition will automatically appear in Openapi.During JSON,And depend on schema\uff0cDjango native will not or need\u3002","title":"Custom API"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#django-ninja-of-api-definition","text":"use arkid.core.extension.Extension.register_api","title":"Django-ninja of API Definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#create-schema","text":"use arkid.core.extension.create_extension_schema Notice\uff01The second parameter of this function\uff0cRefers to the plug -in __init__.py Directory where the file is located Exemplary from arkid.core import extension class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_api ( '/path/' , 'GET' , self . api_func ) def api_func ( self , request ): pass","title":"Create SCHEMA"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#authority","text":"{todo}","title":"Authority"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#pagination","text":"arkidProvide the basic pagoe function\uff0cThe method of use is as follows\uff1a Pagination ... from ninja.pagination import paginate #Introduce paging decorative device from arkid.core.pagenation import CustomPagination #Introduction to the paging device ... # Declaration returns the column table structure class AppGroupListItemOut ( Schema ): id : str name : str # State the return structure class AppGroupListOut ( ResponseSchema ): data : List [ AppGroupListItemOut ] @api . get ( \"/path/\" , response = List [ AppGroupListItemOut ]) #Notice Here Therefore @operation ( AppGroupListOut ) @paginate ( CustomPagination ) def get_app_groups ( request , tenant_id : str ): \"\"\" Application group list \"\"\" groups = AppGroup . expand_objects . filter ( tenant__id = tenant_id ) parent_id = query_data . dict () . get ( \"parent_id\" , None ) groups = groups . filter ( parent__id = parent_id ) return groups . all ()","title":"Pagination"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#django-of-api-definition","text":"use arkid.core.extension.Extension.register_routers Exemplary from arkid.core import extension from django.urls import re_path from django class CaseExtension ( extension . Extension ): def load ( self ): super () . load () class CaseView ( View ): def post ( self , request ): pass path_list = [ re_path ( rf '^/path/$' , self . api_func ), re_path ( rf '^/path2/$' , CaseView . as_view ()), ] self . register_routers ( path_list ) def api_func ( self , request ): pass","title":"Django of API Definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#modify-the-kernel-api","text":"When necessary\uff0cWe need to change the API in the original kernel\u3002","title":"Modify the kernel API"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#modify-request","text":"Modify Request\uff0cJust modify API -related Request Schema. after\uff0cWe want to get the request\uff0cAnd execute custom logic. Before each API response\uff0cWill throw a event\uff0cEvent tag is: operation_id + '_pre' , Listen to the incident to get the Request object Hint operation_id allowable openapi.json Look at use arkid.core.extension.Extension.register_extend_api arkid.core.extension.Extension.listen_event Exemplary from arkid.core import extension from api.v1.views.app import AppConfigSchemaIn class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_api ( AppConfigSchemaIn , case1 = str , case2 = ( str , Field ( title = 'case2_name' ))) self . listen_event ( 'api_v1_views_app_list_apps_pre' , self . app_list_pre_handler ) def app_list_pre_handler ( self , event , ** kwargs ): print ( event . request . case1 ) print ( event . request . case2 )","title":"Modify Request"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/API/#modify-response","text":"Modify response\uff0cIn addition to modifying Response Other than Schema\uff0cIt also needs to really change the final return value After the response of each API is complete\uff0cWill also throw a event\uff0cThe tag of the event is operation_id\uff0c Just listen to the incident and modify the reponse in the incident\u3002 use arkid.core.extension.Extension.register_extend_api arkid.core.extension.Extension.listen_event Exemplary from arkid.core import extension from api.v1.views.app import AppConfigSchemaOut class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_api ( AppConfigSchemaOut , case1 = str , case2 = ( str , Field ( title = 'case2_name' ))) self . listen_event ( 'api_v1_views_app_list_apps' , self . app_list_handler ) def app_list_pre_handler ( self , event , ** kwargs ): event . response [ 'case1' ] = 'case1' event . response [ 'case2' ] = 'case2'","title":"Modify response"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/","text":"Configuration # Root directory file configuration # In the root directory of the plugin\uff0cNeed Config.Toml file\uff0cThe basic content of this file is as follows\uff1a config.toml package = 'com.longgui.case' name = \"Sample plugin\" version = '1.0' labels = 'case' homepage = 'https://www.company.com' logo = '' author = 'case@company.com' This file is with extension.__init__ The same role of the function. When uploading the plug -in to the plug -in store\uff0cThe plug -in store will also obtain the basic information of the plug -in through this configuration file\u3002 Database configuration # The kernel is for the convenience of the plug -in\uff0cCustomized the configuration form of three plug -in\u3002 And to generate the corresponding SCHEMA for these configurations to enable each plug -in API to dynamically adapt to the addition and deletion of the plugin\u3002 Plug -in configuration (Profile) # Define arkid.extension.models.Extension middle One -to -one configuration with the plug -in itself\uff0cjson format use arkid.core.extension.Extension.register_profile_schema Register its schema profileAdding, deletion, change inspection self.model Complete completion Considuous configuration (Settings) # Define arkid.extension.models.TenantExtension middle There is only one settings configuration for each plugin under each tenant\uff0cjson format use arkid.core.extension.Extension.register_settings_schema Register its schema settingsAdding, deletion, change inspection\uff1a self.get_tenant_settings self.update_or_create_settings Configuration (config) during runtime # Define arkid.extension.models.TenantExtensionConfig middle Each plugin under each tenant has multiple configs\uff0cjson format use arkid.core.extension.Extension.register_config_schema Register its schema use arkid.core.extension.Extension.register_composite_config_schema Register a type of SCHEMA configAdding, deletion, change inspection: self.get_tenant_configs self.get_config_by_id self.create_tenant_config self.update_tenant_config self.delete_tenant_config Notice The schema of the plug -in should be called arkid.core.extension.create_extension_schema Methods to complete Exemplary ... package = 'com.longgui.case' Profile = create_extension_schema ( 'Profile' , package , fields = [ ( 'name' , str , Field ()) ] ) Settings = create_extension_schema ( 'Settings' , package , fields = [ ( 'name' , str , Field ()) ] ) Config = create_extension_schema ( 'Config' , package , fields = [ ( 'name' , str , Field ()) ] ) class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_profile_schema ( Profile ) self . register_settings_schema ( Settings ) self . register_config_schema ( Config ) self . register_composite_config_schema ( Config , 'type_name' ) ... arkid.extension.models # ArkStoreCategory ( BaseModel ) django-model # ArkStoreCategory(id, is_del, is_active, updated, created, arkstore_id, arkstore_name, arkstore_parent_id, arkstore_type) arkstore_id : IntegerField django-field nullable # ArkStoreID arkstore_name : CharField blank django-field nullable # ArkStore\u540d\u79f0 arkstore_parent_id : IntegerField django-field nullable # ArkStoreParentID arkstore_type : CharField django-field # \u7c7b\u522b created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 Extension ( BaseModel ) django-model # Extension(id, is_del, updated, created, type, labels, package, ext_dir, name, version, author, logo, homepage, is_active, expired, profile, is_allow_use_platform_config, category_id) author : CharField blank django-field nullable # Author category_id : IntegerField django-field nullable # ArkStore\u5206\u7c7bID created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 expired : BooleanField django-field # expired ext_dir : CharField django-field # \u5b8c\u6574\u8def\u5f84\u540d homepage : CharField blank django-field nullable # Homepage id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u542f\u52a8 is_allow_use_platform_config : BooleanField django-field # \u662f\u5426\u5141\u8bb8\u79df\u6237\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 labels : JSONField blank django-field # Labels logo : CharField blank django-field nullable # Logo name : CharField django-field # \u540d\u79f0 package : CharField django-field # \u6807\u8bc6 profile : JSONField blank django-field # Setup Profile type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 version : CharField django-field # \u7248\u672c TenantExtension ( BaseModel ) django-model # TenantExtension(id, is_del, updated, created, tenant, extension, settings, is_active, is_rented, use_platform_config) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u4f7f\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_rented : BooleanField django-field # \u662f\u5426\u5df2\u79df\u8d41 settings : JSONField blank django-field # Tenant Settings tenant : ForeignKey django-field # \u79df\u6237 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 use_platform_config : BooleanField django-field # \u662f\u5426\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e TenantExtensionConfig ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4","title":"Configuration"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#configuration","text":"","title":"Configuration"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#root-directory-file-configuration","text":"In the root directory of the plugin\uff0cNeed Config.Toml file\uff0cThe basic content of this file is as follows\uff1a config.toml package = 'com.longgui.case' name = \"Sample plugin\" version = '1.0' labels = 'case' homepage = 'https://www.company.com' logo = '' author = 'case@company.com' This file is with extension.__init__ The same role of the function. When uploading the plug -in to the plug -in store\uff0cThe plug -in store will also obtain the basic information of the plug -in through this configuration file\u3002","title":"Root directory file configuration"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#database-configuration","text":"The kernel is for the convenience of the plug -in\uff0cCustomized the configuration form of three plug -in\u3002 And to generate the corresponding SCHEMA for these configurations to enable each plug -in API to dynamically adapt to the addition and deletion of the plugin\u3002","title":"Database configuration"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#plug-in-configuration-profile","text":"Define arkid.extension.models.Extension middle One -to -one configuration with the plug -in itself\uff0cjson format use arkid.core.extension.Extension.register_profile_schema Register its schema profileAdding, deletion, change inspection self.model Complete completion","title":"Plug -in configuration (Profile)"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#considuous-configuration-settings","text":"Define arkid.extension.models.TenantExtension middle There is only one settings configuration for each plugin under each tenant\uff0cjson format use arkid.core.extension.Extension.register_settings_schema Register its schema settingsAdding, deletion, change inspection\uff1a self.get_tenant_settings self.update_or_create_settings","title":"Considuous configuration (Settings)"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#configuration-config-during-runtime","text":"Define arkid.extension.models.TenantExtensionConfig middle Each plugin under each tenant has multiple configs\uff0cjson format use arkid.core.extension.Extension.register_config_schema Register its schema use arkid.core.extension.Extension.register_composite_config_schema Register a type of SCHEMA configAdding, deletion, change inspection: self.get_tenant_configs self.get_config_by_id self.create_tenant_config self.update_tenant_config self.delete_tenant_config Notice The schema of the plug -in should be called arkid.core.extension.create_extension_schema Methods to complete Exemplary ... package = 'com.longgui.case' Profile = create_extension_schema ( 'Profile' , package , fields = [ ( 'name' , str , Field ()) ] ) Settings = create_extension_schema ( 'Settings' , package , fields = [ ( 'name' , str , Field ()) ] ) Config = create_extension_schema ( 'Config' , package , fields = [ ( 'name' , str , Field ()) ] ) class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_profile_schema ( Profile ) self . register_settings_schema ( Settings ) self . register_config_schema ( Config ) self . register_composite_config_schema ( Config , 'type_name' ) ...","title":"Configuration (config) during runtime"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models","text":"","title":"models"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory","text":"ArkStoreCategory(id, is_del, is_active, updated, created, arkstore_id, arkstore_name, arkstore_parent_id, arkstore_type)","title":"ArkStoreCategory"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.arkstore_id","text":"ArkStoreID","title":"arkstore_id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.arkstore_name","text":"ArkStore\u540d\u79f0","title":"arkstore_name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.arkstore_parent_id","text":"ArkStoreParentID","title":"arkstore_parent_id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.arkstore_type","text":"\u7c7b\u522b","title":"arkstore_type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.ArkStoreCategory.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension","text":"Extension(id, is_del, updated, created, type, labels, package, ext_dir, name, version, author, logo, homepage, is_active, expired, profile, is_allow_use_platform_config, category_id)","title":"Extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.author","text":"Author","title":"author"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.category_id","text":"ArkStore\u5206\u7c7bID","title":"category_id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.expired","text":"expired","title":"expired"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.ext_dir","text":"\u5b8c\u6574\u8def\u5f84\u540d","title":"ext_dir"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.homepage","text":"Homepage","title":"homepage"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.is_active","text":"\u662f\u5426\u542f\u52a8","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.is_allow_use_platform_config","text":"\u662f\u5426\u5141\u8bb8\u79df\u6237\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e","title":"is_allow_use_platform_config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.labels","text":"Labels","title":"labels"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.logo","text":"Logo","title":"logo"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.package","text":"\u6807\u8bc6","title":"package"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.profile","text":"Setup Profile","title":"profile"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.Extension.version","text":"\u7248\u672c","title":"version"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension","text":"TenantExtension(id, is_del, updated, created, tenant, extension, settings, is_active, is_rented, use_platform_config)","title":"TenantExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.is_active","text":"\u662f\u5426\u4f7f\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.is_rented","text":"\u662f\u5426\u5df2\u79df\u8d41","title":"is_rented"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.settings","text":"Tenant Settings","title":"settings"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtension.use_platform_config","text":"\u662f\u5426\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e","title":"use_platform_config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type)","title":"TenantExtensionConfig"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Configuration/#arkid.extension.models.TenantExtensionConfig.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Database/","text":"database # Custom data table # The plug -in can have its own data table\uff0cJust create Models in the root directory.py file\uff0cUse django ORM standard writing\u3002 Plug -in database version update is also the principle of Django\uff0cDevelopers need to run by themselves makemigrations migrateWill run automatically before loading the plug -in models.py from django.db import models from arkid.core.translation import gettext_default as _ from django.apps import AppConfig app_label = \"com_longgui_case\" class CaseApp ( AppConfig ): name = app_label class CaseModel ( models . Model ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 ) hint In Models.Be sure to declare AppConfig in PY\uff0c When creating a model, you also need to declare its app_label makemigrations command: python manage.py makemigrations {app_label} Extended kernel data table # In Arkid.core.The data table defined in the models\uff0cAll inherit ExtendModel Category\uff0cIt's all modified modes that can be directly expanded\u3002 The Model class that is recommended to expand is\uff1a arkid.core.models.Tenant arkid.core.models.User arkid.core.models.UserGroup arkid.core.models.App arkid.core.models.AppGroup In the plug -in\uff0cDefine a model\uff0cThe outside key is the above classes\u3002To facilitate this operation\uff0cexist arkid.core.models These abstract classes have been defined in China\uff0cCan be inherited directly\u3002 arkid.core.expand.TenantExpandAbstract arkid.core.expand.UserExpandAbstract arkid.core.expand.UserGroupExpandAbstract arkid.core.expand.AppExpandAbstract arkid.core.expand.AppGroupExpandAbstract After defining the model\uff0cNeed to call arkid.core.extension.Extension.register_extend_field register\uff0cAfter that, you can directly query\uff0ckeep\uff0cDelete operation Inquire : {model}.expand_objects New or modified : {model}.save() delete : {model}.delete() models.py from django.db import models from arkid.core.expand import create_expand_abstract_model from arkid.core.translation import gettext_default as _ from django.apps import AppConfig from arkid.core.models import UserExpandAbstract app_label = \"com_longgui_case\" class LongguiCaseAppConfig ( AppConfig ): name = app_label class CaseUser ( UserExpandAbstract ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 ) __init__.py from arkid.core import extension from arkid.core.translation import gettext_default as _ from arkid.core.models import User from .models import CaseUser from typing import List , Optional from pydantic import Field package = 'com.longgui.case' UserSchema = extension . create_extension_schema ( 'UserSchema' , package , fields = [ ( 'username' , str , Field ()), ( 'nickname' , Optional [ str ], Field ()), ] ) class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_field ( CaseUser , 'nickname' ) self . register_api ( '/test/' , 'POST' , self . post_handler , tenant_path = True ) self . register_api ( '/test/' , 'GET' , self . get_handler , response = List [ UserSchema ], tenant_path = True ) def post_handler ( self , request , tenant_id : str , data : UserSchema ): tenant = request . tenant user = User () user . tenant = tenant user . username = data . username user . nickname = data . nickname user . save () def get_handler ( self , request , tenant_id : str , ): users = User . expand_objects . filter ( tenant = request . tenant ) . all () return list ( users ) extension = CaseExtension ( package = package , description = \"\" , version = '1.0' , labels = 'case' , homepage = 'https://www.longguikeji.com' , logo = '' , author = 'wely' , )","title":"database"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Database/#database","text":"","title":"database"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Database/#custom-data-table","text":"The plug -in can have its own data table\uff0cJust create Models in the root directory.py file\uff0cUse django ORM standard writing\u3002 Plug -in database version update is also the principle of Django\uff0cDevelopers need to run by themselves makemigrations migrateWill run automatically before loading the plug -in models.py from django.db import models from arkid.core.translation import gettext_default as _ from django.apps import AppConfig app_label = \"com_longgui_case\" class CaseApp ( AppConfig ): name = app_label class CaseModel ( models . Model ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 ) hint In Models.Be sure to declare AppConfig in PY\uff0c When creating a model, you also need to declare its app_label makemigrations command: python manage.py makemigrations {app_label}","title":"Custom data table"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Database/#extended-kernel-data-table","text":"In Arkid.core.The data table defined in the models\uff0cAll inherit ExtendModel Category\uff0cIt's all modified modes that can be directly expanded\u3002 The Model class that is recommended to expand is\uff1a arkid.core.models.Tenant arkid.core.models.User arkid.core.models.UserGroup arkid.core.models.App arkid.core.models.AppGroup In the plug -in\uff0cDefine a model\uff0cThe outside key is the above classes\u3002To facilitate this operation\uff0cexist arkid.core.models These abstract classes have been defined in China\uff0cCan be inherited directly\u3002 arkid.core.expand.TenantExpandAbstract arkid.core.expand.UserExpandAbstract arkid.core.expand.UserGroupExpandAbstract arkid.core.expand.AppExpandAbstract arkid.core.expand.AppGroupExpandAbstract After defining the model\uff0cNeed to call arkid.core.extension.Extension.register_extend_field register\uff0cAfter that, you can directly query\uff0ckeep\uff0cDelete operation Inquire : {model}.expand_objects New or modified : {model}.save() delete : {model}.delete() models.py from django.db import models from arkid.core.expand import create_expand_abstract_model from arkid.core.translation import gettext_default as _ from django.apps import AppConfig from arkid.core.models import UserExpandAbstract app_label = \"com_longgui_case\" class LongguiCaseAppConfig ( AppConfig ): name = app_label class CaseUser ( UserExpandAbstract ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 ) __init__.py from arkid.core import extension from arkid.core.translation import gettext_default as _ from arkid.core.models import User from .models import CaseUser from typing import List , Optional from pydantic import Field package = 'com.longgui.case' UserSchema = extension . create_extension_schema ( 'UserSchema' , package , fields = [ ( 'username' , str , Field ()), ( 'nickname' , Optional [ str ], Field ()), ] ) class CaseExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extend_field ( CaseUser , 'nickname' ) self . register_api ( '/test/' , 'POST' , self . post_handler , tenant_path = True ) self . register_api ( '/test/' , 'GET' , self . get_handler , response = List [ UserSchema ], tenant_path = True ) def post_handler ( self , request , tenant_id : str , data : UserSchema ): tenant = request . tenant user = User () user . tenant = tenant user . username = data . username user . nickname = data . nickname user . save () def get_handler ( self , request , tenant_id : str , ): users = User . expand_objects . filter ( tenant = request . tenant ) . all () return list ( users ) extension = CaseExtension ( package = package , description = \"\" , version = '1.0' , labels = 'case' , homepage = 'https://www.longguikeji.com' , logo = '' , author = 'wely' , )","title":"Extended kernel data table"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Documentation/","text":"Documentation # ArkIDUse mkdocs As a default document, use mkdocs-material Theme Run in Arkid root directory mkdocs serve access http://localhost:8000 To Plug -in documentation # The document of the plug -in only needs to add the Markdown file in the plug -in root directory to automatically load it to the document\uff0cshow on System plug -in Under contents Recommended default use index.md","title":"Documentation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Documentation/#documentation","text":"ArkIDUse mkdocs As a default document, use mkdocs-material Theme Run in Arkid root directory mkdocs serve access http://localhost:8000 To","title":"Documentation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Documentation/#plug-in-documentation","text":"The document of the plug -in only needs to add the Markdown file in the plug -in root directory to automatically load it to the document\uff0cshow on System plug -in Under contents Recommended default use index.md","title":"Plug -in documentation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Event/","text":"event # Event as the core ability of plug -in and kernel communication\uff0cCompleted by custom event or listening to the kernel event\u3002 The definition of events is divided into two parts\uff1a [EventType: Event\uff0cUsed to register (register)] (../../Reference documentation/Event list/#arkid.core.event.EventType) [Event: event\uff0cUsed to trigger (Dispatch)] (../../Reference documentation/Event list/#arkid.core.event.Event) Custom event # The general logic of the event is\uff1a register Event : arkid.core.extension.Extension.register_event arkid.core.extension.Extension.register_event_type Listening incident: arkid.core.extension.Extension.listen_event Incident: arkid.core.extension.Extension.dispatch_event Notice When registering an event type\uff0cIn order to avoid the incident TAG naming conflict\uff0cWill add the plug -in before tag package + '.' As a prefix Exemplary from arkid.core import extension , event CUSTOM_EVENT = 'CUSTOM_EVENT' CUSTOM_EVENT2 = 'CUSTOM_EVENT2' class CaseExtension ( extension . Extension ): def load ( self ): super () . load () custom_event_tag = self . register_event ( CUSTOM_EVENT , 'Custom event' ) custom_event2_tag = self . register_event_type ( event . EventType ( CUSTOM_EVENT2 , 'Custom event 2' )) self . listen_event ( custom_event_tag , event_handler ) self . listen_event ( custom_event2_tag , event_handler ) self . register_api ( '/custom_event/' , 'GET' , self . api_func ) self . register_api ( '/custom_event2/' , 'GET' , self . api_func2 ) def api_func ( self , request ): self . dispatch_event ( event . Event ( CUSTOM_EVENT )) def api_func2 ( self , request ): self . dispatch_event ( event . Event ( CUSTOM_EVENT2 )) def event_handler ( self , event , ** kwargs ): print ( event . tag ) Listen to the kernel or other events # Keep the kernel events to see [Kernel event document] (../../Reference documentation/Event list/) All events\uff08Including the type of core and plug -in registered event type\uff09Can [Expansion capacity-Event list] (../../../%20%20%20UserGuide/User Manual/%20Tenants Administrator/Extension/#Event list) Check Notice In fact\uff0cThe incident defined in the plugin can also be listened to\uff0cBut because the plug -in itself may not be unstable\uff0cFor example, upgrades will change related events,So it is not recommended\u3002","title":"event"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Event/#event","text":"Event as the core ability of plug -in and kernel communication\uff0cCompleted by custom event or listening to the kernel event\u3002 The definition of events is divided into two parts\uff1a [EventType: Event\uff0cUsed to register (register)] (../../Reference documentation/Event list/#arkid.core.event.EventType) [Event: event\uff0cUsed to trigger (Dispatch)] (../../Reference documentation/Event list/#arkid.core.event.Event)","title":"event"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Event/#custom-event","text":"The general logic of the event is\uff1a register Event : arkid.core.extension.Extension.register_event arkid.core.extension.Extension.register_event_type Listening incident: arkid.core.extension.Extension.listen_event Incident: arkid.core.extension.Extension.dispatch_event Notice When registering an event type\uff0cIn order to avoid the incident TAG naming conflict\uff0cWill add the plug -in before tag package + '.' As a prefix Exemplary from arkid.core import extension , event CUSTOM_EVENT = 'CUSTOM_EVENT' CUSTOM_EVENT2 = 'CUSTOM_EVENT2' class CaseExtension ( extension . Extension ): def load ( self ): super () . load () custom_event_tag = self . register_event ( CUSTOM_EVENT , 'Custom event' ) custom_event2_tag = self . register_event_type ( event . EventType ( CUSTOM_EVENT2 , 'Custom event 2' )) self . listen_event ( custom_event_tag , event_handler ) self . listen_event ( custom_event2_tag , event_handler ) self . register_api ( '/custom_event/' , 'GET' , self . api_func ) self . register_api ( '/custom_event2/' , 'GET' , self . api_func2 ) def api_func ( self , request ): self . dispatch_event ( event . Event ( CUSTOM_EVENT )) def api_func2 ( self , request ): self . dispatch_event ( event . Event ( CUSTOM_EVENT2 )) def event_handler ( self , event , ** kwargs ): print ( event . tag )","title":"Custom event"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Event/#listen-to-the-kernel-or-other-events","text":"Keep the kernel events to see [Kernel event document] (../../Reference documentation/Event list/) All events\uff08Including the type of core and plug -in registered event type\uff09Can [Expansion capacity-Event list] (../../../%20%20%20UserGuide/User Manual/%20Tenants Administrator/Extension/#Event list) Check Notice In fact\uff0cThe incident defined in the plugin can also be listened to\uff0cBut because the plug -in itself may not be unstable\uff0cFor example, upgrades will change related events,So it is not recommended\u3002","title":"Listen to the kernel or other events"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/","text":"front end # According to the above configuration information structure description\uff0cWe need to be on the back -end interface\uff08/api/v1/openapi.json\uff09The corresponding page configuration data is generated for the front -end analysis\uff0cThe following is the basic code step\uff1a Create a page # from arkid.core import pages user_list_tag = 'user_list' user_list_name = 'user list' page = pages . FrontPage ( tag = user_list_tag , name = user_list_name , page_type = pages . FrontPageType . TABLE_PAGE , init_action = pages . FrontAction ( path = '/api/v1/tenant/ {tenant_id} /users/' , method = pages . FrontActionMethod . GET ) ) Add Action to Page # ... page . add_local_action ( [ pages . FrontAction ( name = _ ( \"delete\" ), method = pages . FrontActionMethod . DELETE , path = \"/api/v1/tenant/ {tenant_id} /users/ {id} /\" , icon = \"icon-delete\" , action_type = pages . FrontActionType . DIRECT_ACTION ) ] ) ... Register the page to the global situation # pages . register_front_pages ( page ) Write the route information # from arkid.core import routers user_list_router = routers . FrontRouter ( path = \"user_list\" , name = 'User Management' , icon = 'user' , page = page , ) router = routers . FrontRouter ( path = 'user' , name = 'User Management' , icon = 'user' , children = [ user_list_router , ], ) Finally visiting/api/v1/openapi.The data can be obtained when json interface\uff1a # { ... \"routers\" : [ { \"path\" : \"user\" , \"name\" : \"User Management\" , \"icon\" : \"user\" , \"children\" : [ { \"path\" : \"user_list\" , \"name\" : \"User Management\" , \"icon\" : \"user\" , \"page\" : \"user_list\" } ] } ], \"pages\" : [ { \"tag\" : \"user_list\" , \"name\" : \"user list\" , \"type\" : \"table\" , \"init\" : { \"tag\" : \"16058e11df284ae1a58fd1220a85e501\" , \"path\" : \"/api/v1/tenant/{tenant_id}/users/\" , \"method\" : \"get\" }, \"local\" : [ { \"tag\" : \"9181f711ffcb4ac5b5a793e043468595\" , \"name\" : \"delete\" , \"path\" : \"/api/v1/tenant/{tenant_id}/users/{id}/\" , \"method\" : \"delete\" , \"icon\" : \"icon-delete\" , \"type\" : \"direct\" } ], }, ] } ...","title":"front end"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#front-end","text":"According to the above configuration information structure description\uff0cWe need to be on the back -end interface\uff08/api/v1/openapi.json\uff09The corresponding page configuration data is generated for the front -end analysis\uff0cThe following is the basic code step\uff1a","title":"front end"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#create-a-page","text":"from arkid.core import pages user_list_tag = 'user_list' user_list_name = 'user list' page = pages . FrontPage ( tag = user_list_tag , name = user_list_name , page_type = pages . FrontPageType . TABLE_PAGE , init_action = pages . FrontAction ( path = '/api/v1/tenant/ {tenant_id} /users/' , method = pages . FrontActionMethod . GET ) )","title":"Create a page"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#add-action-to-page","text":"... page . add_local_action ( [ pages . FrontAction ( name = _ ( \"delete\" ), method = pages . FrontActionMethod . DELETE , path = \"/api/v1/tenant/ {tenant_id} /users/ {id} /\" , icon = \"icon-delete\" , action_type = pages . FrontActionType . DIRECT_ACTION ) ] ) ...","title":"Add Action to Page"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#register-the-page-to-the-global-situation","text":"pages . register_front_pages ( page )","title":"Register the page to the global situation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#write-the-route-information","text":"from arkid.core import routers user_list_router = routers . FrontRouter ( path = \"user_list\" , name = 'User Management' , icon = 'user' , page = page , ) router = routers . FrontRouter ( path = 'user' , name = 'User Management' , icon = 'user' , children = [ user_list_router , ], )","title":"Write the route information"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/FrontEnd/#finally-visitingapiv1openapithe-data-can-be-obtained-when-json-interface","text":"{ ... \"routers\" : [ { \"path\" : \"user\" , \"name\" : \"User Management\" , \"icon\" : \"user\" , \"children\" : [ { \"path\" : \"user_list\" , \"name\" : \"User Management\" , \"icon\" : \"user\" , \"page\" : \"user_list\" } ] } ], \"pages\" : [ { \"tag\" : \"user_list\" , \"name\" : \"user list\" , \"type\" : \"table\" , \"init\" : { \"tag\" : \"16058e11df284ae1a58fd1220a85e501\" , \"path\" : \"/api/v1/tenant/{tenant_id}/users/\" , \"method\" : \"get\" }, \"local\" : [ { \"tag\" : \"9181f711ffcb4ac5b5a793e043468595\" , \"name\" : \"delete\" , \"path\" : \"/api/v1/tenant/{tenant_id}/users/{id}/\" , \"method\" : \"delete\" , \"icon\" : \"icon-delete\" , \"type\" : \"direct\" } ], }, ] } ...","title":"Finally visiting/api/v1/openapi.The data can be obtained when json interface\uff1a"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Mistake/","text":"mistake # APIWhen the interface needs to be returned error\uff0cCall seld.error method Plug -in developers need to write their own error uniformly.py file\uff0cError codes and error messages that use enumeration parameters packaging plugins Unity in a place that needs to be returned\uff0cCall seld.error The specific enumeration object that needs to be prompted in\uff0cThis method returns to the encapsulated error message dictionary error.py from enum import Enum from arkid.core.translation import gettext_default as _ class ErrorCode ( Enum ): USERNAME_PASSWORD_MISMATCH = ( '10001-1' , _ ( 'username or password not correct' , 'wrong user name or password' )) CONTACT_MANAGER = ( '10001-5' , _ ( 'contact manager' , 'Accident\uff0cPlease contact the manager' )) USERNAME_EMPTY = ( '10001-6' , _ ( 'username empty' , 'User name is empty' )) ALL_USER_FLAG_LACK_FIELD = ( '10001-7' , _ ( 'fill in at least one user ID' , 'All user logos fill in at least one' )) FIELD_USER_EXISTS = ( '10001-8' , _ ( 'fill in at least one user ID' , ' {field} Fields and already some users repeat' )) PASSWORD_STRENGTH_LACK = ( '10001-9' , _ ( 'password strength lack' , ' Insufficient password strength' )) TWO_TIME_PASSWORD_MISMATCH = ( '10001-10' , _ ( 'two time password mismatch' , 'Different passwords input differently' )) OLD_PASSWORD_ERROR = ( '10001-10' , _ ( 'old password error' , 'The old password does not match' )) .... return self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH ) .... If normal return value\uff0cCall self.success Come back .... def api_function ( self . request ): .... return self . success ({ 'key' : value }) ....","title":"mistake"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Mistake/#mistake","text":"APIWhen the interface needs to be returned error\uff0cCall seld.error method Plug -in developers need to write their own error uniformly.py file\uff0cError codes and error messages that use enumeration parameters packaging plugins Unity in a place that needs to be returned\uff0cCall seld.error The specific enumeration object that needs to be prompted in\uff0cThis method returns to the encapsulated error message dictionary error.py from enum import Enum from arkid.core.translation import gettext_default as _ class ErrorCode ( Enum ): USERNAME_PASSWORD_MISMATCH = ( '10001-1' , _ ( 'username or password not correct' , 'wrong user name or password' )) CONTACT_MANAGER = ( '10001-5' , _ ( 'contact manager' , 'Accident\uff0cPlease contact the manager' )) USERNAME_EMPTY = ( '10001-6' , _ ( 'username empty' , 'User name is empty' )) ALL_USER_FLAG_LACK_FIELD = ( '10001-7' , _ ( 'fill in at least one user ID' , 'All user logos fill in at least one' )) FIELD_USER_EXISTS = ( '10001-8' , _ ( 'fill in at least one user ID' , ' {field} Fields and already some users repeat' )) PASSWORD_STRENGTH_LACK = ( '10001-9' , _ ( 'password strength lack' , ' Insufficient password strength' )) TWO_TIME_PASSWORD_MISMATCH = ( '10001-10' , _ ( 'two time password mismatch' , 'Different passwords input differently' )) OLD_PASSWORD_ERROR = ( '10001-10' , _ ( 'old password error' , 'The old password does not match' )) .... return self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH ) .... If normal return value\uff0cCall self.success Come back .... def api_function ( self . request ): .... return self . success ({ 'key' : value }) ....","title":"mistake"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Multi-Language/","text":"multi-language # Because django-Ninja's original multi -language interface compatibility with Django in OpenAPI's interface is not good\u3002 so\uff0cArkid customized a set of multi -language implementation methods\u3002 Mainly through\uff1a arkid.core.translation.gettext_default To implement\uff0cThe default is\u201dSimplified Chinese\u201c\u3002 from django.db import models from arkid.core.translation import gettext_default as _ from django.apps import AppConfig app_label = \"com_longgui_case\" class CaseApp ( AppConfig ): name = app_label class CaseModel ( models . Model ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 )","title":"multi-language"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Multi-Language/#multi-language","text":"Because django-Ninja's original multi -language interface compatibility with Django in OpenAPI's interface is not good\u3002 so\uff0cArkid customized a set of multi -language implementation methods\u3002 Mainly through\uff1a arkid.core.translation.gettext_default To implement\uff0cThe default is\u201dSimplified Chinese\u201c\u3002 from django.db import models from arkid.core.translation import gettext_default as _ from django.apps import AppConfig app_label = \"com_longgui_case\" class CaseApp ( AppConfig ): name = app_label class CaseModel ( models . Model ): class Meta : app_label = app_label nickname = models . CharField ( verbose_name = _ ( 'nickname' , 'Nick name' ), max_length = 128 )","title":"multi-language"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/PipDependence/","text":"Piprely # When the plug -in needs an additional dependent package\uff0cJust need the plug -in Requirements.TXT files are generated and placed in the root directory ArkIDIt will automatically install Requirements before loading the plug -in.All dependent packages in txt files\u3002 requirements.txt alibabacloud-dysmsapi20170525==2.0.9","title":"Piprely"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/PipDependence/#piprely","text":"When the plug -in needs an additional dependent package\uff0cJust need the plug -in Requirements.TXT files are generated and placed in the root directory ArkIDIt will automatically install Requirements before loading the plug -in.All dependent packages in txt files\u3002 requirements.txt alibabacloud-dysmsapi20170525==2.0.9","title":"Piprely"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/","text":"Plug -in base class # The most basic base class of plug -in arkid.core.extension.Extension The core method of supporting hot insertion is start() and stop() Will call load() and unload() method\uff0cThese two methods are in each plug -in subclass\uff0cUse the operation of installation and uninstallation load() Abstract method\uff0cIt is required that each plug -in should be realized\u3002 unload() Can also be reloaded\u3002Will all registered APIs registered in the process of load ()\uff0cevent\uff0cWait for destruction\u3002 therefore\uff0cTry to avoid directly using the kernel API in the plug -in\uff0cAnd to be encapsulated in the plug -in register Starting method\u3002transfer register When the type of method\uff0cThe destruction of related operations will be executed in STOP\uff0cNo need to do it in Unload\u3002 Some changes to the page content\uff0cFor example, Actions related modifications\uff0cThe destruction displayed in Unload\u3002 Hint In fact\uff0cCall start() The presence will be carried out migrate \uff0cyes\uff01Plug -in migrations Still effective\u3002 arkid.core.extension.Extension ( ABC ) # Parameters: Name Type Description Default name str, \u63d2\u4ef6\u540d\u5b57\uff0cpackage\u4e2d\u70b9\u201c.\u201d\u66ff\u6362\u4e3a\u4e0b\u5212\u7ebf\"_\" None ext_dir property writable # \u63d2\u4ef6\u5b8c\u6574\u8def\u5f84\uff0c\u7528.\u5206\u9694 full_name property readonly # \u63d2\u4ef6\u5b8c\u6574\u8def\u5f84\uff0c\u7528/\u5206\u9694 model property readonly # \u63d2\u4ef6\u5bf9\u5e94\u6570\u636e\u5e93model __init__ ( self , package = None , version = None , name = None , logo = None , description = None , labels = None , homepage = None , author = None ) special # summary Parameters: Name Type Description Default package str \u63d2\u4ef6\u5305\u540d\uff0c\u552f\u4e00\u6807\u8bc6 None version str \u7248\u672c\u53f7 None name str \u540d\u79f0 None logo str \u63d2\u4ef6\u7684\u56fe\u6807 None description str \u63cf\u8ff0 None labels List[str] \u6807\u7b7e None homepage str \u4e3b\u9875\uff0cURL None author str \u4f5c\u8005 None create_composite_config_schema ( schema_cls_name , exclude = [], ** field_definitions ) classmethod # \u521b\u9020\u590d\u5408\u7c7b\u578b \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default schema_cls_name str \u590d\u5408\u7c7b\u578b\u8fd0\u884c\u65f6\u914d\u7f6e\u7684Schema\u7684\u540d\u5b57 required exclude list \u53bb\u6389\u7684\u5b57\u6bb5\u5217\u8868. Defaults to []. [] Returns: Type Description Schema \u521b\u5efa\u597d\u7684Schema create_config_schema ( name , ** field_definitions ) classmethod # \u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6 \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {} create_profile_schema ( name , ** field_definitions ) classmethod # \u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6\u914d\u7f6e\u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {} create_settings_schema ( name , ** field_definitions ) classmethod # \u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6 \u79df\u6237\u914d\u7f6e(settings) \u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {} create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 delete_tenant_config ( self , id ) # \u5220\u9664\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required Returns: Type Description TenantExtensionConfig \u5220\u9664\u7684\u5bf9\u8c61 dispatch_event ( self , event ) # \u629b\u51fa\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u4e8b\u4ef6\u5b9e\u4f8b required Returns: Type Description (tuple[Function, Result]) \u4e8b\u4ef6\u5904\u7406\u7684\u8fd4\u56de\u503c error ( self , enum = None , ** kwargs ) # API\u63a5\u53e3\u9519\u8befdict Parameters: Name Type Description Default enum Enum \u9519\u8bef\u7684\u679a\u4e3e\u7c7b\uff0c\u5982\u679c\u4e3aNone\uff0c\u6807\u8bc6\u6210\u529f\u8fd4\u56de. Defaults to None. None Returns: Type Description dict \u751f\u6210\u7684\u9519\u8befdict get_config_by_id ( self , id ) # \u901a\u8fc7config_id\u6765\u83b7\u53d6config Parameters: Name Type Description Default id UUID config_id required Returns: Type Description TenantExtensionConfig config get_settings ( self , tenant ) # \u83b7\u53d6\u79df\u6237\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required Returns: Type Description TenantExtension \u79df\u6237\u914d\u7f6e get_tenant_configs ( self , tenant ) # \u83b7\u53d6\u5f53\u524d\u79df\u6237\u4e0b\u6240\u6709\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required Returns: Type Description List[TenantExtensionConfig] tenant\u4e0b\u6240\u6709\u7684\u8fd0\u884c\u65f6\u914d\u7f6e listen_event ( self , tag , func ) # \u4fa6\u542c\u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7684tag required func Function \u56de\u8c03\u51fd\u6570, event, **kwargs\u4e3a\u5fc5\u6709\u53c2\u6570\u3002\u5176\u4e2d\u53ea\u6709\u5f53\u524d\u63d2\u4ef6\u7684package\u5728event.packages\u4e2d\u65f6\uff0c\u8be5\u63d2\u4ef6\u624d\u54cd\u5e94\u8be5\u4e8b\u4ef6\u3002 required load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 register_api ( self , path , method , view_func , * , tenant_path = False , auth = ninja . constants . NOT_SET_TYPE , response = ninja . constants . NOT_SET_TYPE , operation_id = None , summary = None , description = None , tags = None , deprecated = None , by_alias = False , exclude_unset = False , exclude_defaults = False , exclude_none = False , url_name = None , include_in_schema = True ) # Django-ninja\u7684\u65b9\u5f0f\u6ce8\u518c\u81ea\u5b9a\u4e49API Parameters: Name Type Description Default path str \u8bf7\u6c42\u8def\u5f84 required method str \u8bf7\u6c42\u65b9\u6cd5,\u503c\u4e3a\uff1aGET\uff0cPOST\uff0cDELETE\uff0cPUT\u7b49 required view_func Callable api\u65b9\u6cd5 required tenant_path bool \u662f\u5426\u9700\u8981tenant\u5f00\u5934\uff0c\u4e3aTure\u65f6\uff0cpath\u524d\u81ea\u52a8\u52a0\u4e0a'/tenant/{tenant_id}'\u7684\u7ed3\u6784. Defaults to False. False auth Any \u8ba4\u8bc1\u65b9\u6cd5. Defaults to NOT_SET. ninja.constants.NOT_SET_TYPE response Any response schema. Defaults to NOT_SET. ninja.constants.NOT_SET_TYPE operation_id Optional[str] Defaults to None. None summary Optional[str] Defaults to None. None description Optional[str] Defaults to None. None tags Optional[List[str]] Defaults to None. None deprecated Optional[bool] Defaults to None. None by_alias bool Defaults to False. False exclude_unset bool Defaults to False. False exclude_defaults bool Defaults to False. False exclude_none bool Defaults to False. False url_name Optional[str] Defaults to None. None include_in_schema bool Defaults to True. True Returns: Type Description str \u771f\u5b9e\u7684\u5730\u5740path register_composite_config_schema ( self , schema , composite_value , exclude = [], package = None ) # \u6ce8\u518c\u590d\u5408\u7c7b\u578b \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default schema class Schema\u7c7b required composite_value str \u590d\u5408\u7c7b\u578b required exclude list \u4eceschema\u7684\u5b57\u6bb5\u4e2d\u5220\u6389\u7684\u5b57\u6bb5\u5217\u8868. Defaults to []. [] package str \u81ea\u5b9a\u4e49package\u540d\u5b57\uff0c\u4e0d\u4f20\u5c31\u4f7f\u7528self.package\uff0c \u6b63\u5e38\u60c5\u51b5\u4e0d\u7528\u8bbe\u7f6e. None register_config_schema ( self , schema , schema_tag = None ) # \u6ce8\u518c\u63d2\u4ef6\u7684 \u8fd0\u884c\u65f6\u914d\u7f6e config schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None register_event ( self , tag , name , data_schema = None , description = '' ) # \u6ce8\u518c\u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u6807\u8bc6 required name str \u4e8b\u4ef6\u540d\u5b57 required data_schema schema class event.data\u7684schema. Defaults to None. None description str \u4e8b\u4ef6\u63cf\u8ff0. Defaults to ''. '' Returns: Type Description str \u771f\u5b9e\u4e8b\u4ef6\u6807\u8bc6tag\uff0c\u4e3aself.package +'.'+ tag register_event_type ( self , event_type ) # \u6ce8\u518c\u4e8b\u4ef6\u7c7b\u578b Parameters: Name Type Description Default event_type EventType \u4e8b\u4ef6\u7c7b\u578b\u5bf9\u8c61 required Returns: Type Description EventType tag = package+'.'+tag register_extend_api ( self , * api_schema_cls , ** field_definitions ) # \u6ce8\u518c\u6269\u5c55\u5185\u6838API Parameters: Name Type Description Default api_schema_cls class API Schema Class () field_definitions name=tuple(Type,Field \u9700\u8981\u589e\u52a0\u7684\u5b57\u6bb5\uff0cexample\uff1aname=(str, Field(title='\u540d\u5b57')) {} register_extend_field ( self , model_cls , model_field , alias = None ) # \u6ce8\u518c\u6269\u5c55\u6570\u636e\u5e93\u5b57\u6bb5\uff0c\u5bf9\u539f\u672c\u6570\u636e\u5e93\u5b57\u6bb5\u8fdb\u884c\u6269\u5c55 Parameters: Name Type Description Default model_cls Union[ core_expand.TenantExpandAbstract, core_expand.UserExpandAbstract, core_expand.UserGroupExpandAbstract, core_expand.AppExpandAbstract, core_expand.AppGroupExpandAbstract, ] \u6269\u5c55\u5b9a\u4e49\u7684model required model_field str \u6269\u5c55\u7684\u5b57\u6bb5 required alias str \u6269\u5c55\u5b57\u6bb5\u5728\u539fmodel\u4e2d\u7684\u522b\u540d. None\u610f\u5473\u7740\u5c31\u4f7f\u7528model_field\u4f5c\u4e3a\u5176\u5728\u539fmodel\u4e2d\u7684\u522b\u540d None Exceptions: Type Description Exception \u975e\u6cd5\u7684\u6269\u5c55\u5b57\u6bb5\u7c7b\u5bf9\u5e94\u7684\u7236\u7c7b register_front_pages ( self , page ) # \u6ce8\u518c\u524d\u7aef\u9875\u9762 Parameters: Name Type Description Default page core_pages.FrontPage \u524d\u7aef\u9875\u9762 required register_front_routers ( self , router , primary = None ) # \u6ce8\u518c\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default router core_routers.FrontRouter \u524d\u7aef\u8def\u7531\u5b9e\u4f8b required primary core_routers.FrontRouter \u4e00\u7ea7\u8def\u7531\u540d\u5b57\uff0c\u7531 core_routers \u6587\u4ef6\u63d0\u4f9b\u5b9a\u4e49. Defaults to None. None register_profile_schema ( self , schema , schema_tag = None ) # \u6ce8\u518c\u63d2\u4ef6\u914d\u7f6e profile schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None register_routers ( self , urls_ext , tenant_urls = False ) # \u6ce8\u518c\u8def\u7531 Parameters: Name Type Description Default urls_ext List[partial] \u9700\u8981\u6ce8\u518c\u7684\u8def\u7531 required tenant_urls bool \u662f\u5426\u8981\u6dfb\u52a0 tenant/{tenant_id}/ \u524d\u7f00. Defaults to False. False register_settings_schema ( self , schema , schema_tag = None ) # \u6ce8\u518c\u63d2\u4ef6\u7684 \u79df\u6237\u914d\u7f6e settings schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None stop ( self ) # \u63d2\u4ef6\u5378\u8f7d success ( self , data = None , ** kwargs ) # API\u63a5\u53e3\u6210\u529fdict Parameters: Name Type Description Default data dict \u6210\u529f\u65f6\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e. Defaults to None. None Returns: Type Description dict \u751f\u6210\u7684\u6210\u529fdict unregister_extend_api ( self , * api_schema_cls , * , field_keys = []) # \u79fb\u9664\u6269\u5c55\u5185\u6838API Parameters: Name Type Description Default api_schema_cls class API Schema Class () field_keys list \u9700\u8981\u79fb\u9664\u7684\u5b57\u6bb5\u540d\u79f0\uff0cexample\uff1afield_keys=['nickname','mobile']) [] update_or_create_settings ( self , tenant , settings , is_active , use_platform_config ) # \u66f4\u65b0\u6216\u521b\u5efa\u79df\u6237\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required settings dict \u79df\u6237\u914d\u7f6e required is_active bool \u662f\u5426\u542f\u7528 required use_platform_config bool \u662f\u5426\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e required Returns: Type Description TenantExtension \u66f4\u65b0\u6216\u521b\u5efa\u7684\u5bf9\u8c61 update_tenant_config ( self , id , config , name , type ) # \u66f4\u65b0\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description bool \u66f4\u65b0\u6210\u529fTrue\uff0c\u6ca1\u6709\u627e\u5230\u8be5\u914d\u7f6e\u8fd4\u56deFalse arkid . core . extension . create_extension_schema ( name , file_path , fields = None , base_schema =< class ' ninja . schema . Schema '>, exclude=[]) # \u63d0\u4f9b\u7ed9\u63d2\u4ef6\u7528\u6765\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default name str Schema\u7684\u7c7b\u540d required file_path str \u6307\u63d2\u4ef6__init__.py\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84, \u7528\u6765\u901a\u8fc7\u63d2\u4ef6\u7684config.toml\u6587\u4ef6\u83b7\u53d6package,\u4ece\u800c\u907f\u514dschema\u7684\u547d\u540d\u51b2\u7a81 required fields Optional[List[Tuple[str, Any, Any]]] Schema\u7684\u5b57\u6bb5\u5b9a\u4e49 None base_schema Type[Schema] Schema\u7684\u57fa\u7c7b. \u9ed8\u8ba4\u4e3a: ninja.Schema <class 'ninja.schema.Schema'> Returns: Type Description ninja.Schema \u521b\u5efa\u7684Schema\u7c7b arkid . core . extension . create_extension_schema_by_package ( name , package = '' , fields = None , base_schema =< class ' ninja . schema . Schema '>, exclude=[]) # \u63d0\u4f9b\u7ed9\u63d2\u4ef6\u7528\u6765\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default name str Schema\u7684\u7c7b\u540d required package str \u5982\u679c\u662f\u63d2\u4ef6\u8c03\u7528\u7684\u8be5\u65b9\u6cd5,\u4e00\u5b9a\u8981\u5c06\u63d2\u4ef6\u7684package\u4f20\u8fc7\u6765,\u4ee5\u907f\u514d\u547d\u540d\u51b2\u7a81 '' fields Optional[List[Tuple[str, Any, Any]]] Schema\u7684\u5b57\u6bb5\u5b9a\u4e49 None base_schema Type[Schema] Schema\u7684\u57fa\u7c7b. \u9ed8\u8ba4\u4e3a: ninja.Schema <class 'ninja.schema.Schema'> Returns: Type Description ninja.Schema \u521b\u5efa\u7684Schema\u7c7b arkid . core . extension . create_extension_schema_from_django_model ( model , * , name = '' , depth = 0 , fields = None , exclude = None , custom_fields = None , base_class =< class ' ninja . schema . Schema '>) # \u63d0\u4f9b\u7ed9\u63d2\u4ef6\u901a\u8fc7Django.Model\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default model Type[Model] \u57fa\u4e8e\u7684 Django Model required name str Schema\u7684\u7c7b\u540d. '' depth int \u904d\u5386Django Model\u7684\u6df1\u5ea6. 0 fields Optional[List[str]] \u4eceDjango Model\u4e2d\u83b7\u53d6\u7684\u5b57\u6bb5\u540d, \u5982\u679c\u662f\u6240\u6709\u7684\u5c31\u8bbe\u4e3a __all__ . None exclude Optional[List[str]] \u4eceDjango Model\u4e2d\u6392\u9664\u7684\u5b57\u6bb5\u540d. None custom_fields Optional[List[Tuple[str, Any, Any]]] \u6dfb\u52a0\u7684\u81ea\u5b9a\u4e49\u5b57\u6bb5. None base_class Type[Schema] Schema\u7684\u57fa\u7c7b. <class 'ninja.schema.Schema'> Returns: Type Description ninjia.Schema \u65b0\u521b\u5efa\u7684Schema\u7c7b","title":"Plug -in base class"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#plug-in-base-class","text":"The most basic base class of plug -in arkid.core.extension.Extension The core method of supporting hot insertion is start() and stop() Will call load() and unload() method\uff0cThese two methods are in each plug -in subclass\uff0cUse the operation of installation and uninstallation load() Abstract method\uff0cIt is required that each plug -in should be realized\u3002 unload() Can also be reloaded\u3002Will all registered APIs registered in the process of load ()\uff0cevent\uff0cWait for destruction\u3002 therefore\uff0cTry to avoid directly using the kernel API in the plug -in\uff0cAnd to be encapsulated in the plug -in register Starting method\u3002transfer register When the type of method\uff0cThe destruction of related operations will be executed in STOP\uff0cNo need to do it in Unload\u3002 Some changes to the page content\uff0cFor example, Actions related modifications\uff0cThe destruction displayed in Unload\u3002 Hint In fact\uff0cCall start() The presence will be carried out migrate \uff0cyes\uff01Plug -in migrations Still effective\u3002","title":"Plug -in base class"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension","text":"Parameters: Name Type Description Default name str, \u63d2\u4ef6\u540d\u5b57\uff0cpackage\u4e2d\u70b9\u201c.\u201d\u66ff\u6362\u4e3a\u4e0b\u5212\u7ebf\"_\" None","title":"Extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.ext_dir","text":"\u63d2\u4ef6\u5b8c\u6574\u8def\u5f84\uff0c\u7528.\u5206\u9694","title":"ext_dir"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.full_name","text":"\u63d2\u4ef6\u5b8c\u6574\u8def\u5f84\uff0c\u7528/\u5206\u9694","title":"full_name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.model","text":"\u63d2\u4ef6\u5bf9\u5e94\u6570\u636e\u5e93model","title":"model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.__init__","text":"summary Parameters: Name Type Description Default package str \u63d2\u4ef6\u5305\u540d\uff0c\u552f\u4e00\u6807\u8bc6 None version str \u7248\u672c\u53f7 None name str \u540d\u79f0 None logo str \u63d2\u4ef6\u7684\u56fe\u6807 None description str \u63cf\u8ff0 None labels List[str] \u6807\u7b7e None homepage str \u4e3b\u9875\uff0cURL None author str \u4f5c\u8005 None","title":"__init__()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.create_composite_config_schema","text":"\u521b\u9020\u590d\u5408\u7c7b\u578b \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default schema_cls_name str \u590d\u5408\u7c7b\u578b\u8fd0\u884c\u65f6\u914d\u7f6e\u7684Schema\u7684\u540d\u5b57 required exclude list \u53bb\u6389\u7684\u5b57\u6bb5\u5217\u8868. Defaults to []. [] Returns: Type Description Schema \u521b\u5efa\u597d\u7684Schema","title":"create_composite_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.create_config_schema","text":"\u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6 \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {}","title":"create_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.create_profile_schema","text":"\u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6\u914d\u7f6e\u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {}","title":"create_profile_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.create_settings_schema","text":"\u521b\u5efa\u5e76\u8fd4\u56de\u63d2\u4ef6 \u79df\u6237\u914d\u7f6e(settings) \u7684Schema Parameters: Name Type Description Default name str \u9700\u8981\u521b\u5efa\u7684 Schema Class \u7684\u540d\u5b57 required field_definitions Any \u4efb\u610f\u6570\u91cf\u7684field,\u683c\u5f0f\u4e3a: field_name=(field_type, Field(...)) {}","title":"create_settings_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.create_tenant_config","text":"\u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61","title":"create_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.delete_tenant_config","text":"\u5220\u9664\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required Returns: Type Description TenantExtensionConfig \u5220\u9664\u7684\u5bf9\u8c61","title":"delete_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.dispatch_event","text":"\u629b\u51fa\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u4e8b\u4ef6\u5b9e\u4f8b required Returns: Type Description (tuple[Function, Result]) \u4e8b\u4ef6\u5904\u7406\u7684\u8fd4\u56de\u503c","title":"dispatch_event()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.error","text":"API\u63a5\u53e3\u9519\u8befdict Parameters: Name Type Description Default enum Enum \u9519\u8bef\u7684\u679a\u4e3e\u7c7b\uff0c\u5982\u679c\u4e3aNone\uff0c\u6807\u8bc6\u6210\u529f\u8fd4\u56de. Defaults to None. None Returns: Type Description dict \u751f\u6210\u7684\u9519\u8befdict","title":"error()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.get_config_by_id","text":"\u901a\u8fc7config_id\u6765\u83b7\u53d6config Parameters: Name Type Description Default id UUID config_id required Returns: Type Description TenantExtensionConfig config","title":"get_config_by_id()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.get_settings","text":"\u83b7\u53d6\u79df\u6237\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required Returns: Type Description TenantExtension \u79df\u6237\u914d\u7f6e","title":"get_settings()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.get_tenant_configs","text":"\u83b7\u53d6\u5f53\u524d\u79df\u6237\u4e0b\u6240\u6709\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required Returns: Type Description List[TenantExtensionConfig] tenant\u4e0b\u6240\u6709\u7684\u8fd0\u884c\u65f6\u914d\u7f6e","title":"get_tenant_configs()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.listen_event","text":"\u4fa6\u542c\u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7684tag required func Function \u56de\u8c03\u51fd\u6570, event, **kwargs\u4e3a\u5fc5\u6709\u53c2\u6570\u3002\u5176\u4e2d\u53ea\u6709\u5f53\u524d\u63d2\u4ef6\u7684package\u5728event.packages\u4e2d\u65f6\uff0c\u8be5\u63d2\u4ef6\u624d\u54cd\u5e94\u8be5\u4e8b\u4ef6\u3002 required","title":"listen_event()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_api","text":"Django-ninja\u7684\u65b9\u5f0f\u6ce8\u518c\u81ea\u5b9a\u4e49API Parameters: Name Type Description Default path str \u8bf7\u6c42\u8def\u5f84 required method str \u8bf7\u6c42\u65b9\u6cd5,\u503c\u4e3a\uff1aGET\uff0cPOST\uff0cDELETE\uff0cPUT\u7b49 required view_func Callable api\u65b9\u6cd5 required tenant_path bool \u662f\u5426\u9700\u8981tenant\u5f00\u5934\uff0c\u4e3aTure\u65f6\uff0cpath\u524d\u81ea\u52a8\u52a0\u4e0a'/tenant/{tenant_id}'\u7684\u7ed3\u6784. Defaults to False. False auth Any \u8ba4\u8bc1\u65b9\u6cd5. Defaults to NOT_SET. ninja.constants.NOT_SET_TYPE response Any response schema. Defaults to NOT_SET. ninja.constants.NOT_SET_TYPE operation_id Optional[str] Defaults to None. None summary Optional[str] Defaults to None. None description Optional[str] Defaults to None. None tags Optional[List[str]] Defaults to None. None deprecated Optional[bool] Defaults to None. None by_alias bool Defaults to False. False exclude_unset bool Defaults to False. False exclude_defaults bool Defaults to False. False exclude_none bool Defaults to False. False url_name Optional[str] Defaults to None. None include_in_schema bool Defaults to True. True Returns: Type Description str \u771f\u5b9e\u7684\u5730\u5740path","title":"register_api()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_composite_config_schema","text":"\u6ce8\u518c\u590d\u5408\u7c7b\u578b \u8fd0\u884c\u65f6\u914d\u7f6e \u7684Schema Parameters: Name Type Description Default schema class Schema\u7c7b required composite_value str \u590d\u5408\u7c7b\u578b required exclude list \u4eceschema\u7684\u5b57\u6bb5\u4e2d\u5220\u6389\u7684\u5b57\u6bb5\u5217\u8868. Defaults to []. [] package str \u81ea\u5b9a\u4e49package\u540d\u5b57\uff0c\u4e0d\u4f20\u5c31\u4f7f\u7528self.package\uff0c \u6b63\u5e38\u60c5\u51b5\u4e0d\u7528\u8bbe\u7f6e. None","title":"register_composite_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_config_schema","text":"\u6ce8\u518c\u63d2\u4ef6\u7684 \u8fd0\u884c\u65f6\u914d\u7f6e config schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None","title":"register_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_event","text":"\u6ce8\u518c\u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u6807\u8bc6 required name str \u4e8b\u4ef6\u540d\u5b57 required data_schema schema class event.data\u7684schema. Defaults to None. None description str \u4e8b\u4ef6\u63cf\u8ff0. Defaults to ''. '' Returns: Type Description str \u771f\u5b9e\u4e8b\u4ef6\u6807\u8bc6tag\uff0c\u4e3aself.package +'.'+ tag","title":"register_event()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_event_type","text":"\u6ce8\u518c\u4e8b\u4ef6\u7c7b\u578b Parameters: Name Type Description Default event_type EventType \u4e8b\u4ef6\u7c7b\u578b\u5bf9\u8c61 required Returns: Type Description EventType tag = package+'.'+tag","title":"register_event_type()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_extend_api","text":"\u6ce8\u518c\u6269\u5c55\u5185\u6838API Parameters: Name Type Description Default api_schema_cls class API Schema Class () field_definitions name=tuple(Type,Field \u9700\u8981\u589e\u52a0\u7684\u5b57\u6bb5\uff0cexample\uff1aname=(str, Field(title='\u540d\u5b57')) {}","title":"register_extend_api()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_extend_field","text":"\u6ce8\u518c\u6269\u5c55\u6570\u636e\u5e93\u5b57\u6bb5\uff0c\u5bf9\u539f\u672c\u6570\u636e\u5e93\u5b57\u6bb5\u8fdb\u884c\u6269\u5c55 Parameters: Name Type Description Default model_cls Union[ core_expand.TenantExpandAbstract, core_expand.UserExpandAbstract, core_expand.UserGroupExpandAbstract, core_expand.AppExpandAbstract, core_expand.AppGroupExpandAbstract, ] \u6269\u5c55\u5b9a\u4e49\u7684model required model_field str \u6269\u5c55\u7684\u5b57\u6bb5 required alias str \u6269\u5c55\u5b57\u6bb5\u5728\u539fmodel\u4e2d\u7684\u522b\u540d. None\u610f\u5473\u7740\u5c31\u4f7f\u7528model_field\u4f5c\u4e3a\u5176\u5728\u539fmodel\u4e2d\u7684\u522b\u540d None Exceptions: Type Description Exception \u975e\u6cd5\u7684\u6269\u5c55\u5b57\u6bb5\u7c7b\u5bf9\u5e94\u7684\u7236\u7c7b","title":"register_extend_field()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_front_pages","text":"\u6ce8\u518c\u524d\u7aef\u9875\u9762 Parameters: Name Type Description Default page core_pages.FrontPage \u524d\u7aef\u9875\u9762 required","title":"register_front_pages()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_front_routers","text":"\u6ce8\u518c\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default router core_routers.FrontRouter \u524d\u7aef\u8def\u7531\u5b9e\u4f8b required primary core_routers.FrontRouter \u4e00\u7ea7\u8def\u7531\u540d\u5b57\uff0c\u7531 core_routers \u6587\u4ef6\u63d0\u4f9b\u5b9a\u4e49. Defaults to None. None","title":"register_front_routers()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_profile_schema","text":"\u6ce8\u518c\u63d2\u4ef6\u914d\u7f6e profile schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None","title":"register_profile_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_routers","text":"\u6ce8\u518c\u8def\u7531 Parameters: Name Type Description Default urls_ext List[partial] \u9700\u8981\u6ce8\u518c\u7684\u8def\u7531 required tenant_urls bool \u662f\u5426\u8981\u6dfb\u52a0 tenant/{tenant_id}/ \u524d\u7f00. Defaults to False. False","title":"register_routers()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.register_settings_schema","text":"\u6ce8\u518c\u63d2\u4ef6\u7684 \u79df\u6237\u914d\u7f6e settings schema Parameters: Name Type Description Default schema class schema\u7684\u7c7b required schema_tag str shema\u7684\u6807\u8bc6, \u9ed8\u8ba4\u4e3aself.package None","title":"register_settings_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.stop","text":"\u63d2\u4ef6\u5378\u8f7d","title":"stop()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.success","text":"API\u63a5\u53e3\u6210\u529fdict Parameters: Name Type Description Default data dict \u6210\u529f\u65f6\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e. Defaults to None. None Returns: Type Description dict \u751f\u6210\u7684\u6210\u529fdict","title":"success()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.unregister_extend_api","text":"\u79fb\u9664\u6269\u5c55\u5185\u6838API Parameters: Name Type Description Default api_schema_cls class API Schema Class () field_keys list \u9700\u8981\u79fb\u9664\u7684\u5b57\u6bb5\u540d\u79f0\uff0cexample\uff1afield_keys=['nickname','mobile']) []","title":"unregister_extend_api()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.update_or_create_settings","text":"\u66f4\u65b0\u6216\u521b\u5efa\u79df\u6237\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required settings dict \u79df\u6237\u914d\u7f6e required is_active bool \u662f\u5426\u542f\u7528 required use_platform_config bool \u662f\u5426\u4f7f\u7528\u5e73\u53f0\u914d\u7f6e required Returns: Type Description TenantExtension \u66f4\u65b0\u6216\u521b\u5efa\u7684\u5bf9\u8c61","title":"update_or_create_settings()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.Extension.update_tenant_config","text":"\u66f4\u65b0\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description bool \u66f4\u65b0\u6210\u529fTrue\uff0c\u6ca1\u6709\u627e\u5230\u8be5\u914d\u7f6e\u8fd4\u56deFalse","title":"update_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.create_extension_schema","text":"\u63d0\u4f9b\u7ed9\u63d2\u4ef6\u7528\u6765\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default name str Schema\u7684\u7c7b\u540d required file_path str \u6307\u63d2\u4ef6__init__.py\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84, \u7528\u6765\u901a\u8fc7\u63d2\u4ef6\u7684config.toml\u6587\u4ef6\u83b7\u53d6package,\u4ece\u800c\u907f\u514dschema\u7684\u547d\u540d\u51b2\u7a81 required fields Optional[List[Tuple[str, Any, Any]]] Schema\u7684\u5b57\u6bb5\u5b9a\u4e49 None base_schema Type[Schema] Schema\u7684\u57fa\u7c7b. \u9ed8\u8ba4\u4e3a: ninja.Schema <class 'ninja.schema.Schema'> Returns: Type Description ninja.Schema \u521b\u5efa\u7684Schema\u7c7b","title":"create_extension_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.create_extension_schema_by_package","text":"\u63d0\u4f9b\u7ed9\u63d2\u4ef6\u7528\u6765\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default name str Schema\u7684\u7c7b\u540d required package str \u5982\u679c\u662f\u63d2\u4ef6\u8c03\u7528\u7684\u8be5\u65b9\u6cd5,\u4e00\u5b9a\u8981\u5c06\u63d2\u4ef6\u7684package\u4f20\u8fc7\u6765,\u4ee5\u907f\u514d\u547d\u540d\u51b2\u7a81 '' fields Optional[List[Tuple[str, Any, Any]]] Schema\u7684\u5b57\u6bb5\u5b9a\u4e49 None base_schema Type[Schema] Schema\u7684\u57fa\u7c7b. \u9ed8\u8ba4\u4e3a: ninja.Schema <class 'ninja.schema.Schema'> Returns: Type Description ninja.Schema \u521b\u5efa\u7684Schema\u7c7b","title":"create_extension_schema_by_package()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20%20Plug%20-In%20Guide/Plug-InBaseClass/#arkid.core.extension.create_extension_schema_from_django_model","text":"\u63d0\u4f9b\u7ed9\u63d2\u4ef6\u901a\u8fc7Django.Model\u521b\u5efaSchema\u7684\u65b9\u6cd5 \u6ce8\u610f \u63d2\u4ef6\u5fc5\u987b\u4f7f\u7528\u6b64\u65b9\u6cd5\u6765\u5b9a\u4e49Schema,\u907f\u514d\u4e0e\u5176\u5b83Schema\u7684\u547d\u540d\u51b2\u7a81 Parameters: Name Type Description Default model Type[Model] \u57fa\u4e8e\u7684 Django Model required name str Schema\u7684\u7c7b\u540d. '' depth int \u904d\u5386Django Model\u7684\u6df1\u5ea6. 0 fields Optional[List[str]] \u4eceDjango Model\u4e2d\u83b7\u53d6\u7684\u5b57\u6bb5\u540d, \u5982\u679c\u662f\u6240\u6709\u7684\u5c31\u8bbe\u4e3a __all__ . None exclude Optional[List[str]] \u4eceDjango Model\u4e2d\u6392\u9664\u7684\u5b57\u6bb5\u540d. None custom_fields Optional[List[Tuple[str, Any, Any]]] \u6dfb\u52a0\u7684\u81ea\u5b9a\u4e49\u5b57\u6bb5. None base_class Type[Schema] Schema\u7684\u57fa\u7c7b. <class 'ninja.schema.Schema'> Returns: Type Description ninjia.Schema \u65b0\u521b\u5efa\u7684Schema\u7c7b","title":"create_extension_schema_from_django_model()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/","text":"Features # Account life cycle\uff0cUsed to handle account creation\uff0cchange\uff0cDisable the logic of account attributes in the process of division\uff0cPlug -in developers can flexibly add their own logic as needed Implementation # ArkIDCore provides the timing task of interface creation and update life cycle: arkid.core.tasks.tasks.account_life_periodic_task Timing task account_life_periodic_task Will send it at running ACCOUNT_LIFE_PERIODIC_TASK event This incident will be monitored in the plug -in base class\uff0cIn the event processing function Periodic_task_event_handler Call the abstract method of abstraction periodic_task Cover abstract method in the specific plug -in PERIODIC_task to implement specific logic Abstract method # periodic_task Foundation definition # arkid.core.extension.account_life.AccountLifeExtension ( Extension ) # Source code in arkid/core/extension/account_life.py class AccountLifeExtension ( Extension ): TYPE = \"account_life\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AccountLifeExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . ACCOUNT_LIFE_PERIODIC_TASK , self . periodic_task_event_handler ) @abstractmethod def periodic_task ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" pass def periodic_task_event_handler ( self , event , ** kwargs ): self . periodic_task ( event , ** kwargs ) def register_account_life_schema ( self , schema , config_type ): self . register_config_schema ( schema , self . package + '_' + config_type ) self . register_composite_config_schema ( schema , config_type , exclude = [ 'extension' ] ) composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/account_life.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/account_life.py def load ( self ): super () . load () self . listen_event ( core_event . ACCOUNT_LIFE_PERIODIC_TASK , self . periodic_task_event_handler ) periodic_task ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in arkid/core/extension/account_life.py @abstractmethod def periodic_task ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" pass Exemplary # extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension ( AccountLifeExtension ) # Source code in extension_root/com_longgui_account_life_arkid/__init__.py class AccountLifeArkIDExtension ( AccountLifeExtension ): def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline () create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) periodic_task ( self , event , ** kwargs ) # \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_account_life_arkid/__init__.py def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline () update_tenant_config ( self , id , config , name , type ) # \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig","title":"AccountLifeCycle"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#features","text":"Account life cycle\uff0cUsed to handle account creation\uff0cchange\uff0cDisable the logic of account attributes in the process of division\uff0cPlug -in developers can flexibly add their own logic as needed","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#implementation","text":"ArkIDCore provides the timing task of interface creation and update life cycle: arkid.core.tasks.tasks.account_life_periodic_task Timing task account_life_periodic_task Will send it at running ACCOUNT_LIFE_PERIODIC_TASK event This incident will be monitored in the plug -in base class\uff0cIn the event processing function Periodic_task_event_handler Call the abstract method of abstraction periodic_task Cover abstract method in the specific plug -in PERIODIC_task to implement specific logic","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#abstract-method","text":"periodic_task","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension","text":"Source code in arkid/core/extension/account_life.py class AccountLifeExtension ( Extension ): TYPE = \"account_life\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AccountLifeExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . ACCOUNT_LIFE_PERIODIC_TASK , self . periodic_task_event_handler ) @abstractmethod def periodic_task ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" pass def periodic_task_event_handler ( self , event , ** kwargs ): self . periodic_task ( event , ** kwargs ) def register_account_life_schema ( self , schema , config_type ): self . register_config_schema ( schema , self . package + '_' + config_type ) self . register_composite_config_schema ( schema , config_type , exclude = [ 'extension' ] )","title":"AccountLifeExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/account_life.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/account_life.py def load ( self ): super () . load () self . listen_event ( core_event . ACCOUNT_LIFE_PERIODIC_TASK , self . periodic_task_event_handler )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#arkid.core.extension.account_life.AccountLifeExtension.periodic_task","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in arkid/core/extension/account_life.py @abstractmethod def periodic_task ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" pass","title":"periodic_task()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension","text":"Source code in extension_root/com_longgui_account_life_arkid/__init__.py class AccountLifeArkIDExtension ( AccountLifeExtension ): def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline ()","title":"AccountLifeArkIDExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.create_tenant_config","text":"\u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created","title":"create_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.periodic_task","text":"\u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_account_life_arkid/__init__.py def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline ()","title":"periodic_task()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AccountLifeCycle/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.update_tenant_config","text":"\u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig","title":"update_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/","text":"Features # Application protocol\uff0cOther types of plug -in can be inherited by inherit the protocol base class\uff0cHow to get a base class\uff0cConvenient plug -in load Implementation # first step\uff0cCreate a new class\uff0cInherit the base class Step 2\uff0c[LOAD] (load] (load] (LOAD] (#arkid.core.extension.app_protocol.AppProtocolExtension.Load) method Need to use the application schema to use register_app_protocol_schema method loaded in Optional\uff0cIf the application needs to use the application import authentication method implemented by the base class\uff0cNeed to call register_enter_view method third step\uff0cImplement the abstract method specified in the base class Abstract method # create_app update_app delete_app Foundation definition # arkid.core.extension.app_protocol.AppProtocolExtension ( Extension ) # Source code in arkid/core/extension/app_protocol.py class AppProtocolExtension ( Extension ): TYPE = \"app_protocol\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'app_type' composite_model = App @property def type ( self ): return AppProtocolExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . CREATE_APP_CONFIG , self . create_app ) self . listen_event ( core_event . UPDATE_APP_CONFIG , self . update_app ) self . listen_event ( core_event . DELETE_APP , self . delete_app ) def register_app_protocol_schema ( self , schema , app_type ): \"\"\" \u6ce8\u518c\u5e94\u7528\u7684schema Params: schema: schema app_type: \u5e94\u7528\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + app_type ) self . register_composite_config_schema ( schema , app_type , exclude = [ 'secret' ]) @abstractmethod def create_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass @abstractmethod def update_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass @abstractmethod def delete_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass def register_enter_view ( self , view : View , path : str , url_name : str , type : list , tenant_urls : bool = True ): ''' \u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Params: view: str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() path: str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P<app_id>[\\w-]+)/oauth/authorize/$ url_name: str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize type: list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] tenant_urls: bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url Return: response: \u51fd\u6570\u6267\u884c\u7ed3\u679c ''' # \u5165\u53e3\u51fd\u6570 class EnterView ( View ): def get ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) def get_login_url ( self , request , alert ): from arkid.config import get_app_config full_path = request . get_full_path () next_uri = urllib . parse . quote ( full_path ) host = get_app_config () . get_frontend_host () tenant = request . tenant if not tenant : return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' if tenant . is_platform_tenant and tenant . id . hex not in request . get_full_path () and \\ str ( tenant . id ) not in request . get_full_path (): return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' token = request . GET . get ( 'token' , '' ) if not token : tenant_expand = Tenant . expand_objects . get ( id = tenant . id ) if tenant_expand . get ( 'login_url' ): return f \" { tenant_expand [ 'login_url' ] } ?tenant_id= { tenant . id } &next= { next_uri } \" backend_host = get_app_config () . get_host () backend_login_url = '/api/v1/login' return f \" { backend_host }{ backend_login_url } ?tenant_id= { tenant . id } &next= { next_uri } \" # if tenant.slug: # host =get_app_config().get_slug_frontend_host(tenant.slug) # return f'{host}{LOGIN_URL}?&next={next_uri}' # else: # return f'{host}{LOGIN_URL}?tenant_id={tenant.id}&next={next_uri}' if tenant . slug : host = get_app_config () . get_slug_frontend_host ( tenant . slug ) return f ' { host }{ LOGIN_URL } ?alert= { alert } &next= { next_uri } ' else : return f ' { host }{ LOGIN_URL } ?tenant_id= { tenant . id } &alert= { alert } &next= { next_uri } ' def post ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) # \u83b7\u53d6\u8fdb\u5165\u7684\u8def\u7531 entry_url = [ re_path ( path , EnterView . as_view (), name = url_name )] # \u6ce8\u518c\u5165\u53e3\u8def\u7531 self . register_routers ( entry_url , tenant_urls ) composite_model ( BaseModel , ExpandModel ) django-model # App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification) Source code in arkid/core/extension/app_protocol.py class App ( BaseModel , ExpandModel ): class Meta ( object ): verbose_name = _ ( \"APP\" , \"\u5e94\u7528\" ) verbose_name_plural = _ ( \"APP\" , \"\u5e94\u7528\" ) tenant = models . ForeignKey ( 'Tenant' , blank = False , on_delete = models . PROTECT ) name = models . CharField ( max_length = 128 , verbose_name = _ ( 'name' , '\u540d\u79f0' )) url = models . CharField ( max_length = 1024 , null = True , blank = True , verbose_name = _ ( 'url' , '\u5730\u5740' ) ) logo = models . CharField ( max_length = 1024 , blank = True , null = True , default = '' , verbose_name = _ ( 'logo' , '\u56fe\u6807' ) ) description = models . TextField ( blank = True , null = True , verbose_name = _ ( 'description' , '\u63cf\u8ff0' ) ) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( 'type' , '\u7c7b\u578b' )) secret = models . CharField ( max_length = 255 , blank = True , null = True , default = '' , verbose_name = _ ( 'secret' , '\u5bc6\u94a5' ), ) config = models . OneToOneField ( TenantExtensionConfig , blank = True , null = True , default = None , on_delete = models . PROTECT , ) package = models . CharField ( max_length = 128 , blank = True , null = True , default = '' , verbose_name = _ ( 'package' , '\u5305\u540d' ), ) entry_permission = models . ForeignKey ( 'SystemPermission' , blank = True , null = True , default = None , on_delete = models . PROTECT , ) arkstore_category_id = models . IntegerField ( default = None , null = True , verbose_name = _ ( 'ArkStore\u5206\u7c7bID' ) ) arkstore_app_id = models . CharField ( max_length = 1024 , blank = True , null = True , default = None , verbose_name = _ ( 'Arkstore app id' , '\u65b9\u821f\u5546\u5e97\u5e94\u7528\u6807\u8bc6' ), ) skip_token_verification = models . BooleanField ( default = False , verbose_name = _ ( 'Skip Token Verification' , '\u5e94\u7528\u5165\u53e3\u5730\u5740\u8df3\u8fc7\u9a8c\u8bc1' ) ) def __str__ ( self ) -> str : return f 'Tenant: { self . tenant . name } , App: { self . name } ' arkstore_app_id : CharField blank django-field nullable # Arkstore app id arkstore_category_id : IntegerField django-field nullable # ArkStore\u5206\u7c7bID config : OneToOneField blank django-field nullable # config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 description : TextField blank django-field nullable # description entry_permission : ForeignKey blank django-field nullable # entry permission id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 logo : CharField blank django-field nullable # logo name : CharField django-field # name package : CharField blank django-field nullable # package secret : CharField blank django-field nullable # secret skip_token_verification : BooleanField django-field # Skip Token Verification tenant : ForeignKey django-field # tenant type : CharField django-field # type updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : CharField blank django-field nullable # url create_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def create_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass delete_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def delete_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/app_protocol.py def load ( self ): super () . load () self . listen_event ( core_event . CREATE_APP_CONFIG , self . create_app ) self . listen_event ( core_event . UPDATE_APP_CONFIG , self . update_app ) self . listen_event ( core_event . DELETE_APP , self . delete_app ) register_app_protocol_schema ( self , schema , app_type ) # \u6ce8\u518c\u5e94\u7528\u7684schema Parameters: Name Type Description Default schema schema required app_type \u5e94\u7528\u7c7b\u578b required Source code in arkid/core/extension/app_protocol.py def register_app_protocol_schema ( self , schema , app_type ): \"\"\" \u6ce8\u518c\u5e94\u7528\u7684schema Params: schema: schema app_type: \u5e94\u7528\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + app_type ) self . register_composite_config_schema ( schema , app_type , exclude = [ 'secret' ]) register_enter_view ( self , view , path , url_name , type , tenant_urls = True ) # \u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Parameters: Name Type Description Default view View str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() required path str str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P [\\w-]+)/oauth/authorize/$ required url_name str str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize required type list list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] required tenant_urls bool bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url True Returns: Type Description response \u51fd\u6570\u6267\u884c\u7ed3\u679c Source code in arkid/core/extension/app_protocol.py def register_enter_view ( self , view : View , path : str , url_name : str , type : list , tenant_urls : bool = True ): ''' \u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Params: view: str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() path: str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P<app_id>[\\w-]+)/oauth/authorize/$ url_name: str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize type: list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] tenant_urls: bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url Return: response: \u51fd\u6570\u6267\u884c\u7ed3\u679c ''' # \u5165\u53e3\u51fd\u6570 class EnterView ( View ): def get ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) def get_login_url ( self , request , alert ): from arkid.config import get_app_config full_path = request . get_full_path () next_uri = urllib . parse . quote ( full_path ) host = get_app_config () . get_frontend_host () tenant = request . tenant if not tenant : return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' if tenant . is_platform_tenant and tenant . id . hex not in request . get_full_path () and \\ str ( tenant . id ) not in request . get_full_path (): return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' token = request . GET . get ( 'token' , '' ) if not token : tenant_expand = Tenant . expand_objects . get ( id = tenant . id ) if tenant_expand . get ( 'login_url' ): return f \" { tenant_expand [ 'login_url' ] } ?tenant_id= { tenant . id } &next= { next_uri } \" backend_host = get_app_config () . get_host () backend_login_url = '/api/v1/login' return f \" { backend_host }{ backend_login_url } ?tenant_id= { tenant . id } &next= { next_uri } \" # if tenant.slug: # host =get_app_config().get_slug_frontend_host(tenant.slug) # return f'{host}{LOGIN_URL}?&next={next_uri}' # else: # return f'{host}{LOGIN_URL}?tenant_id={tenant.id}&next={next_uri}' if tenant . slug : host = get_app_config () . get_slug_frontend_host ( tenant . slug ) return f ' { host }{ LOGIN_URL } ?alert= { alert } &next= { next_uri } ' else : return f ' { host }{ LOGIN_URL } ?tenant_id= { tenant . id } &alert= { alert } &next= { next_uri } ' def post ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) # \u83b7\u53d6\u8fdb\u5165\u7684\u8def\u7531 entry_url = [ re_path ( path , EnterView . as_view (), name = url_name )] # \u6ce8\u518c\u5165\u53e3\u8def\u7531 self . register_routers ( entry_url , tenant_urls ) update_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def update_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass Exemplary # extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension ( AppProtocolExtension ) # Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py class OAuth2ServerExtension ( AppProtocolExtension ): def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () def load_urls ( self ): self . register_routers ( urls , True ) def load_auth_view ( self ): # \u52a0\u8f7d\u8ba4\u8bc1view auth_view = AuthorizationView . as_view () auth_path = r \"app/(?P<app_id>[\\w-]+)/oauth/authorize/$\" url_name = \"authorize\" type = [ 'OIDC' , 'OAuth2' ] self . register_enter_view ( auth_view , auth_path , url_name , type ) def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization create_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) delete_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () update_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) update_app_data ( self , event , config , is_create ) # \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True update_url_data ( self , tenant_id , config , obj ) # \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"ApplicationProtocol"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#features","text":"Application protocol\uff0cOther types of plug -in can be inherited by inherit the protocol base class\uff0cHow to get a base class\uff0cConvenient plug -in load","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#implementation","text":"first step\uff0cCreate a new class\uff0cInherit the base class Step 2\uff0c[LOAD] (load] (load] (LOAD] (#arkid.core.extension.app_protocol.AppProtocolExtension.Load) method Need to use the application schema to use register_app_protocol_schema method loaded in Optional\uff0cIf the application needs to use the application import authentication method implemented by the base class\uff0cNeed to call register_enter_view method third step\uff0cImplement the abstract method specified in the base class","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#abstract-method","text":"create_app update_app delete_app","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension","text":"Source code in arkid/core/extension/app_protocol.py class AppProtocolExtension ( Extension ): TYPE = \"app_protocol\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'app_type' composite_model = App @property def type ( self ): return AppProtocolExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . CREATE_APP_CONFIG , self . create_app ) self . listen_event ( core_event . UPDATE_APP_CONFIG , self . update_app ) self . listen_event ( core_event . DELETE_APP , self . delete_app ) def register_app_protocol_schema ( self , schema , app_type ): \"\"\" \u6ce8\u518c\u5e94\u7528\u7684schema Params: schema: schema app_type: \u5e94\u7528\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + app_type ) self . register_composite_config_schema ( schema , app_type , exclude = [ 'secret' ]) @abstractmethod def create_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass @abstractmethod def update_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass @abstractmethod def delete_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass def register_enter_view ( self , view : View , path : str , url_name : str , type : list , tenant_urls : bool = True ): ''' \u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Params: view: str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() path: str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P<app_id>[\\w-]+)/oauth/authorize/$ url_name: str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize type: list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] tenant_urls: bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url Return: response: \u51fd\u6570\u6267\u884c\u7ed3\u679c ''' # \u5165\u53e3\u51fd\u6570 class EnterView ( View ): def get ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) def get_login_url ( self , request , alert ): from arkid.config import get_app_config full_path = request . get_full_path () next_uri = urllib . parse . quote ( full_path ) host = get_app_config () . get_frontend_host () tenant = request . tenant if not tenant : return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' if tenant . is_platform_tenant and tenant . id . hex not in request . get_full_path () and \\ str ( tenant . id ) not in request . get_full_path (): return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' token = request . GET . get ( 'token' , '' ) if not token : tenant_expand = Tenant . expand_objects . get ( id = tenant . id ) if tenant_expand . get ( 'login_url' ): return f \" { tenant_expand [ 'login_url' ] } ?tenant_id= { tenant . id } &next= { next_uri } \" backend_host = get_app_config () . get_host () backend_login_url = '/api/v1/login' return f \" { backend_host }{ backend_login_url } ?tenant_id= { tenant . id } &next= { next_uri } \" # if tenant.slug: # host =get_app_config().get_slug_frontend_host(tenant.slug) # return f'{host}{LOGIN_URL}?&next={next_uri}' # else: # return f'{host}{LOGIN_URL}?tenant_id={tenant.id}&next={next_uri}' if tenant . slug : host = get_app_config () . get_slug_frontend_host ( tenant . slug ) return f ' { host }{ LOGIN_URL } ?alert= { alert } &next= { next_uri } ' else : return f ' { host }{ LOGIN_URL } ?tenant_id= { tenant . id } &alert= { alert } &next= { next_uri } ' def post ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) # \u83b7\u53d6\u8fdb\u5165\u7684\u8def\u7531 entry_url = [ re_path ( path , EnterView . as_view (), name = url_name )] # \u6ce8\u518c\u5165\u53e3\u8def\u7531 self . register_routers ( entry_url , tenant_urls )","title":"AppProtocolExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model","text":"App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification) Source code in arkid/core/extension/app_protocol.py class App ( BaseModel , ExpandModel ): class Meta ( object ): verbose_name = _ ( \"APP\" , \"\u5e94\u7528\" ) verbose_name_plural = _ ( \"APP\" , \"\u5e94\u7528\" ) tenant = models . ForeignKey ( 'Tenant' , blank = False , on_delete = models . PROTECT ) name = models . CharField ( max_length = 128 , verbose_name = _ ( 'name' , '\u540d\u79f0' )) url = models . CharField ( max_length = 1024 , null = True , blank = True , verbose_name = _ ( 'url' , '\u5730\u5740' ) ) logo = models . CharField ( max_length = 1024 , blank = True , null = True , default = '' , verbose_name = _ ( 'logo' , '\u56fe\u6807' ) ) description = models . TextField ( blank = True , null = True , verbose_name = _ ( 'description' , '\u63cf\u8ff0' ) ) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( 'type' , '\u7c7b\u578b' )) secret = models . CharField ( max_length = 255 , blank = True , null = True , default = '' , verbose_name = _ ( 'secret' , '\u5bc6\u94a5' ), ) config = models . OneToOneField ( TenantExtensionConfig , blank = True , null = True , default = None , on_delete = models . PROTECT , ) package = models . CharField ( max_length = 128 , blank = True , null = True , default = '' , verbose_name = _ ( 'package' , '\u5305\u540d' ), ) entry_permission = models . ForeignKey ( 'SystemPermission' , blank = True , null = True , default = None , on_delete = models . PROTECT , ) arkstore_category_id = models . IntegerField ( default = None , null = True , verbose_name = _ ( 'ArkStore\u5206\u7c7bID' ) ) arkstore_app_id = models . CharField ( max_length = 1024 , blank = True , null = True , default = None , verbose_name = _ ( 'Arkstore app id' , '\u65b9\u821f\u5546\u5e97\u5e94\u7528\u6807\u8bc6' ), ) skip_token_verification = models . BooleanField ( default = False , verbose_name = _ ( 'Skip Token Verification' , '\u5e94\u7528\u5165\u53e3\u5730\u5740\u8df3\u8fc7\u9a8c\u8bc1' ) ) def __str__ ( self ) -> str : return f 'Tenant: { self . tenant . name } , App: { self . name } '","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.arkstore_app_id","text":"Arkstore app id","title":"arkstore_app_id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.arkstore_category_id","text":"ArkStore\u5206\u7c7bID","title":"arkstore_category_id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.config","text":"config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.description","text":"description","title":"description"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.entry_permission","text":"entry permission","title":"entry_permission"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.logo","text":"logo","title":"logo"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.package","text":"package","title":"package"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.secret","text":"secret","title":"secret"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.skip_token_verification","text":"Skip Token Verification","title":"skip_token_verification"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.type","text":"type","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.composite_model.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.create_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def create_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass","title":"create_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.delete_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def delete_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass","title":"delete_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/app_protocol.py def load ( self ): super () . load () self . listen_event ( core_event . CREATE_APP_CONFIG , self . create_app ) self . listen_event ( core_event . UPDATE_APP_CONFIG , self . update_app ) self . listen_event ( core_event . DELETE_APP , self . delete_app )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.register_app_protocol_schema","text":"\u6ce8\u518c\u5e94\u7528\u7684schema Parameters: Name Type Description Default schema schema required app_type \u5e94\u7528\u7c7b\u578b required Source code in arkid/core/extension/app_protocol.py def register_app_protocol_schema ( self , schema , app_type ): \"\"\" \u6ce8\u518c\u5e94\u7528\u7684schema Params: schema: schema app_type: \u5e94\u7528\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + app_type ) self . register_composite_config_schema ( schema , app_type , exclude = [ 'secret' ])","title":"register_app_protocol_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.register_enter_view","text":"\u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Parameters: Name Type Description Default view View str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() required path str str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P [\\w-]+)/oauth/authorize/$ required url_name str str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize required type list list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] required tenant_urls bool bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url True Returns: Type Description response \u51fd\u6570\u6267\u884c\u7ed3\u679c Source code in arkid/core/extension/app_protocol.py def register_enter_view ( self , view : View , path : str , url_name : str , type : list , tenant_urls : bool = True ): ''' \u6ce8\u518c\u7edf\u4e00\u7684\u5165\u53e3\u51fd\u6570\uff0c\u65b9\u4fbf\u68c0\u6d4b Params: view: str \u76ee\u6807View\u7684as_view()\uff0c\u4f8b\u5982:AuthorizationView.as_view() path: str \u9700\u8981\u8df3\u8f6c\u7684\u8def\u5f84\uff0c\u4f8b\u5982:r\"app/(?P<app_id>[\\w-]+)/oauth/authorize/$ url_name: str \u6ce8\u518c\u7684\u8def\u5f84\u540d\u79f0, \u4f8b\u5982:authorize type: list \u4e00\u4e2a\u5f53\u524d\u63d2\u4ef6\u7684\u7c7b\u578blist, \u4f8b\u5982:['OIDC', 'OAuth2'] tenant_urls: bool \u662f\u5426\u6ce8\u518c\u4e3a\u79df\u6237url Return: response: \u51fd\u6570\u6267\u884c\u7ed3\u679c ''' # \u5165\u53e3\u51fd\u6570 class EnterView ( View ): def get ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) def get_login_url ( self , request , alert ): from arkid.config import get_app_config full_path = request . get_full_path () next_uri = urllib . parse . quote ( full_path ) host = get_app_config () . get_frontend_host () tenant = request . tenant if not tenant : return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' if tenant . is_platform_tenant and tenant . id . hex not in request . get_full_path () and \\ str ( tenant . id ) not in request . get_full_path (): return f ' { host }{ LOGIN_URL } ?tenant_id=&next= { next_uri } ' token = request . GET . get ( 'token' , '' ) if not token : tenant_expand = Tenant . expand_objects . get ( id = tenant . id ) if tenant_expand . get ( 'login_url' ): return f \" { tenant_expand [ 'login_url' ] } ?tenant_id= { tenant . id } &next= { next_uri } \" backend_host = get_app_config () . get_host () backend_login_url = '/api/v1/login' return f \" { backend_host }{ backend_login_url } ?tenant_id= { tenant . id } &next= { next_uri } \" # if tenant.slug: # host =get_app_config().get_slug_frontend_host(tenant.slug) # return f'{host}{LOGIN_URL}?&next={next_uri}' # else: # return f'{host}{LOGIN_URL}?tenant_id={tenant.id}&next={next_uri}' if tenant . slug : host = get_app_config () . get_slug_frontend_host ( tenant . slug ) return f ' { host }{ LOGIN_URL } ?alert= { alert } &next= { next_uri } ' else : return f ' { host }{ LOGIN_URL } ?tenant_id= { tenant . id } &alert= { alert } &next= { next_uri } ' def post ( self , request , ** kwargs ): from arkid.core.perm.permission_data import PermissionData permissiondata = PermissionData () result , alert = permissiondata . check_app_entry_permission ( request , type , kwargs ) if result : return view ( request ) else : url = self . get_login_url ( request , alert ) return HttpResponseRedirect ( url ) # \u83b7\u53d6\u8fdb\u5165\u7684\u8def\u7531 entry_url = [ re_path ( path , EnterView . as_view (), name = url_name )] # \u6ce8\u518c\u5165\u53e3\u8def\u7531 self . register_routers ( entry_url , tenant_urls )","title":"register_enter_view()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#arkid.core.extension.app_protocol.AppProtocolExtension.update_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in arkid/core/extension/app_protocol.py @abstractmethod def update_app ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Params: event: \u4e8b\u4ef6\u53c2\u6570 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: bool: \u662f\u5426\u6210\u529f\u6267\u884c \"\"\" pass","title":"update_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension","text":"Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py class OAuth2ServerExtension ( AppProtocolExtension ): def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () def load_urls ( self ): self . register_routers ( urls , True ) def load_auth_view ( self ): # \u52a0\u8f7d\u8ba4\u8bc1view auth_view = AuthorizationView . as_view () auth_path = r \"app/(?P<app_id>[\\w-]+)/oauth/authorize/$\" url_name = \"authorize\" type = [ 'OIDC' , 'OAuth2' ] self . register_enter_view ( auth_view , auth_path , url_name , type ) def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"OAuth2ServerExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.create_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True )","title":"create_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.delete_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True","title":"delete_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False )","title":"update_app()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_app_data","text":"\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True","title":"update_app_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApplicationProtocol/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_url_data","text":"\u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"update_url_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/","text":"Features # The approval system is mainly used to handle approval requests\uff0cPlug -in developers can be in processing approval request logic\uff0cSend the approval request to different third -party systems\uff0cAfter the third -party system has processed the approval request\uff0cYou can send the processing results back Implementation # First create approval action\uff0cSpecify the interface PATH, Method and the approval system plug -in responsible for processing In the middle part arkid.core.approve_request_middleware According to the scanning approval action\uff0cIntercept http Request\uff0c If an approval action does not create an approval request\uff0cThen create approval requests\uff0cdistribution CREATE_APPROVE_REQUEST event\uff0cHTTP Request stored in the approval request, Interrupt http Request If an approval action has been created for approval request\uff0cDetermine the approval request status\uff0cIf the state is passed\uff0cContinue to execute HTTP Request\uff0cIf the status is rejected\uff0cInterrupt http Request Supervise in the approval system plug -in CREATE_APPROVE_REQUEST event\uff0cThrough Create_approve_request Send the approval request to other third -party system processing After other third -party approval systems process the approval request\uff0cYou can return the approval results through the interface agree Approval request interface path\uff1a/approve_requests/{{request_id}}/pass/ method: PUT Processing function\uff1apass_approve_request_handler Need to implement abstract methods: pass_approve_request reject Approval request interface path\uff1a/approve_requests/{{request_id}}/deny/' method: PUT Processing function\uff1adeny_approve_request_handler Need to implement abstract methods: deny_approve_request Abstract method # create_approve_request deny_approve_request pass_approve_request Foundation definition # arkid.core.extension.approve_system.ApproveSystemExtension ( Extension ) # Source code in arkid/core/extension/approve_system.py class ApproveSystemExtension ( Extension ): TYPE = \"approve_system\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ApproveSystemExtension . TYPE def load ( self ): self . listen_event ( core_event . CREATE_APPROVE_REQUEST , self . create_approve_request ) self . pass_path = self . register_api ( f '/approve_requests/ {{ request_id }} /pass/' , 'PUT' , self . pass_approve_request_handler , response = ApproveRequestOut , ) self . deny_path = self . register_api ( f '/approve_requests/ {{ request_id }} /deny/' , 'PUT' , self . deny_approve_request_handler , response = ApproveRequestOut , ) super () . load () @abstractmethod def create_approve_request ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 \"\"\" pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def pass_approve_request_handler ( self , request , request_id ): approve_request = ApproveRequest . valid_objects . get ( id = request_id ) self . pass_approve_request ( request , approve_request ) approve_request . status = 'pass' approve_request . save () return ErrorDict ( ErrorCode . OK ) @abstractmethod def pass_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def deny_approve_request_handler ( self , request , request_id ): approve_request = ApproveRequest . valid_objects . get ( id = request_id ) self . deny_approve_request ( request , approve_request ) approve_request . status = 'deny' approve_request . save () return ErrorDict ( ErrorCode . OK ) @abstractmethod def deny_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass def create_tenant_config ( self , tenant , config , name , type ): tenant_config = super () . create_tenant_config ( tenant , config , name , type ) tenant_config . config [ \"pass_request_url\" ] = self . pass_path tenant_config . config [ \"deny_request_url\" ] = self . deny_path tenant_config . save () return tenant_config def register_approve_system_schema ( self , schema , system_type ): self . register_config_schema ( schema , self . package + '_' + system_type ) self . register_composite_config_schema ( schema , system_type , exclude = [ 'extension' ] ) composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/approve_system.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 create_approve_request ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in arkid/core/extension/approve_system.py @abstractmethod def create_approve_request ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 \"\"\" pass create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/approve_system.py def create_tenant_config ( self , tenant , config , name , type ): tenant_config = super () . create_tenant_config ( tenant , config , name , type ) tenant_config . config [ \"pass_request_url\" ] = self . pass_path tenant_config . config [ \"deny_request_url\" ] = self . deny_path tenant_config . save () return tenant_config deny_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in arkid/core/extension/approve_system.py @abstractmethod def deny_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/approve_system.py def load ( self ): self . listen_event ( core_event . CREATE_APPROVE_REQUEST , self . create_approve_request ) self . pass_path = self . register_api ( f '/approve_requests/ {{ request_id }} /pass/' , 'PUT' , self . pass_approve_request_handler , response = ApproveRequestOut , ) self . deny_path = self . register_api ( f '/approve_requests/ {{ request_id }} /deny/' , 'PUT' , self . deny_approve_request_handler , response = ApproveRequestOut , ) super () . load () pass_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in arkid/core/extension/approve_system.py @abstractmethod def pass_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass Exemplary # extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension ( ApproveSystemExtension ) # Source code in extension_root/com_longgui_approve_system_arkid/__init__.py class ApproveSystemArkIDExtension ( ApproveSystemExtension ): def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) @operation ( List [ ApproveRequestListItemOut ], roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_tenant_approve_requests ( self , request , tenant_id : str , is_approved : str = '' ): package = 'com.longgui.approve.system.arkid' requests = ApproveRequest . valid_objects . filter ( tenant = request . tenant , action__extension__package = package ) if is_approved == 'true' : requests = requests . exclude ( status = \"wait\" ) elif is_approved == 'false' : requests = requests . filter ( status = \"wait\" ) return requests def create_approve_request ( self , event , ** kwargs ): pass def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' ) def deny_approve_request ( self , request , approve_request ): pass create_approve_request ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def create_approve_request ( self , event , ** kwargs ): pass deny_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def deny_approve_request ( self , request , approve_request ): pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) pass_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' )","title":"ApprovalSystem"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#features","text":"The approval system is mainly used to handle approval requests\uff0cPlug -in developers can be in processing approval request logic\uff0cSend the approval request to different third -party systems\uff0cAfter the third -party system has processed the approval request\uff0cYou can send the processing results back","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#implementation","text":"First create approval action\uff0cSpecify the interface PATH, Method and the approval system plug -in responsible for processing In the middle part arkid.core.approve_request_middleware According to the scanning approval action\uff0cIntercept http Request\uff0c If an approval action does not create an approval request\uff0cThen create approval requests\uff0cdistribution CREATE_APPROVE_REQUEST event\uff0cHTTP Request stored in the approval request, Interrupt http Request If an approval action has been created for approval request\uff0cDetermine the approval request status\uff0cIf the state is passed\uff0cContinue to execute HTTP Request\uff0cIf the status is rejected\uff0cInterrupt http Request Supervise in the approval system plug -in CREATE_APPROVE_REQUEST event\uff0cThrough Create_approve_request Send the approval request to other third -party system processing After other third -party approval systems process the approval request\uff0cYou can return the approval results through the interface agree Approval request interface path\uff1a/approve_requests/{{request_id}}/pass/ method: PUT Processing function\uff1apass_approve_request_handler Need to implement abstract methods: pass_approve_request reject Approval request interface path\uff1a/approve_requests/{{request_id}}/deny/' method: PUT Processing function\uff1adeny_approve_request_handler Need to implement abstract methods: deny_approve_request","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#abstract-method","text":"create_approve_request deny_approve_request pass_approve_request","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension","text":"Source code in arkid/core/extension/approve_system.py class ApproveSystemExtension ( Extension ): TYPE = \"approve_system\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ApproveSystemExtension . TYPE def load ( self ): self . listen_event ( core_event . CREATE_APPROVE_REQUEST , self . create_approve_request ) self . pass_path = self . register_api ( f '/approve_requests/ {{ request_id }} /pass/' , 'PUT' , self . pass_approve_request_handler , response = ApproveRequestOut , ) self . deny_path = self . register_api ( f '/approve_requests/ {{ request_id }} /deny/' , 'PUT' , self . deny_approve_request_handler , response = ApproveRequestOut , ) super () . load () @abstractmethod def create_approve_request ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 \"\"\" pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def pass_approve_request_handler ( self , request , request_id ): approve_request = ApproveRequest . valid_objects . get ( id = request_id ) self . pass_approve_request ( request , approve_request ) approve_request . status = 'pass' approve_request . save () return ErrorDict ( ErrorCode . OK ) @abstractmethod def pass_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def deny_approve_request_handler ( self , request , request_id ): approve_request = ApproveRequest . valid_objects . get ( id = request_id ) self . deny_approve_request ( request , approve_request ) approve_request . status = 'deny' approve_request . save () return ErrorDict ( ErrorCode . OK ) @abstractmethod def deny_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass def create_tenant_config ( self , tenant , config , name , type ): tenant_config = super () . create_tenant_config ( tenant , config , name , type ) tenant_config . config [ \"pass_request_url\" ] = self . pass_path tenant_config . config [ \"deny_request_url\" ] = self . deny_path tenant_config . save () return tenant_config def register_approve_system_schema ( self , schema , system_type ): self . register_config_schema ( schema , self . package + '_' + system_type ) self . register_composite_config_schema ( schema , system_type , exclude = [ 'extension' ] )","title":"ApproveSystemExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/approve_system.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.create_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in arkid/core/extension/approve_system.py @abstractmethod def create_approve_request ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 \"\"\" pass","title":"create_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.create_tenant_config","text":"\u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/approve_system.py def create_tenant_config ( self , tenant , config , name , type ): tenant_config = super () . create_tenant_config ( tenant , config , name , type ) tenant_config . config [ \"pass_request_url\" ] = self . pass_path tenant_config . config [ \"deny_request_url\" ] = self . deny_path tenant_config . save () return tenant_config","title":"create_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.deny_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in arkid/core/extension/approve_system.py @abstractmethod def deny_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass","title":"deny_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/approve_system.py def load ( self ): self . listen_event ( core_event . CREATE_APPROVE_REQUEST , self . create_approve_request ) self . pass_path = self . register_api ( f '/approve_requests/ {{ request_id }} /pass/' , 'PUT' , self . pass_approve_request_handler , response = ApproveRequestOut , ) self . deny_path = self . register_api ( f '/approve_requests/ {{ request_id }} /deny/' , 'PUT' , self . deny_approve_request_handler , response = ApproveRequestOut , ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#arkid.core.extension.approve_system.ApproveSystemExtension.pass_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in arkid/core/extension/approve_system.py @abstractmethod def pass_approve_request ( self , request , approve_request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (django.http.HttpRequest): HTTP \u8bf7\u6c42 approve_request (arkid.core.models.ApproveRequest): \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 \"\"\" pass","title":"pass_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension","text":"Source code in extension_root/com_longgui_approve_system_arkid/__init__.py class ApproveSystemArkIDExtension ( ApproveSystemExtension ): def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) @operation ( List [ ApproveRequestListItemOut ], roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_tenant_approve_requests ( self , request , tenant_id : str , is_approved : str = '' ): package = 'com.longgui.approve.system.arkid' requests = ApproveRequest . valid_objects . filter ( tenant = request . tenant , action__extension__package = package ) if is_approved == 'true' : requests = requests . exclude ( status = \"wait\" ) elif is_approved == 'false' : requests = requests . filter ( status = \"wait\" ) return requests def create_approve_request ( self , event , ** kwargs ): pass def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' ) def deny_approve_request ( self , request , approve_request ): pass","title":"ApproveSystemArkIDExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.create_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def create_approve_request ( self , event , ** kwargs ): pass","title":"create_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.deny_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def deny_approve_request ( self , request , approve_request ): pass","title":"deny_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ApprovalSystem/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.pass_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' )","title":"pass_approve_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/","text":"Features # Authentication\uff1aIncluding mobile phone SMS verification code\uff0cUsername Password\uff0cA series of plug -in with graphics verification code, etc.\uff0cUsed to identify user identity or improve system security\u3002 Implementation # When developers create a new authentication factors\uff0cYou need to inherit the AuthFactorextension base class and implement all abstract methods\uff0cThe data process of the certification factor plug -in during operation is shown in the figure below\uff1a sequenceDiagram participant U as Client participant C as Platform core participant B as Certification factors plugin C->>B: Loading plug -in B->>C: Registration monitoring custom event\uff1aCertification\uff0cregister\uff0creset Password\uff0cCreate_LOGIN_PAGE_AUTH_FACTOR U->>C: Request to get the login page C->>B: Trigger Create_LOGIN_PAGE_AUTH_Factor event B->>C: Response event\uff0cTraversing all running configuration\uff0cConfigure Login according to the configuration of running_pages C->>U: Rendering login page U->>C: Enter user voucher\uff0cClick the button\uff0cEnter the certification/register/Reset password and other processes C->>B: Trigger certification registration/Reset password and other events B->>C: Response certification registration/Reset password and other events\uff0cComplete the corresponding process\uff0cReturn result C->>U: Return to execution results Abstract method # authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page Foundation definition # arkid.core.extension.auth_factor.AuthFactorExtension ( Extension ) # Source code in arkid/core/extension/auth_factor.py class AuthFactorExtension ( Extension ): TYPE = \"auth_factor\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AuthFactorExtension . TYPE LOGIN = 'login' REGISTER = 'register' RESET_PASSWORD = 'password' def register_user_key_fields ( self , ** fields ): \"\"\"\u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 \"\"\" User . register_key_field ( ** fields ) def load ( self ): super () . load () self . listen_events () self . register_auth_manage_page () def register_auth_factor_schema ( self , schema , auth_factor_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Args: schema (Schema): schema\u63cf\u8ff0 auth_factor_type (str): \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_factor_type ) self . register_composite_config_schema ( schema , auth_factor_type , exclude = [ 'extension' ]) def start_authenticate ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . BEFORE_AUTH , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return self . authenticate ( event , ** kwargs ) @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 \"\"\" pass def auth_success ( self , user , event , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Args: user (User): \u7528\u6237 event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . AUTH_SUCCESS , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config , \"user\" : user })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return user def auth_failed ( self , event , data , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Args: event (_type_): \u8ba4\u8bc1\u4e8b\u4ef6 data (_type_): \u7ed3\u679c\u63cf\u8ff0 \"\"\" config = self . get_current_config ( event ) dispatch_event ( Event ( tag = core_event . AUTH_FAIL , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex , \"data\" : data })) core_event . remove_event_id ( event ) core_event . break_event_loop ( data ) @abstractmethod def register ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Args: event (Event): \u6ce8\u518c\u4e8b\u4ef6 \"\"\" pass @abstractmethod def reset_password ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Args: event (Event): \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 \"\"\" pass def create_response ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 Returns: dict: \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 \"\"\" logger . info ( f ' { self . package } create_response start' ) self . data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : config_data = { self . LOGIN : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . REGISTER : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . RESET_PASSWORD : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, } if config . config . get ( \"login_enabled\" , True ): self . create_login_page ( event , config , config_data ) if config . config . get ( \"register_enabled\" , True ): self . create_register_page ( event , config , config_data ) if config . config . get ( \"reset_password_enabled\" , True ): self . create_password_page ( event , config , config_data ) self . create_other_page ( event , config , config_data ) self . data [ config . id . hex ] = config_data logger . info ( self . data ) logger . info ( f ' { self . package } create_response end' ) return self . data def add_page_form ( self , config , page_name , label , items , config_data , submit_url = None , submit_label = None ): \"\"\"\u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Args: config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e page_name (str): \u9875\u9762\u540d\u79f0 label (str): \u6807\u7b7e items (list): \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e submit_url (str, optional): \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. submit_label (str, optional): \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. \"\"\" default = { \"login\" : ( \"\u767b\u5f55\" , f \"/api/v1/tenant/tenant_id/auth/?event_tag= { self . auth_event_tag } \" ), \"register\" : ( \"\u6ce8\u518c\" , f \"/api/v1/tenant/tenant_id/register/?event_tag= { self . register_event_tag } \" ), \"password\" : ( \"\u91cd\u7f6e\u5bc6\u7801\" , f \"/api/v1/tenant/tenant_id/reset_password/?event_tag= { self . password_event_tag } \" ), } if not submit_label : submit_label , useless = default . get ( page_name ) if not submit_url : useless , submit_url = default . get ( page_name ) items . append ({ \"type\" : \"hidden\" , \"name\" : \"config_id\" , \"value\" : config . id }) config_data [ page_name ][ 'forms' ] . append ({ 'label' : config . name or label , 'items' : items , 'submit' : { 'label' : submit_label , 'title' : submit_label , 'http' : { 'url' : submit_url , 'method' : \"post\" }} }) def add_page_bottoms ( self , page_name , bottoms ): self . data [ page_name ][ 'bottoms' ] . append ( bottoms ) def add_page_extend ( self , page_name , buttons , title = None ): if not self . data [ page_name ] . get ( 'extend' ): self . data [ page_name ][ 'extend' ] = {} self . data [ page_name ][ 'extend' ][ 'title' ] = title self . data [ page_name ][ 'extend' ][ 'buttons' ] . append ( buttons ) @abstractmethod def create_login_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_register_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_password_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_other_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass def register_auth_manage_page ( self ): \"\"\" \u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 \"\"\" from api.v1.pages.mine.auth_manage import page as auth_manage_page pages = self . create_auth_manage_page () if not pages : return if not isinstance ( pages , list ): pages = [ pages ] for page in pages : self . register_front_pages ( page ) auth_manage_page . add_pages ( page ) @abstractmethod def create_auth_manage_page ( self ): \"\"\"\u62bd\u8c61\u65b9\u6cd5: \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 \"\"\" pass @abstractmethod def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 \"\"\" pass @abstractmethod def fix_login_page ( self , event , ** kwargs ): \"\"\"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Args: event: AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 \"\"\" pass def get_current_config ( self , event ): \"\"\"\u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Args: event (Event): \u4e8b\u4ef6 Returns: TenantExtensionConfig: \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id ) def listen_events ( self ): \"\"\"\u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . auth_event_tag = self . register_event ( 'auth' , '\u8ba4\u8bc1' ) self . listen_event ( self . auth_event_tag , self . start_authenticate ) self . register_event_tag = self . register_event ( 'register' , '\u6ce8\u518c' ) self . listen_event ( self . register_event_tag , self . register ) self . password_event_tag = self . register_event ( 'password' , '\u91cd\u7f6e\u5bc6\u7801' ) self . listen_event ( self . password_event_tag , self . reset_password ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . create_response ) self . listen_event ( core_event . AUTHRULE_CHECK_AUTH_DATA , self . check_auth_data ) self . listen_event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , self . fix_login_page ) composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auth_factor.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 add_page_form ( self , config , page_name , label , items , config_data , submit_url = None , submit_label = None ) # \u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Parameters: Name Type Description Default config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required page_name str \u9875\u9762\u540d\u79f0 required label str \u6807\u7b7e required items list \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required submit_url str \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. None submit_label str \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. None Source code in arkid/core/extension/auth_factor.py def add_page_form ( self , config , page_name , label , items , config_data , submit_url = None , submit_label = None ): \"\"\"\u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Args: config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e page_name (str): \u9875\u9762\u540d\u79f0 label (str): \u6807\u7b7e items (list): \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e submit_url (str, optional): \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. submit_label (str, optional): \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. \"\"\" default = { \"login\" : ( \"\u767b\u5f55\" , f \"/api/v1/tenant/tenant_id/auth/?event_tag= { self . auth_event_tag } \" ), \"register\" : ( \"\u6ce8\u518c\" , f \"/api/v1/tenant/tenant_id/register/?event_tag= { self . register_event_tag } \" ), \"password\" : ( \"\u91cd\u7f6e\u5bc6\u7801\" , f \"/api/v1/tenant/tenant_id/reset_password/?event_tag= { self . password_event_tag } \" ), } if not submit_label : submit_label , useless = default . get ( page_name ) if not submit_url : useless , submit_url = default . get ( page_name ) items . append ({ \"type\" : \"hidden\" , \"name\" : \"config_id\" , \"value\" : config . id }) config_data [ page_name ][ 'forms' ] . append ({ 'label' : config . name or label , 'items' : items , 'submit' : { 'label' : submit_label , 'title' : submit_label , 'http' : { 'url' : submit_url , 'method' : \"post\" }} }) auth_failed ( self , event , data , ** kwargs ) # \u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Parameters: Name Type Description Default event _type_ \u8ba4\u8bc1\u4e8b\u4ef6 required data _type_ \u7ed3\u679c\u63cf\u8ff0 required Source code in arkid/core/extension/auth_factor.py def auth_failed ( self , event , data , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Args: event (_type_): \u8ba4\u8bc1\u4e8b\u4ef6 data (_type_): \u7ed3\u679c\u63cf\u8ff0 \"\"\" config = self . get_current_config ( event ) dispatch_event ( Event ( tag = core_event . AUTH_FAIL , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex , \"data\" : data })) core_event . remove_event_id ( event ) core_event . break_event_loop ( data ) auth_success ( self , user , event , ** kwargs ) # \u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Parameters: Name Type Description Default user User \u7528\u6237 required event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Optional[User,None] \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 Source code in arkid/core/extension/auth_factor.py def auth_success ( self , user , event , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Args: user (User): \u7528\u6237 event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . AUTH_SUCCESS , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config , \"user\" : user })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return user authenticate ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 \"\"\" pass check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 \"\"\" pass create_auth_manage_page ( self ) # \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_auth_manage_page ( self ): \"\"\"\u62bd\u8c61\u65b9\u6cd5: \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 \"\"\" pass create_login_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_login_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass create_other_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_other_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass create_password_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_password_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass create_register_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_register_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass create_response ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required Returns: Type Description dict \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 Source code in arkid/core/extension/auth_factor.py def create_response ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 Returns: dict: \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 \"\"\" logger . info ( f ' { self . package } create_response start' ) self . data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : config_data = { self . LOGIN : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . REGISTER : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . RESET_PASSWORD : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, } if config . config . get ( \"login_enabled\" , True ): self . create_login_page ( event , config , config_data ) if config . config . get ( \"register_enabled\" , True ): self . create_register_page ( event , config , config_data ) if config . config . get ( \"reset_password_enabled\" , True ): self . create_password_page ( event , config , config_data ) self . create_other_page ( event , config , config_data ) self . data [ config . id . hex ] = config_data logger . info ( self . data ) logger . info ( f ' { self . package } create_response end' ) return self . data fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def fix_login_page ( self , event , ** kwargs ): \"\"\"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Args: event: AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 \"\"\" pass get_current_config ( self , event ) # \u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Returns: Type Description TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e Source code in arkid/core/extension/auth_factor.py def get_current_config ( self , event ): \"\"\"\u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Args: event (Event): \u4e8b\u4ef6 Returns: TenantExtensionConfig: \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id ) listen_events ( self ) # \u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 Source code in arkid/core/extension/auth_factor.py def listen_events ( self ): \"\"\"\u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . auth_event_tag = self . register_event ( 'auth' , '\u8ba4\u8bc1' ) self . listen_event ( self . auth_event_tag , self . start_authenticate ) self . register_event_tag = self . register_event ( 'register' , '\u6ce8\u518c' ) self . listen_event ( self . register_event_tag , self . register ) self . password_event_tag = self . register_event ( 'password' , '\u91cd\u7f6e\u5bc6\u7801' ) self . listen_event ( self . password_event_tag , self . reset_password ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . create_response ) self . listen_event ( core_event . AUTHRULE_CHECK_AUTH_DATA , self . check_auth_data ) self . listen_event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , self . fix_login_page ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auth_factor.py def load ( self ): super () . load () self . listen_events () self . register_auth_manage_page () register ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u6ce8\u518c\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def register ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Args: event (Event): \u6ce8\u518c\u4e8b\u4ef6 \"\"\" pass register_auth_factor_schema ( self , schema , auth_factor_type ) # \u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Parameters: Name Type Description Default schema Schema schema\u63cf\u8ff0 required auth_factor_type str \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b required Source code in arkid/core/extension/auth_factor.py def register_auth_factor_schema ( self , schema , auth_factor_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Args: schema (Schema): schema\u63cf\u8ff0 auth_factor_type (str): \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_factor_type ) self . register_composite_config_schema ( schema , auth_factor_type , exclude = [ 'extension' ]) register_auth_manage_page ( self ) # \u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 Source code in arkid/core/extension/auth_factor.py def register_auth_manage_page ( self ): \"\"\" \u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 \"\"\" from api.v1.pages.mine.auth_manage import page as auth_manage_page pages = self . create_auth_manage_page () if not pages : return if not isinstance ( pages , list ): pages = [ pages ] for page in pages : self . register_front_pages ( page ) auth_manage_page . add_pages ( page ) register_user_key_fields ( self , ** fields ) # \u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 Source code in arkid/core/extension/auth_factor.py def register_user_key_fields ( self , ** fields ): \"\"\"\u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 \"\"\" User . register_key_field ( ** fields ) reset_password ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def reset_password ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Args: event (Event): \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 \"\"\" pass start_authenticate ( self , event , ** kwargs ) # \u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Optional[User,None] \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 Source code in arkid/core/extension/auth_factor.py def start_authenticate ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . BEFORE_AUTH , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return self . authenticate ( event , ** kwargs ) Exemplary # extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension ( AuthFactorExtension ) # \u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py class MobileAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () @operation ( MineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def mine_mobile ( self , request , tenant_id : str ): user = request . user user_expand = User . expand_objects . filter ( id = user . id ) . first () config = self . get_tenant_configs ( request . tenant ) . first () if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) return self . success ( data = { \"current_mobile\" : user_expand . get ( \"mobile\" , None ), \"mobile\" : \"\" , \"code\" : \"\" , \"config_id\" : config . id . hex , }, ) authenticate ( self , event , ** kwargs ) # \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_auth_data ( self , event , ** kwargs ): pass check_mobile_exists ( self , mobile , tenant ) # \u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default mobile str \u624b\u673a\u53f7 required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None check_username_exists ( self , username , tenant ) # \u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default username str \u7528\u6237\u540d required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None create_auth_manage_page ( self ) # \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages create_extension_config_schema ( self ) # \u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) create_login_page ( self , event , config , config_data ) # \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) create_other_page ( self , event , config , config_data ) # \u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass create_password_page ( self , event , config , config_data ) # \u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) create_register_page ( self , event , config , config_data ) # \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def fix_login_page ( self , event , ** kwargs ): pass load ( self ) # \u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) register ( self , event , ** kwargs ) # \u6ce8\u518c\u7528\u6237 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user reset_password ( self , event , ** kwargs ) # \u91cd\u7f6e\u5bc6\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) send_sms_code ( self , request , tenant_id , config_id , data ) # \u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) update_mine_mobile ( self , request , tenant_id , data ) # \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension ( AuthFactorExtension ) # Source code in extension_root/com_longgui_auth_factor_password/__init__.py class PasswordAuthFactorExtension ( AuthFactorExtension ): def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) def create_tenant_event ( self , event , ** kwargs ): tenant = event . tenant config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"default\" , \"password\" ) def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def reset_user_password ( self , request , tenant_id : str , id : str , data : RestUserPasswordIn ): user = User . active_objects . get ( id = id ) password = data . password user . password = make_password ( password ) user . save () return self . success () def get_user_key_fields ( self , request ): data = [{ 'key' : key , 'name' : value } for key , value in User . key_fields . items ()] return data def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) @transaction . atomic () def register ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) if data . get ( 'checkpassword' , None ) != password : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) config = self . get_current_config ( event ) ret , message = self . check_password_complexity ( password , config ) if not ret : return self . error ( ErrorCode . PASSWORD_STRENGTH_LACK ) register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] if not register_fields : fields = [ 'username' ] if username is None : self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_EMPTY )) else : fields = [ k for k in register_fields if request . POST . get ( k ) is not None ] if not fields : self . auth_failed ( event , data = self . error ( ErrorCode . ALL_USER_FLAG_LACK_FIELD )) for field in fields : user = self . _get_register_user ( tenant , field , request . POST . get ( field )) if user : self . auth_failed ( event , data = self . error ( ErrorCode . FIELD_USER_EXISTS , field = field )) # user = User.objects.create(tenant=tenant) user = User ( tenant = tenant ) for k in fields : if request . POST . get ( k ): setattr ( user , k , request . POST . get ( k )) user . password = make_password ( password ) user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def check_password_complexity ( self , pwd , config ): if not pwd : return False , 'No password provide' if config : regular = config . config . get ( 'regular' ) title = config . config . get ( 'title' ) if re . match ( regular , pwd ): return True , None else : return False , title return True , None def _get_register_user ( self , tenant , field_name , field_value ): user = None if field_name in ( 'username' , 'email' ): user = tenant . users . filter ( is_active = True , is_del = False ) . filter ( ** { field_name : field_value }) . first () else : # \u83b7\u53d6\u521a\u6ce8\u518c\u7684\u7528\u6237 user = User . expand_objects . filter ( ** { field_name : field_value }) . first () return user def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR ) authenticate ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def check_auth_data ( self , event , ** kwargs ): pass create_auth_manage_page ( self ) # \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page create_login_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) create_other_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_other_page ( self , event , config , config_data ): pass create_password_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_password_page ( self , event , config , config_data ): pass create_register_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def fix_login_page ( self , event , ** kwargs ): pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) reset_password ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def reset_password ( self , event , ** kwargs ): pass update_mine_password ( self , request , tenant_id , data ) # \u66f4\u6539\u5bc6\u7801 Source code in extension_root/com_longgui_auth_factor_password/__init__.py @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"Authentication"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#features","text":"Authentication\uff1aIncluding mobile phone SMS verification code\uff0cUsername Password\uff0cA series of plug -in with graphics verification code, etc.\uff0cUsed to identify user identity or improve system security\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#implementation","text":"When developers create a new authentication factors\uff0cYou need to inherit the AuthFactorextension base class and implement all abstract methods\uff0cThe data process of the certification factor plug -in during operation is shown in the figure below\uff1a sequenceDiagram participant U as Client participant C as Platform core participant B as Certification factors plugin C->>B: Loading plug -in B->>C: Registration monitoring custom event\uff1aCertification\uff0cregister\uff0creset Password\uff0cCreate_LOGIN_PAGE_AUTH_FACTOR U->>C: Request to get the login page C->>B: Trigger Create_LOGIN_PAGE_AUTH_Factor event B->>C: Response event\uff0cTraversing all running configuration\uff0cConfigure Login according to the configuration of running_pages C->>U: Rendering login page U->>C: Enter user voucher\uff0cClick the button\uff0cEnter the certification/register/Reset password and other processes C->>B: Trigger certification registration/Reset password and other events B->>C: Response certification registration/Reset password and other events\uff0cComplete the corresponding process\uff0cReturn result C->>U: Return to execution results","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#abstract-method","text":"authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension","text":"Source code in arkid/core/extension/auth_factor.py class AuthFactorExtension ( Extension ): TYPE = \"auth_factor\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AuthFactorExtension . TYPE LOGIN = 'login' REGISTER = 'register' RESET_PASSWORD = 'password' def register_user_key_fields ( self , ** fields ): \"\"\"\u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 \"\"\" User . register_key_field ( ** fields ) def load ( self ): super () . load () self . listen_events () self . register_auth_manage_page () def register_auth_factor_schema ( self , schema , auth_factor_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Args: schema (Schema): schema\u63cf\u8ff0 auth_factor_type (str): \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_factor_type ) self . register_composite_config_schema ( schema , auth_factor_type , exclude = [ 'extension' ]) def start_authenticate ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . BEFORE_AUTH , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return self . authenticate ( event , ** kwargs ) @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 \"\"\" pass def auth_success ( self , user , event , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Args: user (User): \u7528\u6237 event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . AUTH_SUCCESS , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config , \"user\" : user })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return user def auth_failed ( self , event , data , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Args: event (_type_): \u8ba4\u8bc1\u4e8b\u4ef6 data (_type_): \u7ed3\u679c\u63cf\u8ff0 \"\"\" config = self . get_current_config ( event ) dispatch_event ( Event ( tag = core_event . AUTH_FAIL , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex , \"data\" : data })) core_event . remove_event_id ( event ) core_event . break_event_loop ( data ) @abstractmethod def register ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Args: event (Event): \u6ce8\u518c\u4e8b\u4ef6 \"\"\" pass @abstractmethod def reset_password ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Args: event (Event): \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 \"\"\" pass def create_response ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 Returns: dict: \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 \"\"\" logger . info ( f ' { self . package } create_response start' ) self . data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : config_data = { self . LOGIN : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . REGISTER : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . RESET_PASSWORD : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, } if config . config . get ( \"login_enabled\" , True ): self . create_login_page ( event , config , config_data ) if config . config . get ( \"register_enabled\" , True ): self . create_register_page ( event , config , config_data ) if config . config . get ( \"reset_password_enabled\" , True ): self . create_password_page ( event , config , config_data ) self . create_other_page ( event , config , config_data ) self . data [ config . id . hex ] = config_data logger . info ( self . data ) logger . info ( f ' { self . package } create_response end' ) return self . data def add_page_form ( self , config , page_name , label , items , config_data , submit_url = None , submit_label = None ): \"\"\"\u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Args: config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e page_name (str): \u9875\u9762\u540d\u79f0 label (str): \u6807\u7b7e items (list): \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e submit_url (str, optional): \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. submit_label (str, optional): \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. \"\"\" default = { \"login\" : ( \"\u767b\u5f55\" , f \"/api/v1/tenant/tenant_id/auth/?event_tag= { self . auth_event_tag } \" ), \"register\" : ( \"\u6ce8\u518c\" , f \"/api/v1/tenant/tenant_id/register/?event_tag= { self . register_event_tag } \" ), \"password\" : ( \"\u91cd\u7f6e\u5bc6\u7801\" , f \"/api/v1/tenant/tenant_id/reset_password/?event_tag= { self . password_event_tag } \" ), } if not submit_label : submit_label , useless = default . get ( page_name ) if not submit_url : useless , submit_url = default . get ( page_name ) items . append ({ \"type\" : \"hidden\" , \"name\" : \"config_id\" , \"value\" : config . id }) config_data [ page_name ][ 'forms' ] . append ({ 'label' : config . name or label , 'items' : items , 'submit' : { 'label' : submit_label , 'title' : submit_label , 'http' : { 'url' : submit_url , 'method' : \"post\" }} }) def add_page_bottoms ( self , page_name , bottoms ): self . data [ page_name ][ 'bottoms' ] . append ( bottoms ) def add_page_extend ( self , page_name , buttons , title = None ): if not self . data [ page_name ] . get ( 'extend' ): self . data [ page_name ][ 'extend' ] = {} self . data [ page_name ][ 'extend' ][ 'title' ] = title self . data [ page_name ][ 'extend' ][ 'buttons' ] . append ( buttons ) @abstractmethod def create_login_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_register_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_password_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass @abstractmethod def create_other_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass def register_auth_manage_page ( self ): \"\"\" \u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 \"\"\" from api.v1.pages.mine.auth_manage import page as auth_manage_page pages = self . create_auth_manage_page () if not pages : return if not isinstance ( pages , list ): pages = [ pages ] for page in pages : self . register_front_pages ( page ) auth_manage_page . add_pages ( page ) @abstractmethod def create_auth_manage_page ( self ): \"\"\"\u62bd\u8c61\u65b9\u6cd5: \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 \"\"\" pass @abstractmethod def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 \"\"\" pass @abstractmethod def fix_login_page ( self , event , ** kwargs ): \"\"\"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Args: event: AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 \"\"\" pass def get_current_config ( self , event ): \"\"\"\u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Args: event (Event): \u4e8b\u4ef6 Returns: TenantExtensionConfig: \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id ) def listen_events ( self ): \"\"\"\u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . auth_event_tag = self . register_event ( 'auth' , '\u8ba4\u8bc1' ) self . listen_event ( self . auth_event_tag , self . start_authenticate ) self . register_event_tag = self . register_event ( 'register' , '\u6ce8\u518c' ) self . listen_event ( self . register_event_tag , self . register ) self . password_event_tag = self . register_event ( 'password' , '\u91cd\u7f6e\u5bc6\u7801' ) self . listen_event ( self . password_event_tag , self . reset_password ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . create_response ) self . listen_event ( core_event . AUTHRULE_CHECK_AUTH_DATA , self . check_auth_data ) self . listen_event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , self . fix_login_page )","title":"AuthFactorExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auth_factor.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.add_page_form","text":"\u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Parameters: Name Type Description Default config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required page_name str \u9875\u9762\u540d\u79f0 required label str \u6807\u7b7e required items list \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required submit_url str \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. None submit_label str \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. None Source code in arkid/core/extension/auth_factor.py def add_page_form ( self , config , page_name , label , items , config_data , submit_url = None , submit_label = None ): \"\"\"\u5411config_data\u4e2d\u6dfb\u52a0\u8868\u5355\u5143\u7d20 Args: config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e page_name (str): \u9875\u9762\u540d\u79f0 label (str): \u6807\u7b7e items (list): \u9875\u9762\u5143\u7d20\u63cf\u8ff0\u5217\u8868 config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e submit_url (str, optional): \u8868\u5355\u63d0\u4ea4\u5730\u5740. Defaults to None. submit_label (str, optional): \u8868\u5355\u63d0\u4ea4\u6309\u94ae\u6807\u7b7e. Defaults to None. \"\"\" default = { \"login\" : ( \"\u767b\u5f55\" , f \"/api/v1/tenant/tenant_id/auth/?event_tag= { self . auth_event_tag } \" ), \"register\" : ( \"\u6ce8\u518c\" , f \"/api/v1/tenant/tenant_id/register/?event_tag= { self . register_event_tag } \" ), \"password\" : ( \"\u91cd\u7f6e\u5bc6\u7801\" , f \"/api/v1/tenant/tenant_id/reset_password/?event_tag= { self . password_event_tag } \" ), } if not submit_label : submit_label , useless = default . get ( page_name ) if not submit_url : useless , submit_url = default . get ( page_name ) items . append ({ \"type\" : \"hidden\" , \"name\" : \"config_id\" , \"value\" : config . id }) config_data [ page_name ][ 'forms' ] . append ({ 'label' : config . name or label , 'items' : items , 'submit' : { 'label' : submit_label , 'title' : submit_label , 'http' : { 'url' : submit_url , 'method' : \"post\" }} })","title":"add_page_form()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.auth_failed","text":"\u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Parameters: Name Type Description Default event _type_ \u8ba4\u8bc1\u4e8b\u4ef6 required data _type_ \u7ed3\u679c\u63cf\u8ff0 required Source code in arkid/core/extension/auth_factor.py def auth_failed ( self , event , data , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u5931\u8d25\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u5931\u8d25\u4e8b\u4ef6\uff0c\u6253\u7834\u4e8b\u4ef6\u5faa\u73af\uff0c\u8fd4\u56de\u62a5\u9519\u4fe1\u606f Args: event (_type_): \u8ba4\u8bc1\u4e8b\u4ef6 data (_type_): \u7ed3\u679c\u63cf\u8ff0 \"\"\" config = self . get_current_config ( event ) dispatch_event ( Event ( tag = core_event . AUTH_FAIL , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex , \"data\" : data })) core_event . remove_event_id ( event ) core_event . break_event_loop ( data )","title":"auth_failed()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.auth_success","text":"\u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Parameters: Name Type Description Default user User \u7528\u6237 required event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Optional[User,None] \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 Source code in arkid/core/extension/auth_factor.py def auth_success ( self , user , event , ** kwargs ): \"\"\"\u5c01\u88c5\u8ba4\u8bc1\u6210\u529f\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u89e6\u53d1\u8ba4\u8bc1\u6210\u529f\u4e8b\u4ef6\uff0c\u5982\u6838\u5fc3\u5224\u5b9a\u4e8b\u4ef6\u65e0\u5f02\u5e38\uff08\u65e0\u5176\u4ed6\u63d2\u4ef6\u6216\u673a\u5236\u8ba4\u4e3a\u7ed3\u679c\u4e3a\u5931\u8d25\uff09\u5219\u8fd4\u56de\u8ba4\u8bc1\u6210\u529f\u540e\u7684\u7528\u6237 Args: user (User): \u7528\u6237 event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . AUTH_SUCCESS , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config , \"user\" : user })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return user","title":"auth_success()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.authenticate","text":"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 \"\"\" pass","title":"authenticate()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 \"\"\" pass","title":"check_auth_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_auth_manage_page","text":"\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_auth_manage_page ( self ): \"\"\"\u62bd\u8c61\u65b9\u6cd5: \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 \"\"\" pass","title":"create_auth_manage_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_login_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_login_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass","title":"create_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_other_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_other_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass","title":"create_other_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_password_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_password_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass","title":"create_password_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_register_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in arkid/core/extension/auth_factor.py @abstractmethod def create_register_page ( self , event , config , config_data ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e config_data (dict): \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e \"\"\" pass","title":"create_register_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.create_response","text":"\u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required Returns: Type Description dict \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 Source code in arkid/core/extension/auth_factor.py def create_response ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1aCREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6\uff0c\u7ec4\u88c5\u767b\u9646\u9875\u9762schema\u63cf\u8ff0 Args: event (Event): CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 Returns: dict: \u7ec4\u88c5\u597d\u7684\u767b\u9646\u9875\u9762\u5143\u7d20\uff08\u975e\u6700\u7ec8\u7ed3\u6784\uff09 \"\"\" logger . info ( f ' { self . package } create_response start' ) self . data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : config_data = { self . LOGIN : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . REGISTER : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, self . RESET_PASSWORD : { 'forms' :[], 'bottoms' :[], 'extend' :{}, }, } if config . config . get ( \"login_enabled\" , True ): self . create_login_page ( event , config , config_data ) if config . config . get ( \"register_enabled\" , True ): self . create_register_page ( event , config , config_data ) if config . config . get ( \"reset_password_enabled\" , True ): self . create_password_page ( event , config , config_data ) self . create_other_page ( event , config , config_data ) self . data [ config . id . hex ] = config_data logger . info ( self . data ) logger . info ( f ' { self . package } create_response end' ) return self . data","title":"create_response()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def fix_login_page ( self , event , ** kwargs ): \"\"\"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Args: event: AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 \"\"\" pass","title":"fix_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.get_current_config","text":"\u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Returns: Type Description TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e Source code in arkid/core/extension/auth_factor.py def get_current_config ( self , event ): \"\"\"\u83b7\u53d6\u4e8b\u4ef6\u6307\u5411\u7684\u8fd0\u884c\u65f6\u914d\u7f6e Args: event (Event): \u4e8b\u4ef6 Returns: TenantExtensionConfig: \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id )","title":"get_current_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.listen_events","text":"\u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 Source code in arkid/core/extension/auth_factor.py def listen_events ( self ): \"\"\"\u6ce8\u518c\u5e76\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . auth_event_tag = self . register_event ( 'auth' , '\u8ba4\u8bc1' ) self . listen_event ( self . auth_event_tag , self . start_authenticate ) self . register_event_tag = self . register_event ( 'register' , '\u6ce8\u518c' ) self . listen_event ( self . register_event_tag , self . register ) self . password_event_tag = self . register_event ( 'password' , '\u91cd\u7f6e\u5bc6\u7801' ) self . listen_event ( self . password_event_tag , self . reset_password ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . create_response ) self . listen_event ( core_event . AUTHRULE_CHECK_AUTH_DATA , self . check_auth_data ) self . listen_event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , self . fix_login_page )","title":"listen_events()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auth_factor.py def load ( self ): super () . load () self . listen_events () self . register_auth_manage_page ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.register","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u6ce8\u518c\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def register ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u6ce8\u518c\u4e8b\u4ef6 Args: event (Event): \u6ce8\u518c\u4e8b\u4ef6 \"\"\" pass","title":"register()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.register_auth_factor_schema","text":"\u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Parameters: Name Type Description Default schema Schema schema\u63cf\u8ff0 required auth_factor_type str \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b required Source code in arkid/core/extension/auth_factor.py def register_auth_factor_schema ( self , schema , auth_factor_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u56e0\u7d20\u8fd0\u884c\u65f6\u914d\u7f6eschema Args: schema (Schema): schema\u63cf\u8ff0 auth_factor_type (str): \u8ba4\u8bc1\u56e0\u7d20\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_factor_type ) self . register_composite_config_schema ( schema , auth_factor_type , exclude = [ 'extension' ])","title":"register_auth_factor_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.register_auth_manage_page","text":"\u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 Source code in arkid/core/extension/auth_factor.py def register_auth_manage_page ( self ): \"\"\" \u5411\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u6dfb\u52a0\u9875\u9762 \"\"\" from api.v1.pages.mine.auth_manage import page as auth_manage_page pages = self . create_auth_manage_page () if not pages : return if not isinstance ( pages , list ): pages = [ pages ] for page in pages : self . register_front_pages ( page ) auth_manage_page . add_pages ( page )","title":"register_auth_manage_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.register_user_key_fields","text":"\u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 Source code in arkid/core/extension/auth_factor.py def register_user_key_fields ( self , ** fields ): \"\"\"\u6ce8\u518c\u7528\u6237\u6a21\u578b\u5b57\u6bb5 \"\"\" User . register_key_field ( ** fields )","title":"register_user_key_fields()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.reset_password","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_factor.py @abstractmethod def reset_password ( self , event , ** kwargs ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Args: event (Event): \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 \"\"\" pass","title":"reset_password()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#arkid.core.extension.auth_factor.AuthFactorExtension.start_authenticate","text":"\u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Optional[User,None] \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 Source code in arkid/core/extension/auth_factor.py def start_authenticate ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u8ba4\u8bc1\u4e8b\u4ef6: \u8ba4\u8bc1\u524d\u904d\u5386\u8ba4\u8bc1\u89c4\u5219\uff0c\u5982\u901a\u8fc7\u6240\u6709\u89c4\u5219\u5219\u6267\u884c\u8ba4\u8bc1\u89c4\u7a0b Args: event (Event): \u8ba4\u8bc1\u4e8b\u4ef6 Returns: Optional[User,None]: \u5982\u8ba4\u8bc1\u6210\u529f\u5219\u8fd4\u56deuser\u5bf9\u8c61\uff0c\u5982\u8ba4\u8bc1\u5931\u8d25\u8df3\u51fa\u4e8b\u4ef6\u5faa\u73af\u62a5\u9519 \"\"\" config = self . get_current_config ( event ) responses = dispatch_event ( Event ( tag = core_event . BEFORE_AUTH , tenant = event . tenant , request = event . request , data = { \"auth_factor_config_id\" : config . id . hex })) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return self . auth_failed ( event , data ) return self . authenticate ( event , ** kwargs )","title":"start_authenticate()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension","text":"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py class MobileAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () @operation ( MineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def mine_mobile ( self , request , tenant_id : str ): user = request . user user_expand = User . expand_objects . filter ( id = user . id ) . first () config = self . get_tenant_configs ( request . tenant ) . first () if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) return self . success ( data = { \"current_mobile\" : user_expand . get ( \"mobile\" , None ), \"mobile\" : \"\" , \"code\" : \"\" , \"config_id\" : config . id . hex , }, )","title":"MobileAuthFactorExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.authenticate","text":"\u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg ))","title":"authenticate()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_auth_data ( self , event , ** kwargs ): pass","title":"check_auth_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_mobile_exists","text":"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default mobile str \u624b\u673a\u53f7 required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None","title":"check_mobile_exists()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_username_exists","text":"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default username str \u7528\u6237\u540d required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None","title":"check_username_exists()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_auth_manage_page","text":"\u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages","title":"create_auth_manage_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_extension_config_schema","text":"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' )","title":"create_extension_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_login_page","text":"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data )","title":"create_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_other_page","text":"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass","title":"create_other_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_password_page","text":"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data )","title":"create_password_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_register_page","text":"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data )","title":"create_register_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def fix_login_page ( self , event , ** kwargs ): pass","title":"fix_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.load","text":"\u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.register","text":"\u6ce8\u518c\u7528\u6237 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user","title":"register()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.reset_password","text":"\u91cd\u7f6e\u5bc6\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR )","title":"reset_password()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.send_sms_code","text":"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED )","title":"send_sms_code()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.update_mine_mobile","text":"\u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success ()","title":"update_mine_mobile()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension","text":"Source code in extension_root/com_longgui_auth_factor_password/__init__.py class PasswordAuthFactorExtension ( AuthFactorExtension ): def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) def create_tenant_event ( self , event , ** kwargs ): tenant = event . tenant config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"default\" , \"password\" ) def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def reset_user_password ( self , request , tenant_id : str , id : str , data : RestUserPasswordIn ): user = User . active_objects . get ( id = id ) password = data . password user . password = make_password ( password ) user . save () return self . success () def get_user_key_fields ( self , request ): data = [{ 'key' : key , 'name' : value } for key , value in User . key_fields . items ()] return data def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) @transaction . atomic () def register ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) if data . get ( 'checkpassword' , None ) != password : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) config = self . get_current_config ( event ) ret , message = self . check_password_complexity ( password , config ) if not ret : return self . error ( ErrorCode . PASSWORD_STRENGTH_LACK ) register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] if not register_fields : fields = [ 'username' ] if username is None : self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_EMPTY )) else : fields = [ k for k in register_fields if request . POST . get ( k ) is not None ] if not fields : self . auth_failed ( event , data = self . error ( ErrorCode . ALL_USER_FLAG_LACK_FIELD )) for field in fields : user = self . _get_register_user ( tenant , field , request . POST . get ( field )) if user : self . auth_failed ( event , data = self . error ( ErrorCode . FIELD_USER_EXISTS , field = field )) # user = User.objects.create(tenant=tenant) user = User ( tenant = tenant ) for k in fields : if request . POST . get ( k ): setattr ( user , k , request . POST . get ( k )) user . password = make_password ( password ) user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def check_password_complexity ( self , pwd , config ): if not pwd : return False , 'No password provide' if config : regular = config . config . get ( 'regular' ) title = config . config . get ( 'title' ) if re . match ( regular , pwd ): return True , None else : return False , title return True , None def _get_register_user ( self , tenant , field_name , field_value ): user = None if field_name in ( 'username' , 'email' ): user = tenant . users . filter ( is_active = True , is_del = False ) . filter ( ** { field_name : field_value }) . first () else : # \u83b7\u53d6\u521a\u6ce8\u518c\u7684\u7528\u6237 user = User . expand_objects . filter ( ** { field_name : field_value }) . first () return user def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"PasswordAuthFactorExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.authenticate","text":"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH ))","title":"authenticate()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def check_auth_data ( self , event , ** kwargs ): pass","title":"check_auth_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_auth_manage_page","text":"\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page","title":"create_auth_manage_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_login_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data )","title":"create_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_other_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_other_page ( self , event , config , config_data ): pass","title":"create_other_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_password_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_password_page ( self , event , config , config_data ): pass","title":"create_password_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_register_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data )","title":"create_register_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def fix_login_page ( self , event , ** kwargs ): pass","title":"fix_login_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.reset_password","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def reset_password ( self , event , ** kwargs ): pass","title":"reset_password()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Authentication/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.update_mine_password","text":"\u66f4\u6539\u5bc6\u7801 Source code in extension_root/com_longgui_auth_factor_password/__init__.py @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"update_mine_password()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/","text":"Features # Authorization rules\uff0cAs a system of certification, supplementation\uff0cIt can support more fine -grained permissions given\u3002 It can support the given authority for different attributes of users\uff0cFor example user name\u3001Nick name\u3001gender\u3001Mobile phone number waiting\u3002 You can also give the permissions of the different attributes of the grouping\u3002 You can also according to the development of the developer\uff0cThe structure of the data storage\uff0cRealize the authority of permission in specific scenarios\u3002 Implementation # arkidThe system has assumed the permissions of the user attributes by default\uff0cConvenient developer for reference graph LR A[start] --> B {Design SCHEMA} --> C {Register the front -end page}--> D {register SCHEMA}--> E {Implementing the authorization function} --> F [End]; Let's make a brief introduction to the realization of ideas: Need developers want to know the attributes that need to be screened if they develop plugins\uff0cIs the user attribute\uff0cStill packet attributes\uff0cOr other attributes\u3002And those applications need to be filtered\uff0cAnd those permissions\u3002 To design schema\uff0cUsed to store data structure\u3002If there are some application lists in SCHEMA\uff0cPermission list\uff0cUser lists, etc.\uff0cNeed to use the front -end page used\uff0cUse the parent class register_front_pages registered separately\u3002 Different authorization rules are divided through different SCHEMA\uff0cSo when the developer designed the SCHEMA\uff0cNeed to pass register_impowerrule_schema \uff0cRegister\u3002 After the registration is completed\uff0cPage green Type fields that create authorized rules will have one more authorized rules\uff0cAs shown below: If we choose different authorization rules\uff0cThe red part will show different content\uff0cThe display content is determined by the SCHEMA structure\u3002 Create editing and deletion of authorization rules\uff0cThey are all processed in advance by Arkid\uff0cDevelopers only need to pay attention to the method of power\u3002 Let's introduce the use of the method of empowerment: Need developers to implement [GET_auth_result(event, **Kwargs)] (#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.get_auth_Result) method parameter: This method Kwargs \uff0c event Two parameters\uff0cWe focus on event parameter\uff0cThis parameter contains data and tenant Two attributes\uff0cin event.tenant You can get the current tenant\uff1b event.data You can get the data passed over\u3002We get the value in the data data.user Can get the current user\uff1b data.app Can get the current application\uff0cIf this application is a None\uff0cIt means that the application is arkid\uff0cOn the contrary, it is other applications\uff1b data.arr You can get user permissions array (0 or 1 composition\uff0c0 is no authority\uff0c1 There is authority\uff0cSOON's sort_ID is the same)\uff1b data.config You can get the current authorization rules use: Developers need to be based on the rules of authorization event.config \uff0cCombine data.user \uff0cAccording to your own needs\uff0cAfter screening\uff0cReturn to SORT with permissions_ID array Abstract method # get_auth_result(event, **kwargs) Foundation definition # arkid.core.extension.impower_rule.ImpowerRuleBaseExtension ( Extension ) # Source code in arkid/core/extension/impower_rule.py class ImpowerRuleBaseExtension ( Extension ): TYPE = 'impower_rule' composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ImpowerRuleBaseExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . GET_AUTH_RESULT , self . filter_auth_result ) def get_extensions ( self ): ''' \u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 ''' return Extension_Obj . active_objects . filter ( package = self . package , type = self . TYPE ) . all () def get_all_config ( self , tenant_id ): ''' \u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e ''' return TenantExtensionConfig . active_objects . filter ( tenant_id = tenant_id , extension__in = self . get_extensions () ) . all () def register_impower_rule_schema ( self , schema , impowerrule_type ): \"\"\" \u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Params: schema: schema impowerrule_type: \u6388\u6743\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + impowerrule_type ) self . register_composite_config_schema ( schema , impowerrule_type , exclude = [ 'extension' ]) def filter_auth_result ( self , event , ** kwargs ): ''' \u7b5b\u9009\u62bd\u8c61\u7ed3\u679c ''' tenant = event . tenant configs = self . get_all_config ( tenant . id ) data = event . data arr = data . get ( 'arr' , []) copy_arr = [ x for x in arr ] result_sort_ids = [] # \u6bcf\u4e00\u4e2a\u6388\u6743\u89c4\u5219\u914d\u7f6e\u5355\u72ec\u9a8c\u8bc1 for config in configs : data [ 'config' ] = config sort_ids = self . get_auth_result ( event , ** kwargs ) if sort_ids : result_sort_ids . extend ( sort_ids ) # \u5bf9\u4e8e\u6388\u6743\u7ed3\u679c\u8fdb\u884c\u5408\u5e76 for index , value in enumerate ( copy_arr ): if int ( value ) == 0 and index in result_sort_ids : copy_arr [ index ] = 1 return copy_arr @abstractmethod def get_auth_result ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: arr: sort_id\u6570\u7ec4 \"\"\" pass composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/impower_rule.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 filter_auth_result ( self , event , ** kwargs ) # \u7b5b\u9009\u62bd\u8c61\u7ed3\u679c Source code in arkid/core/extension/impower_rule.py def filter_auth_result ( self , event , ** kwargs ): ''' \u7b5b\u9009\u62bd\u8c61\u7ed3\u679c ''' tenant = event . tenant configs = self . get_all_config ( tenant . id ) data = event . data arr = data . get ( 'arr' , []) copy_arr = [ x for x in arr ] result_sort_ids = [] # \u6bcf\u4e00\u4e2a\u6388\u6743\u89c4\u5219\u914d\u7f6e\u5355\u72ec\u9a8c\u8bc1 for config in configs : data [ 'config' ] = config sort_ids = self . get_auth_result ( event , ** kwargs ) if sort_ids : result_sort_ids . extend ( sort_ids ) # \u5bf9\u4e8e\u6388\u6743\u7ed3\u679c\u8fdb\u884c\u5408\u5e76 for index , value in enumerate ( copy_arr ): if int ( value ) == 0 and index in result_sort_ids : copy_arr [ index ] = 1 return copy_arr get_all_config ( self , tenant_id ) # \u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e Source code in arkid/core/extension/impower_rule.py def get_all_config ( self , tenant_id ): ''' \u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e ''' return TenantExtensionConfig . active_objects . filter ( tenant_id = tenant_id , extension__in = self . get_extensions () ) . all () get_auth_result ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description arr sort_id\u6570\u7ec4 Source code in arkid/core/extension/impower_rule.py @abstractmethod def get_auth_result ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: arr: sort_id\u6570\u7ec4 \"\"\" pass get_extensions ( self ) # \u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 Source code in arkid/core/extension/impower_rule.py def get_extensions ( self ): ''' \u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 ''' return Extension_Obj . active_objects . filter ( package = self . package , type = self . TYPE ) . all () load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/impower_rule.py def load ( self ): super () . load () self . listen_event ( core_event . GET_AUTH_RESULT , self . filter_auth_result ) register_impower_rule_schema ( self , schema , impowerrule_type ) # \u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Parameters: Name Type Description Default schema schema required impowerrule_type \u6388\u6743\u89c4\u5219\u7c7b\u578b required Source code in arkid/core/extension/impower_rule.py def register_impower_rule_schema ( self , schema , impowerrule_type ): \"\"\" \u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Params: schema: schema impowerrule_type: \u6388\u6743\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + impowerrule_type ) self . register_composite_config_schema ( schema , impowerrule_type , exclude = [ 'extension' ]) Exemplary # extension_root.com_longgui_impower_rule.ImpowerRuleExtension ( ImpowerRuleBaseExtension ) # Source code in extension_root/com_longgui_impower_rule/__init__.py class ImpowerRuleExtension ( ImpowerRuleBaseExtension ): def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page ) def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids get_auth_result ( self , event , ** kwargs ) # \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c Source code in extension_root/com_longgui_impower_rule/__init__.py def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_impower_rule/__init__.py def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) load_front_page ( self ) # \u6ce8\u518c\u524d\u7aef\u9875\u9762 Source code in extension_root/com_longgui_impower_rule/__init__.py def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page )","title":"AuthorizationRules"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#features","text":"Authorization rules\uff0cAs a system of certification, supplementation\uff0cIt can support more fine -grained permissions given\u3002 It can support the given authority for different attributes of users\uff0cFor example user name\u3001Nick name\u3001gender\u3001Mobile phone number waiting\u3002 You can also give the permissions of the different attributes of the grouping\u3002 You can also according to the development of the developer\uff0cThe structure of the data storage\uff0cRealize the authority of permission in specific scenarios\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#implementation","text":"arkidThe system has assumed the permissions of the user attributes by default\uff0cConvenient developer for reference graph LR A[start] --> B {Design SCHEMA} --> C {Register the front -end page}--> D {register SCHEMA}--> E {Implementing the authorization function} --> F [End]; Let's make a brief introduction to the realization of ideas: Need developers want to know the attributes that need to be screened if they develop plugins\uff0cIs the user attribute\uff0cStill packet attributes\uff0cOr other attributes\u3002And those applications need to be filtered\uff0cAnd those permissions\u3002 To design schema\uff0cUsed to store data structure\u3002If there are some application lists in SCHEMA\uff0cPermission list\uff0cUser lists, etc.\uff0cNeed to use the front -end page used\uff0cUse the parent class register_front_pages registered separately\u3002 Different authorization rules are divided through different SCHEMA\uff0cSo when the developer designed the SCHEMA\uff0cNeed to pass register_impowerrule_schema \uff0cRegister\u3002 After the registration is completed\uff0cPage green Type fields that create authorized rules will have one more authorized rules\uff0cAs shown below: If we choose different authorization rules\uff0cThe red part will show different content\uff0cThe display content is determined by the SCHEMA structure\u3002 Create editing and deletion of authorization rules\uff0cThey are all processed in advance by Arkid\uff0cDevelopers only need to pay attention to the method of power\u3002 Let's introduce the use of the method of empowerment: Need developers to implement [GET_auth_result(event, **Kwargs)] (#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.get_auth_Result) method parameter: This method Kwargs \uff0c event Two parameters\uff0cWe focus on event parameter\uff0cThis parameter contains data and tenant Two attributes\uff0cin event.tenant You can get the current tenant\uff1b event.data You can get the data passed over\u3002We get the value in the data data.user Can get the current user\uff1b data.app Can get the current application\uff0cIf this application is a None\uff0cIt means that the application is arkid\uff0cOn the contrary, it is other applications\uff1b data.arr You can get user permissions array (0 or 1 composition\uff0c0 is no authority\uff0c1 There is authority\uff0cSOON's sort_ID is the same)\uff1b data.config You can get the current authorization rules use: Developers need to be based on the rules of authorization event.config \uff0cCombine data.user \uff0cAccording to your own needs\uff0cAfter screening\uff0cReturn to SORT with permissions_ID array","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#abstract-method","text":"get_auth_result(event, **kwargs)","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension","text":"Source code in arkid/core/extension/impower_rule.py class ImpowerRuleBaseExtension ( Extension ): TYPE = 'impower_rule' composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ImpowerRuleBaseExtension . TYPE def load ( self ): super () . load () self . listen_event ( core_event . GET_AUTH_RESULT , self . filter_auth_result ) def get_extensions ( self ): ''' \u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 ''' return Extension_Obj . active_objects . filter ( package = self . package , type = self . TYPE ) . all () def get_all_config ( self , tenant_id ): ''' \u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e ''' return TenantExtensionConfig . active_objects . filter ( tenant_id = tenant_id , extension__in = self . get_extensions () ) . all () def register_impower_rule_schema ( self , schema , impowerrule_type ): \"\"\" \u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Params: schema: schema impowerrule_type: \u6388\u6743\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + impowerrule_type ) self . register_composite_config_schema ( schema , impowerrule_type , exclude = [ 'extension' ]) def filter_auth_result ( self , event , ** kwargs ): ''' \u7b5b\u9009\u62bd\u8c61\u7ed3\u679c ''' tenant = event . tenant configs = self . get_all_config ( tenant . id ) data = event . data arr = data . get ( 'arr' , []) copy_arr = [ x for x in arr ] result_sort_ids = [] # \u6bcf\u4e00\u4e2a\u6388\u6743\u89c4\u5219\u914d\u7f6e\u5355\u72ec\u9a8c\u8bc1 for config in configs : data [ 'config' ] = config sort_ids = self . get_auth_result ( event , ** kwargs ) if sort_ids : result_sort_ids . extend ( sort_ids ) # \u5bf9\u4e8e\u6388\u6743\u7ed3\u679c\u8fdb\u884c\u5408\u5e76 for index , value in enumerate ( copy_arr ): if int ( value ) == 0 and index in result_sort_ids : copy_arr [ index ] = 1 return copy_arr @abstractmethod def get_auth_result ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: arr: sort_id\u6570\u7ec4 \"\"\" pass","title":"ImpowerRuleBaseExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/impower_rule.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.filter_auth_result","text":"\u7b5b\u9009\u62bd\u8c61\u7ed3\u679c Source code in arkid/core/extension/impower_rule.py def filter_auth_result ( self , event , ** kwargs ): ''' \u7b5b\u9009\u62bd\u8c61\u7ed3\u679c ''' tenant = event . tenant configs = self . get_all_config ( tenant . id ) data = event . data arr = data . get ( 'arr' , []) copy_arr = [ x for x in arr ] result_sort_ids = [] # \u6bcf\u4e00\u4e2a\u6388\u6743\u89c4\u5219\u914d\u7f6e\u5355\u72ec\u9a8c\u8bc1 for config in configs : data [ 'config' ] = config sort_ids = self . get_auth_result ( event , ** kwargs ) if sort_ids : result_sort_ids . extend ( sort_ids ) # \u5bf9\u4e8e\u6388\u6743\u7ed3\u679c\u8fdb\u884c\u5408\u5e76 for index , value in enumerate ( copy_arr ): if int ( value ) == 0 and index in result_sort_ids : copy_arr [ index ] = 1 return copy_arr","title":"filter_auth_result()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.get_all_config","text":"\u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e Source code in arkid/core/extension/impower_rule.py def get_all_config ( self , tenant_id ): ''' \u83b7\u53d6\u6240\u6709\u7684\u914d\u7f6e ''' return TenantExtensionConfig . active_objects . filter ( tenant_id = tenant_id , extension__in = self . get_extensions () ) . all ()","title":"get_all_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.get_auth_result","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description arr sort_id\u6570\u7ec4 Source code in arkid/core/extension/impower_rule.py @abstractmethod def get_auth_result ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u6743\u9650\u7684\u9274\u5b9a\u7ed3\u679c Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user: \u7528\u6237 app: \u5e94\u7528(\u5982\u679capp\u662fNone\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5e94\u7528\u662farkid) arr: \u6743\u9650\u7ed3\u679c\u6570\u7ec4(\u8fd9\u4e2a\u662f\u5df2\u7ecf\u8d4b\u503c\u8fc7\u5206\u7ec4\u6743\u9650\u7684\u6570\u636e\uff0c\u6709\u6743\u9650\u662f1\uff0c\u6ca1\u6743\u9650\u662f0) config: \u5e94\u7528\u7684\u6388\u6743\u89c4\u5219 tenant: \u79df\u6237 kwargs: \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 Return: arr: sort_id\u6570\u7ec4 \"\"\" pass","title":"get_auth_result()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.get_extensions","text":"\u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 Source code in arkid/core/extension/impower_rule.py def get_extensions ( self ): ''' \u83b7\u53d6\u5f53\u524d\u7c7b\u578b\u6240\u6709\u7684\u63d2\u4ef6 ''' return Extension_Obj . active_objects . filter ( package = self . package , type = self . TYPE ) . all ()","title":"get_extensions()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/impower_rule.py def load ( self ): super () . load () self . listen_event ( core_event . GET_AUTH_RESULT , self . filter_auth_result )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#arkid.core.extension.impower_rule.ImpowerRuleBaseExtension.register_impower_rule_schema","text":"\u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Parameters: Name Type Description Default schema schema required impowerrule_type \u6388\u6743\u89c4\u5219\u7c7b\u578b required Source code in arkid/core/extension/impower_rule.py def register_impower_rule_schema ( self , schema , impowerrule_type ): \"\"\" \u6ce8\u518c\u6388\u6743\u89c4\u5219\u7684schema Params: schema: schema impowerrule_type: \u6388\u6743\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + impowerrule_type ) self . register_composite_config_schema ( schema , impowerrule_type , exclude = [ 'extension' ])","title":"register_impower_rule_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension","text":"Source code in extension_root/com_longgui_impower_rule/__init__.py class ImpowerRuleExtension ( ImpowerRuleBaseExtension ): def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page ) def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids","title":"ImpowerRuleExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.get_auth_result","text":"\u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c Source code in extension_root/com_longgui_impower_rule/__init__.py def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids","title":"get_auth_result()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_impower_rule/__init__.py def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AuthorizationRules/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.load_front_page","text":"\u6ce8\u518c\u524d\u7aef\u9875\u9762 Source code in extension_root/com_longgui_impower_rule/__init__.py def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page )","title":"load_front_page()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/","text":"Features # Display the ARKID login page (password\u3001Before mobile phone)\uff0cThe system will traverse the automatic login plug -in (such as Keberos) authenticate method\uff0cIf one of the plug -in certification is successful\uff0cThen you can log in immediately Implementation # Call the ARKID system before entering the ARKID system /api/v1/login/ interface\uff0cIn the processing function of this interface\uff0cURL Query Params and /api/v1/login_process/ Parameter rendering templates/login_enter.html Template returns to the browser\uff0cJavaScript code in the browser execution template\uff0c Judge URL Query Parmas Whether there is token\uff0c If there is\uff0cSave in LocalStorage\uff0cif there is not\uff0cTake the token in LocalStorage\uff0cAt last\uff0cReset to the browser to /api/v1/login_process And bring token and url Query Parmas as query parameters Enter /api/v1/login_process/ After the processing function of the interface\uff0cWill determine whether there is token in the query parameter\uff0cIf there is token\uff0cAfter verifying Token is valid\uff0cIf there is NEXT in the query parameter, Direct redirection to the URL pointed by Next\uff0cIf not, redirect to the front -end login page\uff1bIf there is no token or token, it will fail\uff0c Then distribute auto_Login event\uff0cAnd traverse the event distribution back result\uff0cIf one of the automatic authentication plug -in certification is successful and returned to User\uff0cThen refresh the user token\uff0cBring token redirection /api/v1/login/ \uff0cIf all automatic authentication plugins have failed to authenticate\uff0cReset to the front -end login page Abstract method # authenticate Hint authenticate The certification should be returned to User, If it fails to return to None\uff0cIf similar Kerberos certification, you need to enter Authenticate twice\uff0cThe first time you should enter should be returned to httpResponse The status code is 401 Foundation definition # arkid.core.extension.auto_auth.AutoAuthExtension ( Extension ) # Source code in arkid/core/extension/auto_auth.py class AutoAuthExtension ( Extension ): TYPE = \"auto_auth\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AutoAuthExtension . TYPE def load ( self ): self . listen_event ( core_event . AUTO_LOGIN , self . authenticate ) super () . load () @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 Returns: Union[arkid.core.models.User, django.http.HttpResponse, None]: \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c \"\"\" pass def register_auto_auth_schema ( self , schema , auto_auth_type ): self . register_config_schema ( schema , self . package + '_' + auto_auth_type ) self . register_composite_config_schema ( schema , auto_auth_type , exclude = [ 'extension' ] ) composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auto_auth.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 authenticate ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Union[arkid.core.models.User, django.http.HttpResponse, None] \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c Source code in arkid/core/extension/auto_auth.py @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 Returns: Union[arkid.core.models.User, django.http.HttpResponse, None]: \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c \"\"\" pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auto_auth.py def load ( self ): self . listen_event ( core_event . AUTO_LOGIN , self . authenticate ) super () . load ()","title":"AutomaticAuthentication"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#features","text":"Display the ARKID login page (password\u3001Before mobile phone)\uff0cThe system will traverse the automatic login plug -in (such as Keberos) authenticate method\uff0cIf one of the plug -in certification is successful\uff0cThen you can log in immediately","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#implementation","text":"Call the ARKID system before entering the ARKID system /api/v1/login/ interface\uff0cIn the processing function of this interface\uff0cURL Query Params and /api/v1/login_process/ Parameter rendering templates/login_enter.html Template returns to the browser\uff0cJavaScript code in the browser execution template\uff0c Judge URL Query Parmas Whether there is token\uff0c If there is\uff0cSave in LocalStorage\uff0cif there is not\uff0cTake the token in LocalStorage\uff0cAt last\uff0cReset to the browser to /api/v1/login_process And bring token and url Query Parmas as query parameters Enter /api/v1/login_process/ After the processing function of the interface\uff0cWill determine whether there is token in the query parameter\uff0cIf there is token\uff0cAfter verifying Token is valid\uff0cIf there is NEXT in the query parameter, Direct redirection to the URL pointed by Next\uff0cIf not, redirect to the front -end login page\uff1bIf there is no token or token, it will fail\uff0c Then distribute auto_Login event\uff0cAnd traverse the event distribution back result\uff0cIf one of the automatic authentication plug -in certification is successful and returned to User\uff0cThen refresh the user token\uff0cBring token redirection /api/v1/login/ \uff0cIf all automatic authentication plugins have failed to authenticate\uff0cReset to the front -end login page","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#abstract-method","text":"authenticate Hint authenticate The certification should be returned to User, If it fails to return to None\uff0cIf similar Kerberos certification, you need to enter Authenticate twice\uff0cThe first time you should enter should be returned to httpResponse The status code is 401","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension","text":"Source code in arkid/core/extension/auto_auth.py class AutoAuthExtension ( Extension ): TYPE = \"auto_auth\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AutoAuthExtension . TYPE def load ( self ): self . listen_event ( core_event . AUTO_LOGIN , self . authenticate ) super () . load () @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 Returns: Union[arkid.core.models.User, django.http.HttpResponse, None]: \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c \"\"\" pass def register_auto_auth_schema ( self , schema , auto_auth_type ): self . register_config_schema ( schema , self . package + '_' + auto_auth_type ) self . register_composite_config_schema ( schema , auto_auth_type , exclude = [ 'extension' ] )","title":"AutoAuthExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auto_auth.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.authenticate","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 required Returns: Type Description Union[arkid.core.models.User, django.http.HttpResponse, None] \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c Source code in arkid/core/extension/auto_auth.py @abstractmethod def authenticate ( self , event , ** kwargs ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: event (arkid.core.event.Event): \u81ea\u52a8\u8ba4\u8bc1\u4e8b\u4ef6 Returns: Union[arkid.core.models.User, django.http.HttpResponse, None]: \u81ea\u52a8\u8ba4\u8bc1\u8fd4\u56de\u7ed3\u679c \"\"\" pass","title":"authenticate()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/AutomaticAuthentication/#arkid.core.extension.auto_auth.AutoAuthExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auto_auth.py def load ( self ): self . listen_event ( core_event . AUTO_LOGIN , self . authenticate ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/","text":"Features # The cache plug -in provides the platform with cache function\uff0cThat is, developers introduce cache databases such as redis such as Redis and using cache databases and use them to complete cache transactions through cache plugins\u3002 Implementation # When developing cache plug -in\uff0cOnly inherit the cache plug -in base class and reload the GET/Set function\uff0cThe processing process is as follows\uff1a sequenceDiagram participant C as Platform core participant B as Cache plugin C->>B: Loading plug -in B->>C: Registered monitoring cache event rect rgb(191, 223, 255) C->>B: Send settings/Cache_SET/CACHE_GET) B->>C: Response and cache according to your own configuration\uff0cReturn result\uff08success/fail,retrieve data\uff09 end How to use # The example is as follows\uff1a from arkid.common import cache #Introduce platform cache cache . set ( tenant , key , value , expired ) # The parameter is in order\uff1aTenant\uff0cCache key, Cache Value, Expiration cache . get ( tenant , key ) #The parameter is in order\uff1aTenant\uff0cCache key Abstract function # get set Foundation definition # arkid.core.extension.cache.CacheExtension ( Extension ) # Source code in arkid/core/extension/cache.py class CacheExtension ( Extension ): TYPE = \"cache\" @property def type ( self ): return CacheExtension . TYPE def load ( self ): super () . load () self . listen_event ( CACHE_GET , self . event_cache_get ) self . listen_event ( CACHE_SET , self . event_cache_set ) def event_cache_get ( self , event , ** kwargs ): try : return self . get ( event . tenant , ** event . data ) except Exception as err : logger . error ( err ) def event_cache_set ( self , event , ** kwargs ): try : return self . set ( tenant = event . tenant , ** event . data ) except Exception as err : logger . error ( err ) @abstractmethod def get ( self , tenant , key : str , ** kwargs ): \"\"\"\u8bfb\u53d6 Args: tenant:\u79df\u6237 key: \u5b58\u50a8\u540d\u79f0 \"\"\" pass @abstractmethod def set ( self , tenant , key : str , value : any , ** kwargs ) -> bool : \"\"\"\u5b58\u50a8 Args: key (str): \u5b58\u50a8\u540d\u79f0 tenant (Tenant): \u79df\u6237 value:\u503c \"\"\" pass get ( self , tenant , key , ** kwargs ) # \u8bfb\u53d6 Parameters: Name Type Description Default tenant \u79df\u6237 required key str \u5b58\u50a8\u540d\u79f0 required Source code in arkid/core/extension/cache.py @abstractmethod def get ( self , tenant , key : str , ** kwargs ): \"\"\"\u8bfb\u53d6 Args: tenant:\u79df\u6237 key: \u5b58\u50a8\u540d\u79f0 \"\"\" pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/cache.py def load ( self ): super () . load () self . listen_event ( CACHE_GET , self . event_cache_get ) self . listen_event ( CACHE_SET , self . event_cache_set ) set ( self , tenant , key , value , ** kwargs ) # \u5b58\u50a8 Parameters: Name Type Description Default key str \u5b58\u50a8\u540d\u79f0 required tenant Tenant \u79df\u6237 required value <built-in function any> \u503c required Source code in arkid/core/extension/cache.py @abstractmethod def set ( self , tenant , key : str , value : any , ** kwargs ) -> bool : \"\"\"\u5b58\u50a8 Args: key (str): \u5b58\u50a8\u540d\u79f0 tenant (Tenant): \u79df\u6237 value:\u503c \"\"\" pass","title":"Cache"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#features","text":"The cache plug -in provides the platform with cache function\uff0cThat is, developers introduce cache databases such as redis such as Redis and using cache databases and use them to complete cache transactions through cache plugins\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#implementation","text":"When developing cache plug -in\uff0cOnly inherit the cache plug -in base class and reload the GET/Set function\uff0cThe processing process is as follows\uff1a sequenceDiagram participant C as Platform core participant B as Cache plugin C->>B: Loading plug -in B->>C: Registered monitoring cache event rect rgb(191, 223, 255) C->>B: Send settings/Cache_SET/CACHE_GET) B->>C: Response and cache according to your own configuration\uff0cReturn result\uff08success/fail,retrieve data\uff09 end","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#how-to-use","text":"The example is as follows\uff1a from arkid.common import cache #Introduce platform cache cache . set ( tenant , key , value , expired ) # The parameter is in order\uff1aTenant\uff0cCache key, Cache Value, Expiration cache . get ( tenant , key ) #The parameter is in order\uff1aTenant\uff0cCache key","title":"How to use"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#abstract-function","text":"get set","title":"Abstract function"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#arkid.core.extension.cache.CacheExtension","text":"Source code in arkid/core/extension/cache.py class CacheExtension ( Extension ): TYPE = \"cache\" @property def type ( self ): return CacheExtension . TYPE def load ( self ): super () . load () self . listen_event ( CACHE_GET , self . event_cache_get ) self . listen_event ( CACHE_SET , self . event_cache_set ) def event_cache_get ( self , event , ** kwargs ): try : return self . get ( event . tenant , ** event . data ) except Exception as err : logger . error ( err ) def event_cache_set ( self , event , ** kwargs ): try : return self . set ( tenant = event . tenant , ** event . data ) except Exception as err : logger . error ( err ) @abstractmethod def get ( self , tenant , key : str , ** kwargs ): \"\"\"\u8bfb\u53d6 Args: tenant:\u79df\u6237 key: \u5b58\u50a8\u540d\u79f0 \"\"\" pass @abstractmethod def set ( self , tenant , key : str , value : any , ** kwargs ) -> bool : \"\"\"\u5b58\u50a8 Args: key (str): \u5b58\u50a8\u540d\u79f0 tenant (Tenant): \u79df\u6237 value:\u503c \"\"\" pass","title":"CacheExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#arkid.core.extension.cache.CacheExtension.get","text":"\u8bfb\u53d6 Parameters: Name Type Description Default tenant \u79df\u6237 required key str \u5b58\u50a8\u540d\u79f0 required Source code in arkid/core/extension/cache.py @abstractmethod def get ( self , tenant , key : str , ** kwargs ): \"\"\"\u8bfb\u53d6 Args: tenant:\u79df\u6237 key: \u5b58\u50a8\u540d\u79f0 \"\"\" pass","title":"get()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#arkid.core.extension.cache.CacheExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/cache.py def load ( self ): super () . load () self . listen_event ( CACHE_GET , self . event_cache_get ) self . listen_event ( CACHE_SET , self . event_cache_set )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Cache/#arkid.core.extension.cache.CacheExtension.set","text":"\u5b58\u50a8 Parameters: Name Type Description Default key str \u5b58\u50a8\u540d\u79f0 required tenant Tenant \u79df\u6237 required value <built-in function any> \u503c required Source code in arkid/core/extension/cache.py @abstractmethod def set ( self , tenant , key : str , value : any , ** kwargs ) -> bool : \"\"\"\u5b58\u50a8 Args: key (str): \u5b58\u50a8\u540d\u79f0 tenant (Tenant): \u79df\u6237 value:\u503c \"\"\" pass","title":"set()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/","text":"Features # Certification rules are the expansion of a series of certification factors\uff0cOne or more authentication factors in series\uff0cImplement collaboration between certification factors under the specified conditions\uff0cTo complete the complex certification process Implementation # When developing certification rules plug -in\uff0cYou need to inherit the AuthruleExtension base class and re -load check_Rule abstraction method\uff0cSystem events and event mechanisms are connected in series authentication factors\uff0cThe basic process is as follows\uff1a sequenceDiagram participant U as Client participant C as Platform core participant B as Certification rules plug -in C->>B: Loading plug -in B->>C: Monitor Create_LOGIN_PAGE_Rules event U->>C: Request to get the login page C->>B: Trigger Create_LOGIN_PAGE_Rules event B->>C: Response event\uff0cTraversing all running configuration\uff0cWhether the verification passes the rules and returns the result C->>U: Rendering login page Abstract function # check_rule Foundation definition # arkid.core.extension.auth_rule.AuthRuleExtension ( Extension ) # Source code in arkid/core/extension/auth_rule.py class AuthRuleExtension ( Extension ): TYPE = \"auth_rule\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AuthRuleExtension . TYPE def load ( self ): super () . load () self . listen_events () def check_rules ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 \"\"\" for config in self . get_tenant_configs ( event . tenant ): self . check_rule ( event , config ) @abstractmethod def check_rule ( self , event , config ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 config (TenantExtensionConfig): \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def register_auth_rule_schema ( self , schema , auth_rule_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Args: schema (Schema): schema\u63cf\u8ff0 auth_rule_type (str): \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_rule_type ) self . register_composite_config_schema ( schema , auth_rule_type , exclude = [ 'extension' ]) def listen_events ( self ): \"\"\"\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . listen_event ( CREATE_LOGIN_PAGE_RULES , self . check_rules ) def rise_errorcode ( self , event , code : Enum ): core_event . remove_event_id ( event ) core_event . break_event_loop ( self . error ( code )) composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auth_rule.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 check_rule ( self , event , config ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in arkid/core/extension/auth_rule.py @abstractmethod def check_rule ( self , event , config ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 config (TenantExtensionConfig): \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass check_rules ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_rule.py def check_rules ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 \"\"\" for config in self . get_tenant_configs ( event . tenant ): self . check_rule ( event , config ) listen_events ( self ) # \u76d1\u542c\u4e8b\u4ef6 Source code in arkid/core/extension/auth_rule.py def listen_events ( self ): \"\"\"\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . listen_event ( CREATE_LOGIN_PAGE_RULES , self . check_rules ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auth_rule.py def load ( self ): super () . load () self . listen_events () register_auth_rule_schema ( self , schema , auth_rule_type ) # \u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Parameters: Name Type Description Default schema Schema schema\u63cf\u8ff0 required auth_rule_type str \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b required Source code in arkid/core/extension/auth_rule.py def register_auth_rule_schema ( self , schema , auth_rule_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Args: schema (Schema): schema\u63cf\u8ff0 auth_rule_type (str): \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_rule_type ) self . register_composite_config_schema ( schema , auth_rule_type , exclude = [ 'extension' ]) Exemplary # extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension ( AuthRuleExtension ) # Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py class AuthRuleRetryTimesExtension ( AuthRuleExtension ): def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None def auth_success ( self , event , ** kwargs ): # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ] . id . hex : host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = 1 cache . set ( event . tenant , key , try_times , expired = config . config . get ( \"expired\" , 30 ) * 60 ) self . clear_refresh_status ( event . tenant , host , config . id . hex ) def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 ) def clear_refresh_status ( self , tenant , host , config_id ): cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 0 ) def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" ) auth_fail ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True before_auth ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6 required Returns: Type Description tuple(bool,dict) \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None check_refresh_status ( self , tenant , host , config_id ) # \u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description bool \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) check_retry_times ( self , tenant , host , config_id , limited = 3 ) # \u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required limited int \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. 3 Returns: Type Description bool \u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited check_rule ( self , event , config ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) create_extension_config_schema ( self ) # \u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" ) gen_key ( self , host , config_id ) # \u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" gen_refresh_key ( self , host , config_id ) # \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) set_refresh_status ( self , tenant , host , config_id ) # \u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 )","title":"CertificationRules"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#features","text":"Certification rules are the expansion of a series of certification factors\uff0cOne or more authentication factors in series\uff0cImplement collaboration between certification factors under the specified conditions\uff0cTo complete the complex certification process","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#implementation","text":"When developing certification rules plug -in\uff0cYou need to inherit the AuthruleExtension base class and re -load check_Rule abstraction method\uff0cSystem events and event mechanisms are connected in series authentication factors\uff0cThe basic process is as follows\uff1a sequenceDiagram participant U as Client participant C as Platform core participant B as Certification rules plug -in C->>B: Loading plug -in B->>C: Monitor Create_LOGIN_PAGE_Rules event U->>C: Request to get the login page C->>B: Trigger Create_LOGIN_PAGE_Rules event B->>C: Response event\uff0cTraversing all running configuration\uff0cWhether the verification passes the rules and returns the result C->>U: Rendering login page","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#abstract-function","text":"check_rule","title":"Abstract function"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension","text":"Source code in arkid/core/extension/auth_rule.py class AuthRuleExtension ( Extension ): TYPE = \"auth_rule\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return AuthRuleExtension . TYPE def load ( self ): super () . load () self . listen_events () def check_rules ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 \"\"\" for config in self . get_tenant_configs ( event . tenant ): self . check_rule ( event , config ) @abstractmethod def check_rule ( self , event , config ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 config (TenantExtensionConfig): \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def register_auth_rule_schema ( self , schema , auth_rule_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Args: schema (Schema): schema\u63cf\u8ff0 auth_rule_type (str): \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_rule_type ) self . register_composite_config_schema ( schema , auth_rule_type , exclude = [ 'extension' ]) def listen_events ( self ): \"\"\"\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . listen_event ( CREATE_LOGIN_PAGE_RULES , self . check_rules ) def rise_errorcode ( self , event , code : Enum ): core_event . remove_event_id ( event ) core_event . break_event_loop ( self . error ( code ))","title":"AuthRuleExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/auth_rule.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.check_rule","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in arkid/core/extension/auth_rule.py @abstractmethod def check_rule ( self , event , config ): \"\"\"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 config (TenantExtensionConfig): \u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass","title":"check_rule()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.check_rules","text":"\u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required Source code in arkid/core/extension/auth_rule.py def check_rules ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6: CREATE_LOGIN_PAGE_RULES\uff0c\u904d\u5386\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u6821\u9a8c\u662f\u5426\u901a\u8fc7\u89c4\u5219\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c Args: event (Event): CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 \"\"\" for config in self . get_tenant_configs ( event . tenant ): self . check_rule ( event , config )","title":"check_rules()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.listen_events","text":"\u76d1\u542c\u4e8b\u4ef6 Source code in arkid/core/extension/auth_rule.py def listen_events ( self ): \"\"\"\u76d1\u542c\u4e8b\u4ef6 \"\"\" self . listen_event ( CREATE_LOGIN_PAGE_RULES , self . check_rules )","title":"listen_events()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/auth_rule.py def load ( self ): super () . load () self . listen_events ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#arkid.core.extension.auth_rule.AuthRuleExtension.register_auth_rule_schema","text":"\u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Parameters: Name Type Description Default schema Schema schema\u63cf\u8ff0 required auth_rule_type str \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b required Source code in arkid/core/extension/auth_rule.py def register_auth_rule_schema ( self , schema , auth_rule_type ): \"\"\"\u6ce8\u518c\u8ba4\u8bc1\u89c4\u5219\u8fd0\u884c\u65f6schema Args: schema (Schema): schema\u63cf\u8ff0 auth_rule_type (str): \u8ba4\u8bc1\u89c4\u5219\u7c7b\u578b \"\"\" self . register_config_schema ( schema , self . package + '_' + auth_rule_type ) self . register_composite_config_schema ( schema , auth_rule_type , exclude = [ 'extension' ])","title":"register_auth_rule_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension","text":"Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py class AuthRuleRetryTimesExtension ( AuthRuleExtension ): def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None def auth_success ( self , event , ** kwargs ): # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ] . id . hex : host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = 1 cache . set ( event . tenant , key , try_times , expired = config . config . get ( \"expired\" , 30 ) * 60 ) self . clear_refresh_status ( event . tenant , host , config . id . hex ) def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 ) def clear_refresh_status ( self , tenant , host , config_id ): cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 0 ) def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" )","title":"AuthRuleRetryTimesExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.auth_fail","text":"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True","title":"auth_fail()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.before_auth","text":"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6 required Returns: Type Description tuple(bool,dict) \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None","title":"before_auth()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_refresh_status","text":"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description bool \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id )))","title":"check_refresh_status()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_retry_times","text":"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required limited int \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. 3 Returns: Type Description bool \u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited","title":"check_retry_times()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_rule","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) )","title":"check_rule()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.create_extension_config_schema","text":"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" )","title":"create_extension_config_schema()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.gen_key","text":"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \"","title":"gen_key()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.gen_refresh_key","text":"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \"","title":"gen_refresh_key()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/CertificationRules/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.set_refresh_status","text":"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 )","title":"set_refresh_status()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataAnalysisSystem/","text":"","title":"DataAnalysisSystem"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/","text":"data synchronization # User data synchronization # Features # User data synchronization is mainly to synchronize users and organizations between different systems through the SCIM protocol\uff0cUse server/Client mode\uff0cServer offers a user that meets the SCIM standard protocol\uff0cGroup and other interfaces\uff0cThe client side pulls the interface provided by the server through the timing task to obtain the data Classic scenes: ADSynchronization with Arkid HRSynchronization with Arkid HRSynchronization with AD SCIMAgreement reference RFC7643 - SCIM: Core Schema RFC7644 - SCIM: Protocol RFC7642 - SCIM: Definitions, Overview, Concepts, and Requirements Implementation # first\uff0cThe implementation of the Server side SCIM protocol is implemented in the code Scim_server Module\u3002 in, Three important categories are: scim_server.views.view_template.ViewTemplate Subclass Scim_server.views.users_view.UsersViewTemplate Processing user -related addition, deletion, change check Subclass Scim_server.views.groups_view.GroupsViewTemplate Treatment of related additions, deletion, change inspection scim_server.service.provider_adapter_template.ProviderAdapterTemplate scim_server.service.provider_base.ProviderBase SCIM ServerThe approximate process of processing the SCIM request is\uff0c ViewTemplate Accept request\uff0cConvert the request parameter to an object to pass it to ProviderAdapterTemplate \uff0c ProviderAdapterTemplate Verification request parameter legality\uff0cAnd further assemble the request object\uff0cFinal call ProviderBase The method of processing the request object\u3002 ScimSyncArkIDExtension Plug -in base class inheritance ProviderBase \uff0cCreated when plug -in load UsersView and GroupsView Separate inheritance UsersViewTemplate and GroupsViewTemplate \uff0c And register the corresponding users_url and groups_url\uff0cAt this point, you only need ProviderBase Inherited query_users , query_groups SCIM can be implemented by other methods Server\u3002 Create SCIM Call during the server configuration api.views.Scim_sync.create_Scim_sync Interface processing function\uff0cBack to USERS at the same time_url and groups_URL to pick data for the client side ClientPass through django_celery_Beat creates timing tasks\uff0cFirst call api.views.Scim_sync.create_Scim_sync The interface processing function creates the configuration of the client mode\uff0cThe configuration parameters need to specify sciM Server\uff0cUsed to from scim Use provided by the server_url and groups_URL pull data\uff0c Determine in the processing function to determine if it is the configuration of the CLIENT mode\uff0cCreate a regular task\uff0cPass the configuration of the client mode to Celery asynchronous task\uff1a arkid.core.tasks.sync , This task will eventually call [Sync] in the plug -in base class (#arkid.core.extension.Scim_sync.ScimSyncExtension.Sync) method\uff0c sync Methods first will be adjusted get_groups_users method to get Users and Groups, Then call SYNC_groups Sync_users to implement synchronous logic\uff0cThe specific plug -in needs to cover this two methods to achieve the synchronization logic of the client side Abstract method # ServerModel abstraction method # create_user create_group delete_user delete_group replace_user replace_group retrieve_user retrieve_group update_user update_group query_users query_groups ClientModel abstraction method # sync_groups sync_users Foundation definition # arkid.core.extension.scim_sync.ScimSyncExtension ( Extension , ProviderBase ) # Source code in arkid/core/extension/scim_sync.py class ScimSyncExtension ( Extension , ProviderBase ): TYPE = \"scim_sync\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ScimSyncExtension . TYPE def load ( self ): class UsersView ( UsersViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) class GroupsView ( GroupsViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) scim_server_urls = [ re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Users(?:/(?P<uuid>[^/]+))?$' , UsersView . as_view (), name = f ' { self . pname } _scim_users' , ), # re_path(r'^Groups/.search$', views.GroupSearchView.as_view(), name='groups-search'), re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Groups(?:/(?P<uuid>[^/]+))?$' , GroupsView . as_view (), name = f ' { self . pname } _scim_groups' , ), ] self . register_routers ( scim_server_urls , True ) super () . load () def register_scim_sync_schema ( self , sync_type , client_schema , server_schema ): schema = create_extension_schema_by_package ( self . package , fields = [ ( \"__root__\" , Union [( client_schema , server_schema )], Field ( discriminator = \"mode\" ), ) ], base_schema = RootSchema , ) self . register_config_schema ( schema , self . package + '_' + sync_type ) self . register_composite_config_schema ( schema , sync_type , exclude = [ 'extension' ]) def sync ( self , config , sync_log ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( f \"============= Sync Start With Config: { config } / { config . config } ================\" ) groups , users = self . get_groups_users ( config ) if not groups or not users : return self . sync_groups ( groups , config , sync_log ) self . sync_users ( users , config , sync_log ) def get_data ( self , url , token ): logger . info ( f \"Getting data from { url } \" ) headers = { \"Authorization\" : f \"jwt { token } \" } r = requests . get ( url , headers = headers ) if r . status_code == 200 : return r . json () return {} def get_groups_users ( self , config ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" sync_server_id = config . config . get ( \"sync_server\" , {}) . get ( \"id\" ) server_config = TenantExtensionConfig . active_objects . filter ( id = sync_server_id ) . first () if not server_config : logger . error ( f \"No scim sync server config found: { sync_server_id } \" ) return None , None group_url = server_config . config [ \"group_url\" ] user_url = server_config . config [ \"user_url\" ] token = server_config . config [ \"token\" ] groups = self . get_data ( group_url , token ) . get ( \"Resources\" ) users = self . get_data ( user_url , token ) . get ( \"Resources\" ) return groups , users @abstractmethod def sync_groups ( self , groups , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass @abstractmethod def sync_users ( self , users , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass def get_current_config ( self , event ): config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id ) def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name = name , type = type ) if config [ \"mode\" ] == \"server\" : server_host = get_app_config () . get_host () user_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_users' , args = [ tenant . id , config_created . id ], ) group_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_groups' , args = [ tenant . id , config_created . id ], ) config [ \"group_url\" ] = group_url config [ \"user_url\" ] = user_url # \u751f\u6210\u7528\u4e8e\u8ba4\u8bc1\u7684token\u548csecret secret = uuid . uuid4 () . hex config [ \"secret\" ] = secret body = { \"sub\" : config_created . id . hex } config [ \"token\" ] = jwt . encode ( body , secret , algorithm = \"HS256\" ) config_created . config = config config_created . save () return config_created @abstractmethod def create_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def create_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def delete_user ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7528\u6237ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def delete_group ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7ec4\u7ec7ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def replace_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def replace_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def retrieve_user ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def retrieve_group ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def update_user ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def update_group ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" pass @abstractmethod def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" pass composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/scim_sync.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 create_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def create_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/scim_sync.py def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name = name , type = type ) if config [ \"mode\" ] == \"server\" : server_host = get_app_config () . get_host () user_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_users' , args = [ tenant . id , config_created . id ], ) group_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_groups' , args = [ tenant . id , config_created . id ], ) config [ \"group_url\" ] = group_url config [ \"user_url\" ] = user_url # \u751f\u6210\u7528\u4e8e\u8ba4\u8bc1\u7684token\u548csecret secret = uuid . uuid4 () . hex config [ \"secret\" ] = secret body = { \"sub\" : config_created . id . hex } config [ \"token\" ] = jwt . encode ( body , secret , algorithm = \"HS256\" ) config_created . config = config config_created . save () return config_created create_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def create_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () delete_group ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def delete_group ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7ec4\u7ec7ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () delete_user ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def delete_user ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7528\u6237ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () get_groups_users ( self , config ) # Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py def get_groups_users ( self , config ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" sync_server_id = config . config . get ( \"sync_server\" , {}) . get ( \"id\" ) server_config = TenantExtensionConfig . active_objects . filter ( id = sync_server_id ) . first () if not server_config : logger . error ( f \"No scim sync server config found: { sync_server_id } \" ) return None , None group_url = server_config . config [ \"group_url\" ] user_url = server_config . config [ \"user_url\" ] token = server_config . config [ \"token\" ] groups = self . get_data ( group_url , token ) . get ( \"Resources\" ) users = self . get_data ( user_url , token ) . get ( \"Resources\" ) return groups , users load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/scim_sync.py def load ( self ): class UsersView ( UsersViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) class GroupsView ( GroupsViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) scim_server_urls = [ re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Users(?:/(?P<uuid>[^/]+))?$' , UsersView . as_view (), name = f ' { self . pname } _scim_users' , ), # re_path(r'^Groups/.search$', views.GroupSearchView.as_view(), name='groups-search'), re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Groups(?:/(?P<uuid>[^/]+))?$' , GroupsView . as_view (), name = f ' { self . pname } _scim_groups' , ), ] self . register_routers ( scim_server_urls , True ) super () . load () query_groups ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in arkid/core/extension/scim_sync.py @abstractmethod def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" pass query_users ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in arkid/core/extension/scim_sync.py @abstractmethod def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" pass replace_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def replace_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () replace_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def replace_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () retrieve_group ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def retrieve_group ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () retrieve_user ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def retrieve_user ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () sync ( self , config , sync_log ) # Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py def sync ( self , config , sync_log ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( f \"============= Sync Start With Config: { config } / { config . config } ================\" ) groups , users = self . get_groups_users ( config ) if not groups or not users : return self . sync_groups ( groups , config , sync_log ) self . sync_users ( users , config , sync_log ) sync_groups ( self , groups , config , sync_log ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py @abstractmethod def sync_groups ( self , groups , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass sync_users ( self , users , config , sync_log ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py @abstractmethod def sync_users ( self , users , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass update_group ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def update_group ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () update_user ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def update_user ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () Exemplary # extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension ( ScimSyncExtension ) # Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py class ScimSyncArkIDExtension ( ScimSyncExtension ): def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () def _get_arkid_user_attrs ( self , user ): active = user . get ( \"active\" ) if active is None : active = True return { \"username\" : user . get ( \"userName\" , \"\" ), \"is_active\" : active , \"is_del\" : False , } def _get_arkid_user ( self , scim_user , tenant , sync_log ): scim_external_id = scim_user [ \"id\" ] username = scim_user [ \"userName\" ] arkid_user_attrs = self . _get_arkid_user_attrs ( scim_user ) user_lookup = { \"scim_external_id\" : scim_external_id , \"username\" : username , \"tenant\" : tenant , } # arkid_user, _ = User.objects.update_or_create( # defaults=arkid_user_attrs, **user_lookup # ) arkid_user = User . objects . filter ( ** user_lookup ) . first () if not arkid_user : user_lookup . update ( arkid_user_attrs ) arkid_user = User . objects . create ( ** user_lookup ) sync_log . users_created += 1 tenant . users . add ( arkid_user ) # \u66f4\u65b0arkid_user\u6240\u5c5e\u7684group arkid_user . usergroup_set . clear () for scim_group in scim_user . get ( \"groups\" , []): scim_group_id = scim_group . get ( \"value\" ) arkid_group = self . scim_arkid_group_map . get ( scim_group_id ) if arkid_group : arkid_user . usergroup_set . add ( arkid_group ) # arkid_user.save() return arkid_user def _get_arkid_group ( self , group , scim_arkid_map , tenant , sync_log ): scim_external_id = group [ \"id\" ] if \"id\" in group else group [ \"value\" ] if scim_external_id not in scim_arkid_map : group_lookup = { \"scim_external_id\" : scim_external_id , \"tenant\" : tenant } arkid_group = UserGroup . objects . filter ( ** group_lookup ) . first () if not arkid_group : arkid_group = UserGroup . objects . create ( ** group_lookup ) sync_log . groups_created += 1 else : arkid_group . is_del = False arkid_group . is_active = True scim_arkid_map [ scim_external_id ] = arkid_group return arkid_group else : return scim_arkid_map [ scim_external_id ] def _sync_group_attr ( self , arkid_group , scim_group ): arkid_group . name = scim_group . get ( \"displayName\" ) arkid_group . save () def delete_group_from_root ( self , root ): logger . info ( f \"Delete Group { root . name } Start\" ) children = root . children . all () if not children : root . delete () logger . info ( f \"delete group { root . name } success\" ) return for item in children : self . delete_group_from_root ( item ) root . delete () logger . info ( f \"delete group { root . name } success\" ) def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() def _get_scim_user ( self , arkid_user ): attr_map = { \"id\" : \"id\" , \"username\" : \"userName\" , \"is_active\" : \"active\" } scim_user = Core2EnterpriseUser ( userName = '' , groups = []) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_user , arkid_attr ) scim_path = Path . create ( scim_attr ) if ( scim_path . schema_identifier and scim_path . schema_identifier == SchemaIdentifiers . Core2EnterpriseUser ): compose_enterprise_extension ( scim_user , scim_path , value ) else : compose_core2_user ( scim_user , scim_path , value ) # \u751f\u6210\u7528\u6237\u6240\u5728\u7684\u7ec4 parent_groups = arkid_user . usergroup_set . filter ( is_del = 0 ) for grp in parent_groups : scim_group = ScimUserGroup () scim_group . value = grp . id scim_group . display = grp . name scim_user . groups . append ( scim_group ) return scim_user def _get_scim_group ( self , arkid_group ): members = UserGroup . valid_objects . filter ( parent = arkid_group ) attr_map = { \"id\" : \"id\" , \"name\" : \"displayName\" } scim_group = Core2Group ( displayName = '' ) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_group , arkid_attr ) scim_path = Path . create ( scim_attr ) compose_core2_group ( scim_group , scim_path , value ) for item in members : member = Member () member . value = item . id scim_group . members . append ( member ) return scim_group def _get_all_scim_users ( self , tenant ): scim_users = [] arkid_users = User . valid_objects . filter ( tenant = tenant ) for arkid_user in arkid_users : scim_user = self . _get_scim_user ( arkid_user ) scim_users . append ( scim_user ) return scim_users def _get_all_scim_groups ( self , tenant ): scim_groups = [] arkid_groups = UserGroup . valid_objects . filter ( tenant = tenant ) for arkid_group in arkid_groups : scim_group = self . _get_scim_group ( arkid_group ) scim_groups . append ( scim_group ) return scim_groups def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException () def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException () create_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () create_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () delete_group ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () delete_user ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () query_groups ( self , request , parameters , correlation_identifier ) # \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups query_users ( self , request , parameters , correlation_identifier ) # \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users replace_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () replace_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () retrieve_group ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () retrieve_user ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () sync_groups ( self , groups , config , sync_log ) # \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count sync_users ( self , users , config , sync_log ) # \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() update_group ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException () update_user ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException () Permanent data synchronization #","title":"data synchronization"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#data-synchronization","text":"","title":"data synchronization"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#user-data-synchronization","text":"","title":"User data synchronization"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#features","text":"User data synchronization is mainly to synchronize users and organizations between different systems through the SCIM protocol\uff0cUse server/Client mode\uff0cServer offers a user that meets the SCIM standard protocol\uff0cGroup and other interfaces\uff0cThe client side pulls the interface provided by the server through the timing task to obtain the data Classic scenes: ADSynchronization with Arkid HRSynchronization with Arkid HRSynchronization with AD SCIMAgreement reference RFC7643 - SCIM: Core Schema RFC7644 - SCIM: Protocol RFC7642 - SCIM: Definitions, Overview, Concepts, and Requirements","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#implementation","text":"first\uff0cThe implementation of the Server side SCIM protocol is implemented in the code Scim_server Module\u3002 in, Three important categories are: scim_server.views.view_template.ViewTemplate Subclass Scim_server.views.users_view.UsersViewTemplate Processing user -related addition, deletion, change check Subclass Scim_server.views.groups_view.GroupsViewTemplate Treatment of related additions, deletion, change inspection scim_server.service.provider_adapter_template.ProviderAdapterTemplate scim_server.service.provider_base.ProviderBase SCIM ServerThe approximate process of processing the SCIM request is\uff0c ViewTemplate Accept request\uff0cConvert the request parameter to an object to pass it to ProviderAdapterTemplate \uff0c ProviderAdapterTemplate Verification request parameter legality\uff0cAnd further assemble the request object\uff0cFinal call ProviderBase The method of processing the request object\u3002 ScimSyncArkIDExtension Plug -in base class inheritance ProviderBase \uff0cCreated when plug -in load UsersView and GroupsView Separate inheritance UsersViewTemplate and GroupsViewTemplate \uff0c And register the corresponding users_url and groups_url\uff0cAt this point, you only need ProviderBase Inherited query_users , query_groups SCIM can be implemented by other methods Server\u3002 Create SCIM Call during the server configuration api.views.Scim_sync.create_Scim_sync Interface processing function\uff0cBack to USERS at the same time_url and groups_URL to pick data for the client side ClientPass through django_celery_Beat creates timing tasks\uff0cFirst call api.views.Scim_sync.create_Scim_sync The interface processing function creates the configuration of the client mode\uff0cThe configuration parameters need to specify sciM Server\uff0cUsed to from scim Use provided by the server_url and groups_URL pull data\uff0c Determine in the processing function to determine if it is the configuration of the CLIENT mode\uff0cCreate a regular task\uff0cPass the configuration of the client mode to Celery asynchronous task\uff1a arkid.core.tasks.sync , This task will eventually call [Sync] in the plug -in base class (#arkid.core.extension.Scim_sync.ScimSyncExtension.Sync) method\uff0c sync Methods first will be adjusted get_groups_users method to get Users and Groups, Then call SYNC_groups Sync_users to implement synchronous logic\uff0cThe specific plug -in needs to cover this two methods to achieve the synchronization logic of the client side","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#abstract-method","text":"","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#servermodel-abstraction-method","text":"create_user create_group delete_user delete_group replace_user replace_group retrieve_user retrieve_group update_user update_group query_users query_groups","title":"ServerModel abstraction method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#clientmodel-abstraction-method","text":"sync_groups sync_users","title":"ClientModel abstraction method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension","text":"Source code in arkid/core/extension/scim_sync.py class ScimSyncExtension ( Extension , ProviderBase ): TYPE = \"scim_sync\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ScimSyncExtension . TYPE def load ( self ): class UsersView ( UsersViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) class GroupsView ( GroupsViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) scim_server_urls = [ re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Users(?:/(?P<uuid>[^/]+))?$' , UsersView . as_view (), name = f ' { self . pname } _scim_users' , ), # re_path(r'^Groups/.search$', views.GroupSearchView.as_view(), name='groups-search'), re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Groups(?:/(?P<uuid>[^/]+))?$' , GroupsView . as_view (), name = f ' { self . pname } _scim_groups' , ), ] self . register_routers ( scim_server_urls , True ) super () . load () def register_scim_sync_schema ( self , sync_type , client_schema , server_schema ): schema = create_extension_schema_by_package ( self . package , fields = [ ( \"__root__\" , Union [( client_schema , server_schema )], Field ( discriminator = \"mode\" ), ) ], base_schema = RootSchema , ) self . register_config_schema ( schema , self . package + '_' + sync_type ) self . register_composite_config_schema ( schema , sync_type , exclude = [ 'extension' ]) def sync ( self , config , sync_log ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( f \"============= Sync Start With Config: { config } / { config . config } ================\" ) groups , users = self . get_groups_users ( config ) if not groups or not users : return self . sync_groups ( groups , config , sync_log ) self . sync_users ( users , config , sync_log ) def get_data ( self , url , token ): logger . info ( f \"Getting data from { url } \" ) headers = { \"Authorization\" : f \"jwt { token } \" } r = requests . get ( url , headers = headers ) if r . status_code == 200 : return r . json () return {} def get_groups_users ( self , config ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" sync_server_id = config . config . get ( \"sync_server\" , {}) . get ( \"id\" ) server_config = TenantExtensionConfig . active_objects . filter ( id = sync_server_id ) . first () if not server_config : logger . error ( f \"No scim sync server config found: { sync_server_id } \" ) return None , None group_url = server_config . config [ \"group_url\" ] user_url = server_config . config [ \"user_url\" ] token = server_config . config [ \"token\" ] groups = self . get_data ( group_url , token ) . get ( \"Resources\" ) users = self . get_data ( user_url , token ) . get ( \"Resources\" ) return groups , users @abstractmethod def sync_groups ( self , groups , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass @abstractmethod def sync_users ( self , users , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass def get_current_config ( self , event ): config_id = event . request . POST . get ( 'config_id' ) return self . get_config_by_id ( config_id ) def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name = name , type = type ) if config [ \"mode\" ] == \"server\" : server_host = get_app_config () . get_host () user_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_users' , args = [ tenant . id , config_created . id ], ) group_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_groups' , args = [ tenant . id , config_created . id ], ) config [ \"group_url\" ] = group_url config [ \"user_url\" ] = user_url # \u751f\u6210\u7528\u4e8e\u8ba4\u8bc1\u7684token\u548csecret secret = uuid . uuid4 () . hex config [ \"secret\" ] = secret body = { \"sub\" : config_created . id . hex } config [ \"token\" ] = jwt . encode ( body , secret , algorithm = \"HS256\" ) config_created . config = config config_created . save () return config_created @abstractmethod def create_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def create_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def delete_user ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7528\u6237ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def delete_group ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7ec4\u7ec7ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def replace_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def replace_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def retrieve_user ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def retrieve_group ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def update_user ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def update_group ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException () @abstractmethod def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" pass @abstractmethod def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"ScimSyncExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/scim_sync.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.create_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def create_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"create_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.create_tenant_config","text":"\u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/scim_sync.py def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name = name , type = type ) if config [ \"mode\" ] == \"server\" : server_host = get_app_config () . get_host () user_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_users' , args = [ tenant . id , config_created . id ], ) group_url = server_host + reverse ( f 'api: { self . pname } _tenant: { self . pname } _scim_groups' , args = [ tenant . id , config_created . id ], ) config [ \"group_url\" ] = group_url config [ \"user_url\" ] = user_url # \u751f\u6210\u7528\u4e8e\u8ba4\u8bc1\u7684token\u548csecret secret = uuid . uuid4 () . hex config [ \"secret\" ] = secret body = { \"sub\" : config_created . id . hex } config [ \"token\" ] = jwt . encode ( body , secret , algorithm = \"HS256\" ) config_created . config = config config_created . save () return config_created","title":"create_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.create_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def create_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"create_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.delete_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def delete_group ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7ec4\u7ec7ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"delete_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.delete_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def delete_user ( self , request , resource_identifier , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource_identifier (str): \u7528\u6237ID correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"delete_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.get_groups_users","text":"Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py def get_groups_users ( self , config ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" sync_server_id = config . config . get ( \"sync_server\" , {}) . get ( \"id\" ) server_config = TenantExtensionConfig . active_objects . filter ( id = sync_server_id ) . first () if not server_config : logger . error ( f \"No scim sync server config found: { sync_server_id } \" ) return None , None group_url = server_config . config [ \"group_url\" ] user_url = server_config . config [ \"user_url\" ] token = server_config . config [ \"token\" ] groups = self . get_data ( group_url , token ) . get ( \"Resources\" ) users = self . get_data ( user_url , token ) . get ( \"Resources\" ) return groups , users","title":"get_groups_users()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/scim_sync.py def load ( self ): class UsersView ( UsersViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) class GroupsView ( GroupsViewTemplate ): @property def provider ( this ): return self @method_decorator ( jwt_token_required ) def dispatch ( self , request , * args , ** kwargs ): return super () . dispatch ( request , * args , ** kwargs ) scim_server_urls = [ re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Users(?:/(?P<uuid>[^/]+))?$' , UsersView . as_view (), name = f ' { self . pname } _scim_users' , ), # re_path(r'^Groups/.search$', views.GroupSearchView.as_view(), name='groups-search'), re_path ( rf '^scim/ { self . pname } /(?P<config_id>[\\w-]+)/Groups(?:/(?P<uuid>[^/]+))?$' , GroupsView . as_view (), name = f ' { self . pname } _scim_groups' , ), ] self . register_routers ( scim_server_urls , True ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.query_groups","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in arkid/core/extension/scim_sync.py @abstractmethod def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"query_groups()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.query_users","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in arkid/core/extension/scim_sync.py @abstractmethod def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"query_users()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.replace_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def replace_group ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_group.Core2Group): SCIM\u7ec4\u7ec7\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"replace_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.replace_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def replace_user ( self , request , resource , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 resource (scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser): SCIM\u7528\u6237\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"replace_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.retrieve_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def retrieve_group ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"retrieve_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.retrieve_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def retrieve_user ( self , request , parameters , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters): Retrieve\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"retrieve_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.sync","text":"Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py def sync ( self , config , sync_log ): \"\"\" Args: config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( f \"============= Sync Start With Config: { config } / { config . config } ================\" ) groups , users = self . get_groups_users ( config ) if not groups or not users : return self . sync_groups ( groups , config , sync_log ) self . sync_users ( users , config , sync_log )","title":"sync()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.sync_groups","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py @abstractmethod def sync_groups ( self , groups , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass","title":"sync_groups()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.sync_users","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in arkid/core/extension/scim_sync.py @abstractmethod def sync_users ( self , users , config , sync_log ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" pass","title":"sync_users()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.update_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def update_group ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"update_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#arkid.core.extension.scim_sync.ScimSyncExtension.update_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in arkid/core/extension/scim_sync.py @abstractmethod def update_user ( self , request , patch , correlation_identifier ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HttpRequest): Django \u8bf7\u6c42 patch (scim_server.service.patch.Patch): Patch\u53c2\u6570\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 \"\"\" raise NotImplementedException ()","title":"update_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension","text":"Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py class ScimSyncArkIDExtension ( ScimSyncExtension ): def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () def _get_arkid_user_attrs ( self , user ): active = user . get ( \"active\" ) if active is None : active = True return { \"username\" : user . get ( \"userName\" , \"\" ), \"is_active\" : active , \"is_del\" : False , } def _get_arkid_user ( self , scim_user , tenant , sync_log ): scim_external_id = scim_user [ \"id\" ] username = scim_user [ \"userName\" ] arkid_user_attrs = self . _get_arkid_user_attrs ( scim_user ) user_lookup = { \"scim_external_id\" : scim_external_id , \"username\" : username , \"tenant\" : tenant , } # arkid_user, _ = User.objects.update_or_create( # defaults=arkid_user_attrs, **user_lookup # ) arkid_user = User . objects . filter ( ** user_lookup ) . first () if not arkid_user : user_lookup . update ( arkid_user_attrs ) arkid_user = User . objects . create ( ** user_lookup ) sync_log . users_created += 1 tenant . users . add ( arkid_user ) # \u66f4\u65b0arkid_user\u6240\u5c5e\u7684group arkid_user . usergroup_set . clear () for scim_group in scim_user . get ( \"groups\" , []): scim_group_id = scim_group . get ( \"value\" ) arkid_group = self . scim_arkid_group_map . get ( scim_group_id ) if arkid_group : arkid_user . usergroup_set . add ( arkid_group ) # arkid_user.save() return arkid_user def _get_arkid_group ( self , group , scim_arkid_map , tenant , sync_log ): scim_external_id = group [ \"id\" ] if \"id\" in group else group [ \"value\" ] if scim_external_id not in scim_arkid_map : group_lookup = { \"scim_external_id\" : scim_external_id , \"tenant\" : tenant } arkid_group = UserGroup . objects . filter ( ** group_lookup ) . first () if not arkid_group : arkid_group = UserGroup . objects . create ( ** group_lookup ) sync_log . groups_created += 1 else : arkid_group . is_del = False arkid_group . is_active = True scim_arkid_map [ scim_external_id ] = arkid_group return arkid_group else : return scim_arkid_map [ scim_external_id ] def _sync_group_attr ( self , arkid_group , scim_group ): arkid_group . name = scim_group . get ( \"displayName\" ) arkid_group . save () def delete_group_from_root ( self , root ): logger . info ( f \"Delete Group { root . name } Start\" ) children = root . children . all () if not children : root . delete () logger . info ( f \"delete group { root . name } success\" ) return for item in children : self . delete_group_from_root ( item ) root . delete () logger . info ( f \"delete group { root . name } success\" ) def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() def _get_scim_user ( self , arkid_user ): attr_map = { \"id\" : \"id\" , \"username\" : \"userName\" , \"is_active\" : \"active\" } scim_user = Core2EnterpriseUser ( userName = '' , groups = []) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_user , arkid_attr ) scim_path = Path . create ( scim_attr ) if ( scim_path . schema_identifier and scim_path . schema_identifier == SchemaIdentifiers . Core2EnterpriseUser ): compose_enterprise_extension ( scim_user , scim_path , value ) else : compose_core2_user ( scim_user , scim_path , value ) # \u751f\u6210\u7528\u6237\u6240\u5728\u7684\u7ec4 parent_groups = arkid_user . usergroup_set . filter ( is_del = 0 ) for grp in parent_groups : scim_group = ScimUserGroup () scim_group . value = grp . id scim_group . display = grp . name scim_user . groups . append ( scim_group ) return scim_user def _get_scim_group ( self , arkid_group ): members = UserGroup . valid_objects . filter ( parent = arkid_group ) attr_map = { \"id\" : \"id\" , \"name\" : \"displayName\" } scim_group = Core2Group ( displayName = '' ) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_group , arkid_attr ) scim_path = Path . create ( scim_attr ) compose_core2_group ( scim_group , scim_path , value ) for item in members : member = Member () member . value = item . id scim_group . members . append ( member ) return scim_group def _get_all_scim_users ( self , tenant ): scim_users = [] arkid_users = User . valid_objects . filter ( tenant = tenant ) for arkid_user in arkid_users : scim_user = self . _get_scim_user ( arkid_user ) scim_users . append ( scim_user ) return scim_users def _get_all_scim_groups ( self , tenant ): scim_groups = [] arkid_groups = UserGroup . valid_objects . filter ( tenant = tenant ) for arkid_group in arkid_groups : scim_group = self . _get_scim_group ( arkid_group ) scim_groups . append ( scim_group ) return scim_groups def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException () def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"ScimSyncArkIDExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.create_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"create_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.create_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"create_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.delete_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException ()","title":"delete_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.delete_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException ()","title":"delete_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.query_groups","text":"\u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups","title":"query_groups()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.query_users","text":"\u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users","title":"query_users()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.replace_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"replace_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.replace_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"replace_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.retrieve_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException ()","title":"retrieve_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.retrieve_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException ()","title":"retrieve_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.sync_groups","text":"\u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count","title":"sync_groups()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.sync_users","text":"\u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete()","title":"sync_users()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.update_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"update_group()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.update_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"update_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/DataSynchronization/#permanent-data-synchronization","text":"","title":"Permanent data synchronization"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/","text":"Features # Message middleware plug -in for platform introduction message middle parts\uff08Such as Artemis,KAFKA etc.\uff09Communication with a third -party system\uff08If the notification data\uff09 Implementation # When developing a message in the middleware plug -in\uff0cOnly inherit the message of the message intercding and complete the data writing process\uff0cThe platform has provided message storage model\uff08Scalable\uff09,And provide message storage methods in the base class\uff1a Foundation definition # arkid.core.extension.message.MessageExtension ( Extension ) # Source code in arkid/core/extension/message.py class MessageExtension ( Extension ): TYPE = \"message\" @property def type ( self ): return MessageExtension . TYPE def load ( self ): super () . load () def save_message ( self , tenant : Tenant , user : User , source : TenantExtensionConfig , title : str , content : str , ** kwargs ): \"\"\"\u4fdd\u5b58\u6d88\u606f Args: tenant (Tenant): \u79df\u6237 user (User): \u7528\u6237 source (TenantExtensionConfig): \u6765\u6e90 title (str): \u6807\u9898 content (str): \u5185\u5bb9 \"\"\" try : message = Message ( tenant = tenant , user = user , source = source , title = title , content = content ) message . save () except Exception as err : logger . error ( err ) return False , ErrorCode . MESSAGE_SAVE_FAILED return True , None load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/message.py def load ( self ): super () . load () save_message ( self , tenant , user , source , title , content , ** kwargs ) # \u4fdd\u5b58\u6d88\u606f Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required user User \u7528\u6237 required source TenantExtensionConfig \u6765\u6e90 required title str \u6807\u9898 required content str \u5185\u5bb9 required Source code in arkid/core/extension/message.py def save_message ( self , tenant : Tenant , user : User , source : TenantExtensionConfig , title : str , content : str , ** kwargs ): \"\"\"\u4fdd\u5b58\u6d88\u606f Args: tenant (Tenant): \u79df\u6237 user (User): \u7528\u6237 source (TenantExtensionConfig): \u6765\u6e90 title (str): \u6807\u9898 content (str): \u5185\u5bb9 \"\"\" try : message = Message ( tenant = tenant , user = user , source = source , title = title , content = content ) message . save () except Exception as err : logger . error ( err ) return False , ErrorCode . MESSAGE_SAVE_FAILED return True , None","title":"MessageMiddleware"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#features","text":"Message middleware plug -in for platform introduction message middle parts\uff08Such as Artemis,KAFKA etc.\uff09Communication with a third -party system\uff08If the notification data\uff09","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#implementation","text":"When developing a message in the middleware plug -in\uff0cOnly inherit the message of the message intercding and complete the data writing process\uff0cThe platform has provided message storage model\uff08Scalable\uff09,And provide message storage methods in the base class\uff1a","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#arkid.core.extension.message.MessageExtension","text":"Source code in arkid/core/extension/message.py class MessageExtension ( Extension ): TYPE = \"message\" @property def type ( self ): return MessageExtension . TYPE def load ( self ): super () . load () def save_message ( self , tenant : Tenant , user : User , source : TenantExtensionConfig , title : str , content : str , ** kwargs ): \"\"\"\u4fdd\u5b58\u6d88\u606f Args: tenant (Tenant): \u79df\u6237 user (User): \u7528\u6237 source (TenantExtensionConfig): \u6765\u6e90 title (str): \u6807\u9898 content (str): \u5185\u5bb9 \"\"\" try : message = Message ( tenant = tenant , user = user , source = source , title = title , content = content ) message . save () except Exception as err : logger . error ( err ) return False , ErrorCode . MESSAGE_SAVE_FAILED return True , None","title":"MessageExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#arkid.core.extension.message.MessageExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/message.py def load ( self ): super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/MessageMiddleware/#arkid.core.extension.message.MessageExtension.save_message","text":"\u4fdd\u5b58\u6d88\u606f Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required user User \u7528\u6237 required source TenantExtensionConfig \u6765\u6e90 required title str \u6807\u9898 required content str \u5185\u5bb9 required Source code in arkid/core/extension/message.py def save_message ( self , tenant : Tenant , user : User , source : TenantExtensionConfig , title : str , content : str , ** kwargs ): \"\"\"\u4fdd\u5b58\u6d88\u606f Args: tenant (Tenant): \u79df\u6237 user (User): \u7528\u6237 source (TenantExtensionConfig): \u6765\u6e90 title (str): \u6807\u9898 content (str): \u5185\u5bb9 \"\"\" try : message = Message ( tenant = tenant , user = user , source = source , title = title , content = content ) message . save () except Exception as err : logger . error ( err ) return False , ErrorCode . MESSAGE_SAVE_FAILED return True , None","title":"save_message()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/","text":"Features # Multi -language package plug -in implementation data to ARKID registered language translation data function\uff0cDevelopers only need to provide the dictionary and corresponding language name after the translation is completed to complete the multi -language internationalization configuration function\u3002 Implementation # When developing a multi -language package plug -in\uff0cOnly inherit the multi -language plug -in base class and re -load LANGUAGE_type\u4e0elanguage_Data two functions can be\uff0cThe platform will integrate data in the plug -in into the platform translation data\uff0cDistributed to the front end through OpenAPI description\uff0cYou can get the corresponding data on the front page to complete the international function\u3002 Notice: A language package plug -in only supports one language translation data\uff0cAt the same time Database custom translation data > Plug -in translation data > The platform comes with translation data sequenceDiagram participant U as Client participant C as Platform core participant B as Multi -language package plugin C->>B: Loading plug -in B->>C: Registered language package U->>C: Request OpenAPI description data C->>C: Organize translation data\uff0cOverlay platform translation in turn\u3001Plug -in translation\u3001Practitioner custom translation C->>U: Completed translation data The example is as follows\uff1a class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"Simplified Chinese\" ) def language_data ( self ) -> dict : return { \"data\" : \"data\" } Abstract function # language_type language_data Foundation definition # arkid.core.extension.language.LanguageExtension ( Extension ) # Source code in arkid/core/extension/language.py class LanguageExtension ( Extension ): TYPE = \"language\" @property def type ( self ): return LanguageExtension . TYPE def load ( self ): super () . load () self . load_language_data ( language_type = self . language_type (), data = self . language_data () ) def load_language_data ( self , data , language_type = _ ( \"\u7b80\u4f53\u4e2d\u6587\" )): \"\"\"\u52a0\u8f7d\u8bed\u8a00\u5305 Args: data (dict): \u7ffb\u8bd1\u6570\u636e language_type (str, optional): \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). \"\"\" self . language_type = language_type self . extension_data = data extension = self . model try : language_data , _ = LanguageData . active_objects . get_or_create ( extension = extension ) language_data . extension_data = self . extension_data language_data . name = self . language_type language_data . save () except Exception as err : logger . error ( err ) self . refresh_lang_maps () @abstractmethod def language_type ( self ) -> str : \"\"\" \u8bed\u8a00\u7c7b\u578b Returns: str: \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 \"\"\" return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) @abstractmethod def language_data ( self ) -> dict : \"\"\"\u7ffb\u8bd1\u6570\u636e Returns: dict: \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 \"\"\" return {} def refresh_lang_maps ( self ): \"\"\"\u5237\u65b0\u8bed\u8a00\u5305 \"\"\" core_translation . lang_maps = core_translation . reset_lang_maps () language_data ( self ) # \u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in arkid/core/extension/language.py @abstractmethod def language_data ( self ) -> dict : \"\"\"\u7ffb\u8bd1\u6570\u636e Returns: dict: \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 \"\"\" return {} language_type ( self ) # \u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in arkid/core/extension/language.py @abstractmethod def language_type ( self ) -> str : \"\"\" \u8bed\u8a00\u7c7b\u578b Returns: str: \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 \"\"\" return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/language.py def load ( self ): super () . load () self . load_language_data ( language_type = self . language_type (), data = self . language_data () ) load_language_data ( self , data , language_type = '\u7b80\u4f53\u4e2d\u6587' ) # \u52a0\u8f7d\u8bed\u8a00\u5305 Parameters: Name Type Description Default data dict \u7ffb\u8bd1\u6570\u636e required language_type str \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). '\u7b80\u4f53\u4e2d\u6587' Source code in arkid/core/extension/language.py def load_language_data ( self , data , language_type = _ ( \"\u7b80\u4f53\u4e2d\u6587\" )): \"\"\"\u52a0\u8f7d\u8bed\u8a00\u5305 Args: data (dict): \u7ffb\u8bd1\u6570\u636e language_type (str, optional): \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). \"\"\" self . language_type = language_type self . extension_data = data extension = self . model try : language_data , _ = LanguageData . active_objects . get_or_create ( extension = extension ) language_data . extension_data = self . extension_data language_data . name = self . language_type language_data . save () except Exception as err : logger . error ( err ) self . refresh_lang_maps () refresh_lang_maps ( self ) # \u5237\u65b0\u8bed\u8a00\u5305 Source code in arkid/core/extension/language.py def refresh_lang_maps ( self ): \"\"\"\u5237\u65b0\u8bed\u8a00\u5305 \"\"\" core_translation . lang_maps = core_translation . reset_lang_maps () Exemplary # extension_root.com_longgui_language_zh.TranslationZhExtension ( LanguageExtension ) # Source code in extension_root/com_longgui_language_zh/__init__.py class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" } language_data ( self ) # \u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in extension_root/com_longgui_language_zh/__init__.py def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" } language_type ( self ) # \u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in extension_root/com_longgui_language_zh/__init__.py def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" )","title":"Multi LanguagePackage"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#features","text":"Multi -language package plug -in implementation data to ARKID registered language translation data function\uff0cDevelopers only need to provide the dictionary and corresponding language name after the translation is completed to complete the multi -language internationalization configuration function\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#implementation","text":"When developing a multi -language package plug -in\uff0cOnly inherit the multi -language plug -in base class and re -load LANGUAGE_type\u4e0elanguage_Data two functions can be\uff0cThe platform will integrate data in the plug -in into the platform translation data\uff0cDistributed to the front end through OpenAPI description\uff0cYou can get the corresponding data on the front page to complete the international function\u3002 Notice: A language package plug -in only supports one language translation data\uff0cAt the same time Database custom translation data > Plug -in translation data > The platform comes with translation data sequenceDiagram participant U as Client participant C as Platform core participant B as Multi -language package plugin C->>B: Loading plug -in B->>C: Registered language package U->>C: Request OpenAPI description data C->>C: Organize translation data\uff0cOverlay platform translation in turn\u3001Plug -in translation\u3001Practitioner custom translation C->>U: Completed translation data The example is as follows\uff1a class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"Simplified Chinese\" ) def language_data ( self ) -> dict : return { \"data\" : \"data\" }","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#abstract-function","text":"language_type language_data","title":"Abstract function"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension","text":"Source code in arkid/core/extension/language.py class LanguageExtension ( Extension ): TYPE = \"language\" @property def type ( self ): return LanguageExtension . TYPE def load ( self ): super () . load () self . load_language_data ( language_type = self . language_type (), data = self . language_data () ) def load_language_data ( self , data , language_type = _ ( \"\u7b80\u4f53\u4e2d\u6587\" )): \"\"\"\u52a0\u8f7d\u8bed\u8a00\u5305 Args: data (dict): \u7ffb\u8bd1\u6570\u636e language_type (str, optional): \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). \"\"\" self . language_type = language_type self . extension_data = data extension = self . model try : language_data , _ = LanguageData . active_objects . get_or_create ( extension = extension ) language_data . extension_data = self . extension_data language_data . name = self . language_type language_data . save () except Exception as err : logger . error ( err ) self . refresh_lang_maps () @abstractmethod def language_type ( self ) -> str : \"\"\" \u8bed\u8a00\u7c7b\u578b Returns: str: \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 \"\"\" return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) @abstractmethod def language_data ( self ) -> dict : \"\"\"\u7ffb\u8bd1\u6570\u636e Returns: dict: \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 \"\"\" return {} def refresh_lang_maps ( self ): \"\"\"\u5237\u65b0\u8bed\u8a00\u5305 \"\"\" core_translation . lang_maps = core_translation . reset_lang_maps ()","title":"LanguageExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension.language_data","text":"\u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in arkid/core/extension/language.py @abstractmethod def language_data ( self ) -> dict : \"\"\"\u7ffb\u8bd1\u6570\u636e Returns: dict: \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 \"\"\" return {}","title":"language_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension.language_type","text":"\u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in arkid/core/extension/language.py @abstractmethod def language_type ( self ) -> str : \"\"\" \u8bed\u8a00\u7c7b\u578b Returns: str: \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 \"\"\" return _ ( \"\u7b80\u4f53\u4e2d\u6587\" )","title":"language_type()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/language.py def load ( self ): super () . load () self . load_language_data ( language_type = self . language_type (), data = self . language_data () )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension.load_language_data","text":"\u52a0\u8f7d\u8bed\u8a00\u5305 Parameters: Name Type Description Default data dict \u7ffb\u8bd1\u6570\u636e required language_type str \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). '\u7b80\u4f53\u4e2d\u6587' Source code in arkid/core/extension/language.py def load_language_data ( self , data , language_type = _ ( \"\u7b80\u4f53\u4e2d\u6587\" )): \"\"\"\u52a0\u8f7d\u8bed\u8a00\u5305 Args: data (dict): \u7ffb\u8bd1\u6570\u636e language_type (str, optional): \u8bed\u8a00\u540d\u79f0. Defaults to _(\"\u7b80\u4f53\u4e2d\u6587\"). \"\"\" self . language_type = language_type self . extension_data = data extension = self . model try : language_data , _ = LanguageData . active_objects . get_or_create ( extension = extension ) language_data . extension_data = self . extension_data language_data . name = self . language_type language_data . save () except Exception as err : logger . error ( err ) self . refresh_lang_maps ()","title":"load_language_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#arkid.core.extension.language.LanguageExtension.refresh_lang_maps","text":"\u5237\u65b0\u8bed\u8a00\u5305 Source code in arkid/core/extension/language.py def refresh_lang_maps ( self ): \"\"\"\u5237\u65b0\u8bed\u8a00\u5305 \"\"\" core_translation . lang_maps = core_translation . reset_lang_maps ()","title":"refresh_lang_maps()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#extension_root.com_longgui_language_zh.TranslationZhExtension","text":"Source code in extension_root/com_longgui_language_zh/__init__.py class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" }","title":"TranslationZhExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#extension_root.com_longgui_language_zh.TranslationZhExtension.language_data","text":"\u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in extension_root/com_longgui_language_zh/__init__.py def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" }","title":"language_data()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Multi-LanguagePackage/#extension_root.com_longgui_language_zh.TranslationZhExtension.language_type","text":"\u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in extension_root/com_longgui_language_zh/__init__.py def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" )","title":"language_type()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Overview/","text":"Overview # From the functional level\uff0cAll the plugins of Arkid are classified\uff0cAnd created their own base classes\u3002On the one hand, it is convenient for developers to only understand each base class when developing related plugins\uff0cImplement the relevant interface function\uff1bon the other hand\uff0cYou can classify these plug -in management\uff0cIt is more convenient for users to find and use\u3002 so\uff0cEach type of plug -in is basically divided into\uff1a Features Implementation Abstract method Foundation definition Exemplary","title":"Overview"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/Overview/#overview","text":"From the functional level\uff0cAll the plugins of Arkid are classified\uff0cAnd created their own base classes\u3002On the one hand, it is convenient for developers to only understand each base class when developing related plugins\uff0cImplement the relevant interface function\uff1bon the other hand\uff0cYou can classify these plug -in management\uff0cIt is more convenient for users to find and use\u3002 so\uff0cEach type of plug -in is basically divided into\uff1a Features Implementation Abstract method Foundation definition Exemplary","title":"Overview"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/PageTheme/","text":"Page theme # Notice Page replacement theme function effect is not satisfactory, Please use it carefully The front -end staff of the module is actively developing the test, please wait patiently, It is expected to display the complete effect this month user's guidance # Practitioner administrator can be in Tenant management => Theme settings Add and delete the theme of the page\uff0cWhen creating adding themes\uff0cWill fill in priority parameters\uff0cWhen reading the front -end reading, it will respond in the order of priority\u3002Such as updating or deleting themes\uff0cYou need to refresh the page before you see the changes in the theme of the front page page\u3002 Topic settings column representation\uff1a Preview # The theme response effect of the front -end interface will be added below\uff0cThe specific effect is subject to the development test after the release\u3002 sketchytheme\uff1a darklytheme\uff1a Development guide # Because front -end development depends on the bootstrap framework\uff0cSo [Bootswatch] (https] (https://bootswatch.com/) Reference to the theme settings and development\u3002 The development of theme plug -in and style files can refer to the theme files in the URL\uff0cThe above themes are from the theme website\u3002 The theme of the website\u3002The details and precautions of the development style documents will be published in this document\u3002","title":"Page theme"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/PageTheme/#page-theme","text":"Notice Page replacement theme function effect is not satisfactory, Please use it carefully The front -end staff of the module is actively developing the test, please wait patiently, It is expected to display the complete effect this month","title":"Page theme"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/PageTheme/#users-guidance","text":"Practitioner administrator can be in Tenant management => Theme settings Add and delete the theme of the page\uff0cWhen creating adding themes\uff0cWill fill in priority parameters\uff0cWhen reading the front -end reading, it will respond in the order of priority\u3002Such as updating or deleting themes\uff0cYou need to refresh the page before you see the changes in the theme of the front page page\u3002 Topic settings column representation\uff1a","title":"user's guidance"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/PageTheme/#preview","text":"The theme response effect of the front -end interface will be added below\uff0cThe specific effect is subject to the development test after the release\u3002 sketchytheme\uff1a darklytheme\uff1a","title":"Preview"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/PageTheme/#development-guide","text":"Because front -end development depends on the bootstrap framework\uff0cSo [Bootswatch] (https] (https://bootswatch.com/) Reference to the theme settings and development\u3002 The development of theme plug -in and style files can refer to the theme files in the URL\uff0cThe above themes are from the theme website\u3002 The theme of the website\u3002The details and precautions of the development style documents will be published in this document\u3002","title":"Development guide"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/","text":"Features # SMS plug -in abstract processing authentication process such as mobile phone verification code/Notice and other SMS sending requirements process\uff0cIn order to facilitate developers to access the SMS services provided by major manufacturers through heavy loading functions Implementation # When developing SMS plug -in\uff0cOnly inherit the SMS plug -in base class and load send_SMS function can\uff0cThe processing process is as follows\uff1a sequenceDiagram participant C as Platform core participant B as SMS plugin C->>B: Loading plug -in B->>C: Register to listen to SMS events rect rgb(191, 223, 255) C->>B: Send a SEND_SMS) B->>C: Corresponding events and send text messages according to your own configuration\uff0cReturn result\uff08success/fail\uff09 end Abstract function # send_sms Foundation definition # arkid.core.extension.sms.SmsExtension ( Extension ) # Source code in arkid/core/extension/sms.py class SmsExtension ( Extension ): TYPE = \"sms\" @property def type ( self ): return SmsExtension . TYPE def load ( self ): self . listen_event ( SEND_SMS , self . event_send_sms ) super () . load () def event_send_sms ( self , event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Args: event (Event): \u4e8b\u4ef6 \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: ``` json { \"config_id\": \"xxxx\", # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\": \"xxxx\", # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\": \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } ``` Returns: \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c \"\"\" if event . packages == self . package or self . package in event . packages : return self . send_sms ( event , ** kwargs ) @abstractmethod def send_sms ( self , event : Event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1 Args: event (Event): \u4e8b\u4ef6 \"\"\" pass event_send_sms ( self , event , ** kwargs ) # \u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: { \"config_id\" : \"xxxx\" , # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\" : \"xxxx\" , # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\" : \"xxxx\" , # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\" : \"xxxx\" , # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\" : \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } Returns: Type Description \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c Source code in arkid/core/extension/sms.py def event_send_sms ( self , event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Args: event (Event): \u4e8b\u4ef6 \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: ``` json { \"config_id\": \"xxxx\", # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\": \"xxxx\", # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\": \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } ``` Returns: \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c \"\"\" if event . packages == self . package or self . package in event . packages : return self . send_sms ( event , ** kwargs ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/sms.py def load ( self ): self . listen_event ( SEND_SMS , self . event_send_sms ) super () . load () send_sms ( self , event , ** kwargs ) # \u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in arkid/core/extension/sms.py @abstractmethod def send_sms ( self , event : Event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1 Args: event (Event): \u4e8b\u4ef6 \"\"\" pass Exemplary # extension_root.com_longgui_sms_aliyun.AliyunSMSExtension ( SmsExtension ) # Source code in extension_root/com_longgui_sms_aliyun/__init__.py class AliyunSMSExtension ( SmsExtension ): def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map () load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_sms_aliyun/__init__.py def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () send_sms ( self , event , ** kwargs ) # \u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_sms_aliyun/__init__.py def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"ShortMessage"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#features","text":"SMS plug -in abstract processing authentication process such as mobile phone verification code/Notice and other SMS sending requirements process\uff0cIn order to facilitate developers to access the SMS services provided by major manufacturers through heavy loading functions","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#implementation","text":"When developing SMS plug -in\uff0cOnly inherit the SMS plug -in base class and load send_SMS function can\uff0cThe processing process is as follows\uff1a sequenceDiagram participant C as Platform core participant B as SMS plugin C->>B: Loading plug -in B->>C: Register to listen to SMS events rect rgb(191, 223, 255) C->>B: Send a SEND_SMS) B->>C: Corresponding events and send text messages according to your own configuration\uff0cReturn result\uff08success/fail\uff09 end","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#abstract-function","text":"send_sms","title":"Abstract function"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#arkid.core.extension.sms.SmsExtension","text":"Source code in arkid/core/extension/sms.py class SmsExtension ( Extension ): TYPE = \"sms\" @property def type ( self ): return SmsExtension . TYPE def load ( self ): self . listen_event ( SEND_SMS , self . event_send_sms ) super () . load () def event_send_sms ( self , event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Args: event (Event): \u4e8b\u4ef6 \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: ``` json { \"config_id\": \"xxxx\", # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\": \"xxxx\", # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\": \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } ``` Returns: \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c \"\"\" if event . packages == self . package or self . package in event . packages : return self . send_sms ( event , ** kwargs ) @abstractmethod def send_sms ( self , event : Event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1 Args: event (Event): \u4e8b\u4ef6 \"\"\" pass","title":"SmsExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#arkid.core.extension.sms.SmsExtension.event_send_sms","text":"\u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: { \"config_id\" : \"xxxx\" , # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\" : \"xxxx\" , # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\" : \"xxxx\" , # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\" : \"xxxx\" , # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\" : \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } Returns: Type Description \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c Source code in arkid/core/extension/sms.py def event_send_sms ( self , event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1\u65f6\u95f4 Args: event (Event): \u4e8b\u4ef6 \u4e8b\u4ef6\u6570\u636e\uff08event.data\uff09\u7ed3\u6784\u8bf4\u660e: ``` json { \"config_id\": \"xxxx\", # \u5fc5\u4f20\uff0c\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eID \"mobile\": \"xxxx\", # \u5fc5\u4f20\uff0c\u7535\u8bdd\u53f7\u7801 \"code\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u9a8c\u8bc1\u7801 \"areacode\": \"xxxx\", # \u975e\u5fc5\u4f20\uff0c\u533a\u53f7 \"username\": \"xxxx\" # \u975e\u5fc5\u4f20\uff0c\u7528\u6237\u540d ... } ``` Returns: \u53d1\u9001\u77ed\u4fe1\u7ed3\u679c \"\"\" if event . packages == self . package or self . package in event . packages : return self . send_sms ( event , ** kwargs )","title":"event_send_sms()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#arkid.core.extension.sms.SmsExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/sms.py def load ( self ): self . listen_event ( SEND_SMS , self . event_send_sms ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#arkid.core.extension.sms.SmsExtension.send_sms","text":"\u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in arkid/core/extension/sms.py @abstractmethod def send_sms ( self , event : Event , ** kwargs ): \"\"\" \u53d1\u9001\u77ed\u4fe1 Args: event (Event): \u4e8b\u4ef6 \"\"\" pass","title":"send_sms()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension","text":"Source code in extension_root/com_longgui_sms_aliyun/__init__.py class AliyunSMSExtension ( SmsExtension ): def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"AliyunSMSExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_sms_aliyun/__init__.py def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/ShortMessage/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension.send_sms","text":"\u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_sms_aliyun/__init__.py def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"send_sms()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/","text":"Features # Static storage plug -in to increase static files to ARKID\uff08Such as pictures\uff0cCertificate\uff09Ability to upload\uff0cDevelopers only need to inherit the base class and load the corresponding abstraction method\u3002 Implementation # When developing static storage plug -in\uff0cOnly inherit the StorageExtenSion base class\uff0cAnd re -load Save_Abstract functions such as file\u3002 The example is as follows\uff1a class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , ) super () . load () def save_file ( self , file , f_key , * args , ** kwargs ): extension = self . model storage_path = extension . profile . get ( 'storage_path' , './storage/' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks (): fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" Local storage plug -in to obtain files \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , './storage/' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"Read file data Args: tenant_id (str): Tenant ID file_url (str): File link Returns: bytes: File data \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs File storage and reading examples are as follows\uff1a tenant = request . tenant data = { \"file\" : file , } extension = Extension . active_objects . filter ( type = \"storage\" ) . first () # Storage file event responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = tenant , request = request , packages = extension . package , data = data )) if not responses : return ErrorDict ( ErrorCode . STORAGE_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if not data : return ErrorDict ( ErrorCode . STORAGE_FAILED ) #Read file event t_responses = dispatch_event ( Event ( tag = READ_FILE , tenant = tenant , packages = extension . package , data = { \"url\" : data })) if not t_responses : return ErrorDict ( ErrorCode . STORAGE_NOT_EXISTS ) useless , ( data , extension ) = t_responses [ 0 ] if not data : print ( \"Failure\" ) Abstract function # save_file resolve read Foundation definition # arkid.core.extension.storage.StorageExtension ( Extension ) # Source code in arkid/core/extension/storage.py class StorageExtension ( Extension ): TYPE = \"storage\" @property def type ( self ): return StorageExtension . TYPE def load ( self ): super () . load () self . listen_event ( SAVE_FILE , self . event_save_file ) self . listen_event ( READ_FILE , self . event_read_file ) def event_save_file ( self , event , ** kwargs ): tenant = event . tenant file = event . data . get ( 'file' , None ) fileurl = event . data . get ( 'fileurl' , None ) if fileurl : import requests response = requests . get ( fileurl , stream = True ) f_key = self . generate_key ( 'temp.jpg' ) self . save_file ( None , f_key , response , event ) else : f_key = self . generate_key ( file . name ) self . save_file ( file , f_key , event ) return self . resolve ( f_key , tenant , None , event ) def event_read_file ( self , event , ** kwargs ): file_url = event . data [ \"url\" ] return self . read ( tenant_id = event . tenant . id , file_url = file_url , ** kwargs ) @abstractmethod def save_file ( self , file , f_key : str , response = None , ** kwargs ): \"\"\"\u4fdd\u5b58\u6587\u4ef6 Args: file (File): \u6587\u4ef6\u5bf9\u8c61 f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 \"\"\" pass @abstractmethod def resolve ( self , f_key : str , tenant , ** kwargs ): \"\"\"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Args: f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 tenant (Tenant): \u79df\u6237 \"\"\" pass @abstractmethod def read ( self , file_url : str , ** kwargs ): \"\"\"\u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: file_url (str): \u6587\u4ef6\u94fe\u63a5 \"\"\" pass def generate_key ( self , file_name : str ): \"\"\"\u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Args: file_name (str): \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 Returns: str: \u6587\u4ef6\u540d \"\"\" key = ' {} . {} ' . format ( uuid . uuid4 () . hex , file_name . split ( '.' )[ - 1 ], ) return key generate_key ( self , file_name ) # \u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Parameters: Name Type Description Default file_name str \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 required Returns: Type Description str \u6587\u4ef6\u540d Source code in arkid/core/extension/storage.py def generate_key ( self , file_name : str ): \"\"\"\u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Args: file_name (str): \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 Returns: str: \u6587\u4ef6\u540d \"\"\" key = ' {} . {} ' . format ( uuid . uuid4 () . hex , file_name . split ( '.' )[ - 1 ], ) return key load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/storage.py def load ( self ): super () . load () self . listen_event ( SAVE_FILE , self . event_save_file ) self . listen_event ( READ_FILE , self . event_read_file ) read ( self , file_url , ** kwargs ) # \u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default file_url str \u6587\u4ef6\u94fe\u63a5 required Source code in arkid/core/extension/storage.py @abstractmethod def read ( self , file_url : str , ** kwargs ): \"\"\"\u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: file_url (str): \u6587\u4ef6\u94fe\u63a5 \"\"\" pass resolve ( self , f_key , tenant , ** kwargs ) # \u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in arkid/core/extension/storage.py @abstractmethod def resolve ( self , f_key : str , tenant , ** kwargs ): \"\"\"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Args: f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 tenant (Tenant): \u79df\u6237 \"\"\" pass save_file ( self , file , f_key , response = None , ** kwargs ) # \u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in arkid/core/extension/storage.py @abstractmethod def save_file ( self , file , f_key : str , response = None , ** kwargs ): \"\"\"\u4fdd\u5b58\u6587\u4ef6 Args: file (File): \u6587\u4ef6\u5bf9\u8c61 f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 \"\"\" pass Exemplary # extension_root.com_longgui_storage_local.LocalStorageExtension ( StorageExtension ) # Source code in extension_root/com_longgui_storage_local/__init__.py class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs get_file ( self , request , tenant_id , file_name ) # \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 Source code in extension_root/com_longgui_storage_local/__init__.py def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_storage_local/__init__.py def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () read ( self , tenant_id , file_url , ** kwargs ) # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default tenant_id str \u79df\u6237ID required file_url str \u6587\u4ef6\u94fe\u63a5 required Returns: Type Description bytes \u6587\u4ef6\u6570\u636e Source code in extension_root/com_longgui_storage_local/__init__.py def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs resolve ( self , f_key , tenant , * args , ** kwargs ) # \u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in extension_root/com_longgui_storage_local/__init__.py def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' save_file ( self , file , f_key , response = None , * args , ** kwargs ) # \u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in extension_root/com_longgui_storage_local/__init__.py def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk )","title":"StaticStorage"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#features","text":"Static storage plug -in to increase static files to ARKID\uff08Such as pictures\uff0cCertificate\uff09Ability to upload\uff0cDevelopers only need to inherit the base class and load the corresponding abstraction method\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#implementation","text":"When developing static storage plug -in\uff0cOnly inherit the StorageExtenSion base class\uff0cAnd re -load Save_Abstract functions such as file\u3002 The example is as follows\uff1a class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , ) super () . load () def save_file ( self , file , f_key , * args , ** kwargs ): extension = self . model storage_path = extension . profile . get ( 'storage_path' , './storage/' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks (): fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" Local storage plug -in to obtain files \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , './storage/' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"Read file data Args: tenant_id (str): Tenant ID file_url (str): File link Returns: bytes: File data \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs File storage and reading examples are as follows\uff1a tenant = request . tenant data = { \"file\" : file , } extension = Extension . active_objects . filter ( type = \"storage\" ) . first () # Storage file event responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = tenant , request = request , packages = extension . package , data = data )) if not responses : return ErrorDict ( ErrorCode . STORAGE_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if not data : return ErrorDict ( ErrorCode . STORAGE_FAILED ) #Read file event t_responses = dispatch_event ( Event ( tag = READ_FILE , tenant = tenant , packages = extension . package , data = { \"url\" : data })) if not t_responses : return ErrorDict ( ErrorCode . STORAGE_NOT_EXISTS ) useless , ( data , extension ) = t_responses [ 0 ] if not data : print ( \"Failure\" )","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#abstract-function","text":"save_file resolve read","title":"Abstract function"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension","text":"Source code in arkid/core/extension/storage.py class StorageExtension ( Extension ): TYPE = \"storage\" @property def type ( self ): return StorageExtension . TYPE def load ( self ): super () . load () self . listen_event ( SAVE_FILE , self . event_save_file ) self . listen_event ( READ_FILE , self . event_read_file ) def event_save_file ( self , event , ** kwargs ): tenant = event . tenant file = event . data . get ( 'file' , None ) fileurl = event . data . get ( 'fileurl' , None ) if fileurl : import requests response = requests . get ( fileurl , stream = True ) f_key = self . generate_key ( 'temp.jpg' ) self . save_file ( None , f_key , response , event ) else : f_key = self . generate_key ( file . name ) self . save_file ( file , f_key , event ) return self . resolve ( f_key , tenant , None , event ) def event_read_file ( self , event , ** kwargs ): file_url = event . data [ \"url\" ] return self . read ( tenant_id = event . tenant . id , file_url = file_url , ** kwargs ) @abstractmethod def save_file ( self , file , f_key : str , response = None , ** kwargs ): \"\"\"\u4fdd\u5b58\u6587\u4ef6 Args: file (File): \u6587\u4ef6\u5bf9\u8c61 f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 \"\"\" pass @abstractmethod def resolve ( self , f_key : str , tenant , ** kwargs ): \"\"\"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Args: f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 tenant (Tenant): \u79df\u6237 \"\"\" pass @abstractmethod def read ( self , file_url : str , ** kwargs ): \"\"\"\u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: file_url (str): \u6587\u4ef6\u94fe\u63a5 \"\"\" pass def generate_key ( self , file_name : str ): \"\"\"\u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Args: file_name (str): \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 Returns: str: \u6587\u4ef6\u540d \"\"\" key = ' {} . {} ' . format ( uuid . uuid4 () . hex , file_name . split ( '.' )[ - 1 ], ) return key","title":"StorageExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension.generate_key","text":"\u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Parameters: Name Type Description Default file_name str \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 required Returns: Type Description str \u6587\u4ef6\u540d Source code in arkid/core/extension/storage.py def generate_key ( self , file_name : str ): \"\"\"\u751f\u6210\u5b58\u50a8\u6587\u4ef6\u540d Args: file_name (str): \u539f\u59cb\u6587\u4ef6\u540d\uff0c\u7528\u4e8e\u83b7\u53d6\u6587\u4ef6\u540e\u7f00 Returns: str: \u6587\u4ef6\u540d \"\"\" key = ' {} . {} ' . format ( uuid . uuid4 () . hex , file_name . split ( '.' )[ - 1 ], ) return key","title":"generate_key()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/storage.py def load ( self ): super () . load () self . listen_event ( SAVE_FILE , self . event_save_file ) self . listen_event ( READ_FILE , self . event_read_file )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension.read","text":"\u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default file_url str \u6587\u4ef6\u94fe\u63a5 required Source code in arkid/core/extension/storage.py @abstractmethod def read ( self , file_url : str , ** kwargs ): \"\"\"\u901a\u8fc7\u6587\u4ef6\u94fe\u63a5\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: file_url (str): \u6587\u4ef6\u94fe\u63a5 \"\"\" pass","title":"read()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension.resolve","text":"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in arkid/core/extension/storage.py @abstractmethod def resolve ( self , f_key : str , tenant , ** kwargs ): \"\"\"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Args: f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 tenant (Tenant): \u79df\u6237 \"\"\" pass","title":"resolve()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#arkid.core.extension.storage.StorageExtension.save_file","text":"\u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in arkid/core/extension/storage.py @abstractmethod def save_file ( self , file , f_key : str , response = None , ** kwargs ): \"\"\"\u4fdd\u5b58\u6587\u4ef6 Args: file (File): \u6587\u4ef6\u5bf9\u8c61 f_key (str): \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 \"\"\" pass","title":"save_file()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension","text":"Source code in extension_root/com_longgui_storage_local/__init__.py class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs","title":"LocalStorageExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension.get_file","text":"\u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 Source code in extension_root/com_longgui_storage_local/__init__.py def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) )","title":"get_file()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_storage_local/__init__.py def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension.read","text":"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default tenant_id str \u79df\u6237ID required file_url str \u6587\u4ef6\u94fe\u63a5 required Returns: Type Description bytes \u6587\u4ef6\u6570\u636e Source code in extension_root/com_longgui_storage_local/__init__.py def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs","title":"read()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension.resolve","text":"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in extension_root/com_longgui_storage_local/__init__.py def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } '","title":"resolve()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/StaticStorage/#extension_root.com_longgui_storage_local.LocalStorageExtension.save_file","text":"\u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in extension_root/com_longgui_storage_local/__init__.py def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk )","title":"save_file()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/","text":"Features # worth mentioning\uff0cIn fact, log in with other IDP system accounts\uff0cThe process of binding the account of ARKID\u3002 Classic\uff1aWeChat login\uff0cLogin\uff0cFlying Book Login and so on\u3002 Implementation # Because most of the third -party login schemes are derivatives based on the OAUTH2 protocol\uff0cTherefore, the process of the tripartite certification is based\u3002 first,Create a third -party certification entrance on the login page\uff0cDedication of this entrance: icon: get_img_url Third -party login request Arkid.core.extension.external_idp.ExternalIdpExtension.login , The request will redirect the entrance address of the third party login, The entrance address is get_authorize_url When the user clicks the icon\uff0cAfter initiating a third -party certification request\uff0c Will return to Arkid.core.extension.external_idp.ExternalIdpExtension.callback interface\uff0cAnd Code In callback\uff0cCode call get_ext_token_by_code method\uff0cGet ACCESS_token\uff0c Then via access_token call get_user_info_by_ext_token method to get user information If the third party certification returns EXT_ID is not bound to users in Arkid\uff0cThe front end will jump to the binding page\uff0cCall Arkid.core.extension.external_idp.ExternalIdpExtension.bind interface, This interface will call bind_arkid_user Method binds EXT_ID to Arkid users If the third party certification returns EXT_ID has been bound to users in Arkid\uff0cCall get_arkid_user Method obtain an arkid user that has been bound To complete the login at this point Abstract method # get_img_url get_authorize_url get_ext_token_by_code get_user_info_by_ext_token get_arkid_user Foundation definition # arkid.core.extension.external_idp.ExternalIdpExtension ( Extension ) # Source code in arkid/core/extension/external_idp.py class ExternalIdpExtension ( Extension ): TYPE = \"external_idp\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ExternalIdpExtension . TYPE def load ( self ): urls = [ re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/login$' , self . login , name = f ' { self . pname } _login' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/callback$' , self . callback , name = f ' { self . pname } _callback' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/bind$' , self . bind , name = f ' { self . pname } _bind' , ), ] self . register_routers ( urls , False ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . add_idp_login_buttons ) self . listen_event ( core_event . ACCOUNT_UNBIND , self . account_unbind ) super () . load () @abstractmethod def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, callback_url (str): \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 next_url (str): \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 Returns: str: \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL \"\"\" pass def login ( self , request , config_id ): \"\"\" \u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b \"\"\" config = self . get_config_by_id ( config_id ) if not config : return JsonResponse ({ \"error_msg\" : \"\u6ca1\u6709\u627e\u5230\u767b\u5f55\u914d\u7f6e\" }) callback_url = config . config . get ( \"callback_url\" ) # callback_url = callback_url.replace( # \"localhost:8000\", \"xxxx.vaiwan.com\" # ) # \u5185\u7f51\u7a7f\u900f\u6d4b\u8bd5\u7528 next_url = request . GET . get ( \"next\" , None ) if next_url is not None : next_url = \"?next=\" + next_url else : next_url = \"\" url = self . get_authorize_url ( config , callback_url , next_url ) return HttpResponseRedirect ( url ) @abstractmethod def get_ext_token ( self , config , code ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e Returns: str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token \"\"\" pass @abstractmethod def get_ext_user_info ( self , config , code , token ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code token (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token Returns: dict: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f \"\"\" pass @abstractmethod def get_arkid_user ( self , ext_id ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: ext_id (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: ArkID\u7528\u6237 \"\"\" pass def get_arkid_token ( self , ext_id , ext_name , ext_icon , config ): arkid_user = self . get_arkid_user ( ext_id ) if arkid_user : from arkid.core.models import ExpiringToken et = ExpiringToken . objects . filter ( user = arkid_user ) . first () if et and et . expired ( config . tenant ) is False : token = et . token else : token = refresh_token ( arkid_user ) context = { \"token\" : token } else : context = { \"token\" : \"\" , \"ext_id\" : ext_id , \"ext_name\" : ext_name , \"ext_icon\" : ext_icon , \"tenant_id\" : config . tenant . id . hex , \"bind\" : config . config . get ( 'bind_url' ), } return context @abstractmethod def get_auth_code_from_request ( self , request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HTTPRequest): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: str: \u6388\u6743\u7801 \"\"\" pass def callback ( self , request , config_id ): \"\"\" \u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 \"\"\" code = self . get_auth_code_from_request ( request ) next_url = request . GET . get ( \"next\" , '' ) config = self . get_config_by_id ( config_id ) frontend_host = ( get_app_config () . get_frontend_host () . replace ( 'http://' , '' ) . replace ( 'https://' , '' ) ) # if next_url and ( # \"third_part_callback\" not in next_url or frontend_host not in next_url # ): # return JsonResponse({'error_msg': '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762'}) if next_url and ( frontend_host not in next_url ): return JsonResponse ({ 'error_msg' : '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762' }) if code : try : ext_token = self . get_ext_token ( config , code ) ext_id , ext_name , ext_icon , ext_info = self . get_ext_user_info ( config , code , ext_token ) except Exception as e : logger . error ( e ) args = e . args if len ( args ) == 1 and isinstance ( args [ 0 ], dict ): return JsonResponse ( e . args [ 0 ], json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : str ( e )}, json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : \"\u6388\u6743\u7801\u4e22\u5931\" , \"code\" : [ \"required\" ]}, json_dumps_params = { 'ensure_ascii' : False }) context = self . get_arkid_token ( ext_id , ext_name , ext_icon , config ) query_string = urlencode ( context ) if next_url : url = f \" { next_url } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) else : frontend_host = get_app_config () . get_frontend_host () frontend_callback = f ' { frontend_host } /third_part_callback' url = f \" { frontend_callback } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) @abstractmethod def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): ArkID\u7684\u7528\u6237 data (dict) request\u6570\u636e Returns: {\"token\":xxx}: \u8fd4\u56detoken \"\"\" pass @csrf_exempt def bind ( self , request , config_id ): \"\"\" \u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a \"\"\" from urllib.parse import unquote from arkid.core.event import SAVE_FILE , dispatch_event , Event from arkid.extension.models import Extension ext_id = request . POST . get ( \"ext_id\" ) user = verify_token ( request ) if not user : return JsonResponse ({ \"error_msg\" : \"Token\u9a8c\u8bc1\u5931\u8d25\" , \"code\" : [ \"token invalid\" ]}) ext_icon = request . POST . get ( 'ext_icon' , '' ) ext_name = request . POST . get ( 'ext_name' , '' ) config = self . get_config_by_id ( config_id ) extension = Extension . active_objects . filter ( type = \"storage\" ) . first () if ext_name : ext_name = unquote ( ext_name ) request . POST [ 'ext_name' ] = ext_name if ext_icon : data = { 'fileurl' : ext_icon } responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = config . tenant , request = request , packages = extension . package , data = data )) useless , ( fileinfo , extension ) = responses [ 0 ] request . POST [ 'ext_icon' ] = fileinfo self . bind_arkid_user ( ext_id , user , request . POST ) # token = refresh_token(user) # data = {\"token\": token} data = {} return JsonResponse ( self . success ()) @abstractmethod def get_img_url ( self ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Returns: url str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 \"\"\" pass def register_external_idp_schema ( self , idp_type , schema ): self . register_config_schema ( schema , self . package + '_' + idp_type ) self . register_composite_config_schema ( schema , idp_type , exclude = [ 'extension' ]) def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name , type ) server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): super () . update_tenant_config ( id , config , name , type ) config_created = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created def add_idp_login_buttons ( self , event , ** kwargs ): logger . info ( f ' { self . package } add idp login buttons start' ) data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : img_url , redirect_url = self . get_img_and_redirect_url ( config ) if img_url and redirect_url : buttons = [{ \"img\" : config . config . get ( 'img_url' , img_url ), \"redirect\" : { \"url\" : redirect_url }, \"tooltip\" : config . name }] data [ config . id . hex ] = { \"login\" : { 'extend' : { \"buttons\" : buttons }}} logger . info ( f ' { self . package } add idp login buttions end' ) return data def account_unbind ( self , event , ** kwargs ): ''' \u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id ''' data = event . data pass @abstractmethod def get_img_and_redirect_url ( self , config ): \"\"\" \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, Returns: tuple: \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') \"\"\" pass composite_model ( BaseModel ) django-model # TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/external_idp.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' )) config : JSONField blank django-field # Runtime Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : ForeignKey django-field # \u63d2\u4ef6 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # \u540d\u79f0 tenant : ForeignKey django-field # \u79df\u6237 type : CharField django-field # \u7c7b\u578b updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 account_unbind ( self , event , ** kwargs ) # \u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id required Source code in arkid/core/extension/external_idp.py def account_unbind ( self , event , ** kwargs ): ''' \u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id ''' data = event . data pass bind ( self , request , config_id ) # \u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a Source code in arkid/core/extension/external_idp.py @csrf_exempt def bind ( self , request , config_id ): \"\"\" \u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a \"\"\" from urllib.parse import unquote from arkid.core.event import SAVE_FILE , dispatch_event , Event from arkid.extension.models import Extension ext_id = request . POST . get ( \"ext_id\" ) user = verify_token ( request ) if not user : return JsonResponse ({ \"error_msg\" : \"Token\u9a8c\u8bc1\u5931\u8d25\" , \"code\" : [ \"token invalid\" ]}) ext_icon = request . POST . get ( 'ext_icon' , '' ) ext_name = request . POST . get ( 'ext_name' , '' ) config = self . get_config_by_id ( config_id ) extension = Extension . active_objects . filter ( type = \"storage\" ) . first () if ext_name : ext_name = unquote ( ext_name ) request . POST [ 'ext_name' ] = ext_name if ext_icon : data = { 'fileurl' : ext_icon } responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = config . tenant , request = request , packages = extension . package , data = data )) useless , ( fileinfo , extension ) = responses [ 0 ] request . POST [ 'ext_icon' ] = fileinfo self . bind_arkid_user ( ext_id , user , request . POST ) # token = refresh_token(user) # data = {\"token\": token} data = {} return JsonResponse ( self . success ()) bind_arkid_user ( self , ext_id , user , data ) # Parameters: Name Type Description Default ext_id str \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User ArkID\u7684\u7528\u6237 required Returns: Type Description {\"token\" xxx}: \u8fd4\u56detoken Source code in arkid/core/extension/external_idp.py @abstractmethod def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): ArkID\u7684\u7528\u6237 data (dict) request\u6570\u636e Returns: {\"token\":xxx}: \u8fd4\u56detoken \"\"\" pass callback ( self , request , config_id ) # \u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 Source code in arkid/core/extension/external_idp.py def callback ( self , request , config_id ): \"\"\" \u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 \"\"\" code = self . get_auth_code_from_request ( request ) next_url = request . GET . get ( \"next\" , '' ) config = self . get_config_by_id ( config_id ) frontend_host = ( get_app_config () . get_frontend_host () . replace ( 'http://' , '' ) . replace ( 'https://' , '' ) ) # if next_url and ( # \"third_part_callback\" not in next_url or frontend_host not in next_url # ): # return JsonResponse({'error_msg': '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762'}) if next_url and ( frontend_host not in next_url ): return JsonResponse ({ 'error_msg' : '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762' }) if code : try : ext_token = self . get_ext_token ( config , code ) ext_id , ext_name , ext_icon , ext_info = self . get_ext_user_info ( config , code , ext_token ) except Exception as e : logger . error ( e ) args = e . args if len ( args ) == 1 and isinstance ( args [ 0 ], dict ): return JsonResponse ( e . args [ 0 ], json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : str ( e )}, json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : \"\u6388\u6743\u7801\u4e22\u5931\" , \"code\" : [ \"required\" ]}, json_dumps_params = { 'ensure_ascii' : False }) context = self . get_arkid_token ( ext_id , ext_name , ext_icon , config ) query_string = urlencode ( context ) if next_url : url = f \" { next_url } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) else : frontend_host = get_app_config () . get_frontend_host () frontend_callback = f ' { frontend_host } /third_part_callback' url = f \" { frontend_callback } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/external_idp.py def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name , type ) server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created get_arkid_user ( self , ext_id ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default ext_id str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User ArkID\u7528\u6237 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_arkid_user ( self , ext_id ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: ext_id (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: ArkID\u7528\u6237 \"\"\" pass get_auth_code_from_request ( self , request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_auth_code_from_request ( self , request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HTTPRequest): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: str: \u6388\u6743\u7801 \"\"\" pass get_authorize_url ( self , config , callback_url , next_url ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required callback_url str \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 required next_url str \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 required Returns: Type Description str \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL Source code in arkid/core/extension/external_idp.py @abstractmethod def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, callback_url (str): \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 next_url (str): \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 Returns: str: \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL \"\"\" pass get_ext_token ( self , config , code ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default code str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code required config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Returns: Type Description str \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token Source code in arkid/core/extension/external_idp.py @abstractmethod def get_ext_token ( self , config , code ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e Returns: str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token \"\"\" pass get_ext_user_info ( self , config , code , token ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code required token str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token required Returns: Type Description dict \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f Source code in arkid/core/extension/external_idp.py @abstractmethod def get_ext_user_info ( self , config , code , token ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code token (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token Returns: dict: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f \"\"\" pass get_img_and_redirect_url ( self , config ) # \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in arkid/core/extension/external_idp.py @abstractmethod def get_img_and_redirect_url ( self , config ): \"\"\" \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, Returns: tuple: \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') \"\"\" pass get_img_url ( self ) # \u62bd\u8c61\u65b9\u6cd5 Returns: Type Description url str \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_img_url ( self ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Returns: url str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 \"\"\" pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/external_idp.py def load ( self ): urls = [ re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/login$' , self . login , name = f ' { self . pname } _login' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/callback$' , self . callback , name = f ' { self . pname } _callback' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/bind$' , self . bind , name = f ' { self . pname } _bind' , ), ] self . register_routers ( urls , False ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . add_idp_login_buttons ) self . listen_event ( core_event . ACCOUNT_UNBIND , self . account_unbind ) super () . load () login ( self , request , config_id ) # \u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b Source code in arkid/core/extension/external_idp.py def login ( self , request , config_id ): \"\"\" \u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b \"\"\" config = self . get_config_by_id ( config_id ) if not config : return JsonResponse ({ \"error_msg\" : \"\u6ca1\u6709\u627e\u5230\u767b\u5f55\u914d\u7f6e\" }) callback_url = config . config . get ( \"callback_url\" ) # callback_url = callback_url.replace( # \"localhost:8000\", \"xxxx.vaiwan.com\" # ) # \u5185\u7f51\u7a7f\u900f\u6d4b\u8bd5\u7528 next_url = request . GET . get ( \"next\" , None ) if next_url is not None : next_url = \"?next=\" + next_url else : next_url = \"\" url = self . get_authorize_url ( config , callback_url , next_url ) return HttpResponseRedirect ( url ) update_tenant_config ( self , id , config , name , type ) # \u66f4\u65b0\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description bool \u66f4\u65b0\u6210\u529fTrue\uff0c\u6ca1\u6709\u627e\u5230\u8be5\u914d\u7f6e\u8fd4\u56deFalse Source code in arkid/core/extension/external_idp.py def update_tenant_config ( self , id , config , name , type ): super () . update_tenant_config ( id , config , name , type ) config_created = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created Exemplary # extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension ( ExternalIdpExtension ) # Source code in extension_root/com_longgui_external_idp_github/__init__.py class ExternalIdpGithubExtension ( ExternalIdpExtension ): def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema ) def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" ) bind_arkid_user ( self , ext_id , user , data ) # Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 required Source code in extension_root/com_longgui_external_idp_github/__init__.py def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () get_arkid_user ( self , ext_id ) # Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None get_auth_code_from_request ( self , request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code get_authorize_url ( self , config , callback_url , next_url ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required redirect_uri str \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 required Returns: Type Description str \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url get_ext_token ( self , config , code ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required Returns: Type Description str \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] get_ext_user_info ( self , config , code , token ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required token str Github\u8fd4\u56de\u7684access_token required Returns: Type Description tuple \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response get_img_and_redirect_url ( self , config ) # \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" ) get_img_url ( self ) # \u8fd4\u56deGithub\u7684\u56fe\u6807URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_external_idp_github/__init__.py def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema )","title":"WorthMentioning"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#features","text":"worth mentioning\uff0cIn fact, log in with other IDP system accounts\uff0cThe process of binding the account of ARKID\u3002 Classic\uff1aWeChat login\uff0cLogin\uff0cFlying Book Login and so on\u3002","title":"Features"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#implementation","text":"Because most of the third -party login schemes are derivatives based on the OAUTH2 protocol\uff0cTherefore, the process of the tripartite certification is based\u3002 first,Create a third -party certification entrance on the login page\uff0cDedication of this entrance: icon: get_img_url Third -party login request Arkid.core.extension.external_idp.ExternalIdpExtension.login , The request will redirect the entrance address of the third party login, The entrance address is get_authorize_url When the user clicks the icon\uff0cAfter initiating a third -party certification request\uff0c Will return to Arkid.core.extension.external_idp.ExternalIdpExtension.callback interface\uff0cAnd Code In callback\uff0cCode call get_ext_token_by_code method\uff0cGet ACCESS_token\uff0c Then via access_token call get_user_info_by_ext_token method to get user information If the third party certification returns EXT_ID is not bound to users in Arkid\uff0cThe front end will jump to the binding page\uff0cCall Arkid.core.extension.external_idp.ExternalIdpExtension.bind interface, This interface will call bind_arkid_user Method binds EXT_ID to Arkid users If the third party certification returns EXT_ID has been bound to users in Arkid\uff0cCall get_arkid_user Method obtain an arkid user that has been bound To complete the login at this point","title":"Implementation"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#abstract-method","text":"get_img_url get_authorize_url get_ext_token_by_code get_user_info_by_ext_token get_arkid_user","title":"Abstract method"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#foundation-definition","text":"","title":"Foundation definition"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension","text":"Source code in arkid/core/extension/external_idp.py class ExternalIdpExtension ( Extension ): TYPE = \"external_idp\" composite_schema_map = {} created_composite_schema_list = [] composite_key = 'type' composite_model = TenantExtensionConfig @property def type ( self ): return ExternalIdpExtension . TYPE def load ( self ): urls = [ re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/login$' , self . login , name = f ' { self . pname } _login' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/callback$' , self . callback , name = f ' { self . pname } _callback' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/bind$' , self . bind , name = f ' { self . pname } _bind' , ), ] self . register_routers ( urls , False ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . add_idp_login_buttons ) self . listen_event ( core_event . ACCOUNT_UNBIND , self . account_unbind ) super () . load () @abstractmethod def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, callback_url (str): \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 next_url (str): \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 Returns: str: \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL \"\"\" pass def login ( self , request , config_id ): \"\"\" \u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b \"\"\" config = self . get_config_by_id ( config_id ) if not config : return JsonResponse ({ \"error_msg\" : \"\u6ca1\u6709\u627e\u5230\u767b\u5f55\u914d\u7f6e\" }) callback_url = config . config . get ( \"callback_url\" ) # callback_url = callback_url.replace( # \"localhost:8000\", \"xxxx.vaiwan.com\" # ) # \u5185\u7f51\u7a7f\u900f\u6d4b\u8bd5\u7528 next_url = request . GET . get ( \"next\" , None ) if next_url is not None : next_url = \"?next=\" + next_url else : next_url = \"\" url = self . get_authorize_url ( config , callback_url , next_url ) return HttpResponseRedirect ( url ) @abstractmethod def get_ext_token ( self , config , code ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e Returns: str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token \"\"\" pass @abstractmethod def get_ext_user_info ( self , config , code , token ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code token (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token Returns: dict: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f \"\"\" pass @abstractmethod def get_arkid_user ( self , ext_id ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: ext_id (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: ArkID\u7528\u6237 \"\"\" pass def get_arkid_token ( self , ext_id , ext_name , ext_icon , config ): arkid_user = self . get_arkid_user ( ext_id ) if arkid_user : from arkid.core.models import ExpiringToken et = ExpiringToken . objects . filter ( user = arkid_user ) . first () if et and et . expired ( config . tenant ) is False : token = et . token else : token = refresh_token ( arkid_user ) context = { \"token\" : token } else : context = { \"token\" : \"\" , \"ext_id\" : ext_id , \"ext_name\" : ext_name , \"ext_icon\" : ext_icon , \"tenant_id\" : config . tenant . id . hex , \"bind\" : config . config . get ( 'bind_url' ), } return context @abstractmethod def get_auth_code_from_request ( self , request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HTTPRequest): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: str: \u6388\u6743\u7801 \"\"\" pass def callback ( self , request , config_id ): \"\"\" \u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 \"\"\" code = self . get_auth_code_from_request ( request ) next_url = request . GET . get ( \"next\" , '' ) config = self . get_config_by_id ( config_id ) frontend_host = ( get_app_config () . get_frontend_host () . replace ( 'http://' , '' ) . replace ( 'https://' , '' ) ) # if next_url and ( # \"third_part_callback\" not in next_url or frontend_host not in next_url # ): # return JsonResponse({'error_msg': '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762'}) if next_url and ( frontend_host not in next_url ): return JsonResponse ({ 'error_msg' : '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762' }) if code : try : ext_token = self . get_ext_token ( config , code ) ext_id , ext_name , ext_icon , ext_info = self . get_ext_user_info ( config , code , ext_token ) except Exception as e : logger . error ( e ) args = e . args if len ( args ) == 1 and isinstance ( args [ 0 ], dict ): return JsonResponse ( e . args [ 0 ], json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : str ( e )}, json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : \"\u6388\u6743\u7801\u4e22\u5931\" , \"code\" : [ \"required\" ]}, json_dumps_params = { 'ensure_ascii' : False }) context = self . get_arkid_token ( ext_id , ext_name , ext_icon , config ) query_string = urlencode ( context ) if next_url : url = f \" { next_url } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) else : frontend_host = get_app_config () . get_frontend_host () frontend_callback = f ' { frontend_host } /third_part_callback' url = f \" { frontend_callback } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) @abstractmethod def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): ArkID\u7684\u7528\u6237 data (dict) request\u6570\u636e Returns: {\"token\":xxx}: \u8fd4\u56detoken \"\"\" pass @csrf_exempt def bind ( self , request , config_id ): \"\"\" \u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a \"\"\" from urllib.parse import unquote from arkid.core.event import SAVE_FILE , dispatch_event , Event from arkid.extension.models import Extension ext_id = request . POST . get ( \"ext_id\" ) user = verify_token ( request ) if not user : return JsonResponse ({ \"error_msg\" : \"Token\u9a8c\u8bc1\u5931\u8d25\" , \"code\" : [ \"token invalid\" ]}) ext_icon = request . POST . get ( 'ext_icon' , '' ) ext_name = request . POST . get ( 'ext_name' , '' ) config = self . get_config_by_id ( config_id ) extension = Extension . active_objects . filter ( type = \"storage\" ) . first () if ext_name : ext_name = unquote ( ext_name ) request . POST [ 'ext_name' ] = ext_name if ext_icon : data = { 'fileurl' : ext_icon } responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = config . tenant , request = request , packages = extension . package , data = data )) useless , ( fileinfo , extension ) = responses [ 0 ] request . POST [ 'ext_icon' ] = fileinfo self . bind_arkid_user ( ext_id , user , request . POST ) # token = refresh_token(user) # data = {\"token\": token} data = {} return JsonResponse ( self . success ()) @abstractmethod def get_img_url ( self ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Returns: url str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 \"\"\" pass def register_external_idp_schema ( self , idp_type , schema ): self . register_config_schema ( schema , self . package + '_' + idp_type ) self . register_composite_config_schema ( schema , idp_type , exclude = [ 'extension' ]) def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name , type ) server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): super () . update_tenant_config ( id , config , name , type ) config_created = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created def add_idp_login_buttons ( self , event , ** kwargs ): logger . info ( f ' { self . package } add idp login buttons start' ) data = {} configs = self . get_tenant_configs ( event . tenant ) for config in configs : img_url , redirect_url = self . get_img_and_redirect_url ( config ) if img_url and redirect_url : buttons = [{ \"img\" : config . config . get ( 'img_url' , img_url ), \"redirect\" : { \"url\" : redirect_url }, \"tooltip\" : config . name }] data [ config . id . hex ] = { \"login\" : { 'extend' : { \"buttons\" : buttons }}} logger . info ( f ' { self . package } add idp login buttions end' ) return data def account_unbind ( self , event , ** kwargs ): ''' \u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id ''' data = event . data pass @abstractmethod def get_img_and_redirect_url ( self , config ): \"\"\" \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, Returns: tuple: \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') \"\"\" pass","title":"ExternalIdpExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model","text":"TenantExtensionConfig(id, is_del, is_active, updated, created, tenant, extension, config, name, type) Source code in arkid/core/extension/external_idp.py class TenantExtensionConfig ( BaseModel ): class Meta ( object ): verbose_name = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) verbose_name_plural = _ ( \"\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e\" ) tenant = models . ForeignKey ( 'core.Tenant' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u79df\u6237' )) extension = models . ForeignKey ( 'Extension' , blank = False , on_delete = models . PROTECT , verbose_name = _ ( '\u63d2\u4ef6' )) config = models . JSONField ( blank = True , default = dict , verbose_name = _ ( 'Runtime Config' , '\u8fd0\u884c\u65f6\u914d\u7f6e' )) name = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u540d\u79f0' )) type = models . CharField ( max_length = 128 , default = '' , verbose_name = _ ( '\u7c7b\u578b' ))","title":"composite_model"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.config","text":"Runtime Config","title":"config"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.extension","text":"\u63d2\u4ef6","title":"extension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.name","text":"\u540d\u79f0","title":"name"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.type","text":"\u7c7b\u578b","title":"type"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.composite_model.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.account_unbind","text":"\u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id required Source code in arkid/core/extension/external_idp.py def account_unbind ( self , event , ** kwargs ): ''' \u5728\u8d26\u6237\u89e3\u7ed1\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6b64\u65b9\u6cd5 Params: event: \u4e8b\u4ef6\u53c2\u6570 data: \u6570\u636e user_id: \u7528\u6237id ''' data = event . data pass","title":"account_unbind()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.bind","text":"\u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a Source code in arkid/core/extension/external_idp.py @csrf_exempt def bind ( self , request , config_id ): \"\"\" \u5904\u7406\u7b2c\u4e09\u65b9\u8eab\u4efd\u6e90\u8fd4\u56de\u7684user_id\u548cArkID\u7684user\u4e4b\u95f4\u7684\u7ed1\u5b9a \"\"\" from urllib.parse import unquote from arkid.core.event import SAVE_FILE , dispatch_event , Event from arkid.extension.models import Extension ext_id = request . POST . get ( \"ext_id\" ) user = verify_token ( request ) if not user : return JsonResponse ({ \"error_msg\" : \"Token\u9a8c\u8bc1\u5931\u8d25\" , \"code\" : [ \"token invalid\" ]}) ext_icon = request . POST . get ( 'ext_icon' , '' ) ext_name = request . POST . get ( 'ext_name' , '' ) config = self . get_config_by_id ( config_id ) extension = Extension . active_objects . filter ( type = \"storage\" ) . first () if ext_name : ext_name = unquote ( ext_name ) request . POST [ 'ext_name' ] = ext_name if ext_icon : data = { 'fileurl' : ext_icon } responses = dispatch_event ( Event ( tag = SAVE_FILE , tenant = config . tenant , request = request , packages = extension . package , data = data )) useless , ( fileinfo , extension ) = responses [ 0 ] request . POST [ 'ext_icon' ] = fileinfo self . bind_arkid_user ( ext_id , user , request . POST ) # token = refresh_token(user) # data = {\"token\": token} data = {} return JsonResponse ( self . success ())","title":"bind()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.bind_arkid_user","text":"Parameters: Name Type Description Default ext_id str \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User ArkID\u7684\u7528\u6237 required Returns: Type Description {\"token\" xxx}: \u8fd4\u56detoken Source code in arkid/core/extension/external_idp.py @abstractmethod def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u7b2c\u4e09\u65b9\u767b\u5f55\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): ArkID\u7684\u7528\u6237 data (dict) request\u6570\u636e Returns: {\"token\":xxx}: \u8fd4\u56detoken \"\"\" pass","title":"bind_arkid_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.callback","text":"\u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 Source code in arkid/core/extension/external_idp.py def callback ( self , request , config_id ): \"\"\" \u62ff\u5230\u8bf7\u6c42\u4e2d\u643a\u5e26\u7684code\uff0c\u8c03\u7528get_ext_token_by_code\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u7684token\uff0c \u8c03\u7528get_user_info_by_ext_token\u83b7\u53d6\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f\uff0c \u62ff\u5230ext_id\u540e\uff0c\u5224\u65ad\u8be5ext_id\u662f\u5426\u5df2\u7ecf\u548cArkID\u4e2d\u7684\u7528\u6237\u7ed1\u5b9a\uff0c\u5982\u679c\u7ed1\u5b9a\u76f4\u63a5\u8fd4\u56de\u7ed1\u5b9a\u7528\u6237\u7684Token\uff0c \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u91cd\u5b9a\u5411\u5230\u524d\u7aef\u7ed1\u5b9a\u9875\u9762 \"\"\" code = self . get_auth_code_from_request ( request ) next_url = request . GET . get ( \"next\" , '' ) config = self . get_config_by_id ( config_id ) frontend_host = ( get_app_config () . get_frontend_host () . replace ( 'http://' , '' ) . replace ( 'https://' , '' ) ) # if next_url and ( # \"third_part_callback\" not in next_url or frontend_host not in next_url # ): # return JsonResponse({'error_msg': '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762'}) if next_url and ( frontend_host not in next_url ): return JsonResponse ({ 'error_msg' : '\u9519\u8bef\u7684\u8df3\u8f6c\u9875\u9762' }) if code : try : ext_token = self . get_ext_token ( config , code ) ext_id , ext_name , ext_icon , ext_info = self . get_ext_user_info ( config , code , ext_token ) except Exception as e : logger . error ( e ) args = e . args if len ( args ) == 1 and isinstance ( args [ 0 ], dict ): return JsonResponse ( e . args [ 0 ], json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : str ( e )}, json_dumps_params = { 'ensure_ascii' : False }) else : return JsonResponse ({ \"error_msg\" : \"\u6388\u6743\u7801\u4e22\u5931\" , \"code\" : [ \"required\" ]}, json_dumps_params = { 'ensure_ascii' : False }) context = self . get_arkid_token ( ext_id , ext_name , ext_icon , config ) query_string = urlencode ( context ) if next_url : url = f \" { next_url } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url ) else : frontend_host = get_app_config () . get_frontend_host () frontend_callback = f ' { frontend_host } /third_part_callback' url = f \" { frontend_callback } ? { query_string } \" url = unquote ( url ) return HttpResponseRedirect ( url )","title":"callback()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.create_tenant_config","text":"\u521b\u5efa\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default tenant Tenant \u79df\u6237 required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description TenantExtensionConfig \u521b\u5efa\u7684\u5bf9\u8c61 Source code in arkid/core/extension/external_idp.py def create_tenant_config ( self , tenant , config , name , type ): config_created = super () . create_tenant_config ( tenant , config , name , type ) server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created","title":"create_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_arkid_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default ext_id str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User ArkID\u7528\u6237 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_arkid_user ( self , ext_id ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: ext_id (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: ArkID\u7528\u6237 \"\"\" pass","title":"get_arkid_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_auth_code_from_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_auth_code_from_request ( self , request ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: request (HTTPRequest): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 Returns: str: \u6388\u6743\u7801 \"\"\" pass","title":"get_auth_code_from_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_authorize_url","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required callback_url str \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 required next_url str \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 required Returns: Type Description str \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL Source code in arkid/core/extension/external_idp.py @abstractmethod def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, callback_url (str): \u7531ArkID\u63d0\u4f9b\u7684\u56de\u8c03\u5730\u5740 next_url (str): \u524d\u7aef\u4f20\u6765\u7684\u8df3\u8f6c\u5730\u5740 Returns: str: \u7b2c\u4e09\u65b9\u767b\u5f55\u63d0\u4f9b\u7684\u8ba4\u8bc1URL \"\"\" pass","title":"get_authorize_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_ext_token","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default code str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code required config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Returns: Type Description str \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token Source code in arkid/core/extension/external_idp.py @abstractmethod def get_ext_token ( self , config , code ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e Returns: str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684token \"\"\" pass","title":"get_ext_token()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_ext_user_info","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code required token str \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token required Returns: Type Description dict \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f Source code in arkid/core/extension/external_idp.py @abstractmethod def get_ext_user_info ( self , config , code , token ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684code token (str): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684token Returns: dict: \u8fd4\u56de\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684\u7528\u6237\u4fe1\u606f \"\"\" pass","title":"get_ext_user_info()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_img_and_redirect_url","text":"\u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in arkid/core/extension/external_idp.py @abstractmethod def get_img_and_redirect_url ( self , config ): \"\"\" \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Args: config (arkid.extension.models.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, Returns: tuple: \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') \"\"\" pass","title":"get_img_and_redirect_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.get_img_url","text":"\u62bd\u8c61\u65b9\u6cd5 Returns: Type Description url str \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 Source code in arkid/core/extension/external_idp.py @abstractmethod def get_img_url ( self ): \"\"\" \u62bd\u8c61\u65b9\u6cd5 Returns: url str: \u8fd4\u56de\u7b2c\u4e09\u65b9\u767b\u5f55\u6309\u94ae\u7684\u56fe\u6807 \"\"\" pass","title":"get_img_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in arkid/core/extension/external_idp.py def load ( self ): urls = [ re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/login$' , self . login , name = f ' { self . pname } _login' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/callback$' , self . callback , name = f ' { self . pname } _callback' , ), re_path ( rf '^idp/ { self . pname } /(?P<config_id>[\\w-]+)/bind$' , self . bind , name = f ' { self . pname } _bind' , ), ] self . register_routers ( urls , False ) self . listen_event ( core_event . CREATE_LOGIN_PAGE_AUTH_FACTOR , self . add_idp_login_buttons ) self . listen_event ( core_event . ACCOUNT_UNBIND , self . account_unbind ) super () . load ()","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.login","text":"\u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b Source code in arkid/core/extension/external_idp.py def login ( self , request , config_id ): \"\"\" \u91cd\u5b9a\u5411\u5230\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u5165\u53e3\u5730\u5740, \u8be5\u5165\u53e3\u5730\u5740\u7531get_authorize_url\u63d0\u4f9b \"\"\" config = self . get_config_by_id ( config_id ) if not config : return JsonResponse ({ \"error_msg\" : \"\u6ca1\u6709\u627e\u5230\u767b\u5f55\u914d\u7f6e\" }) callback_url = config . config . get ( \"callback_url\" ) # callback_url = callback_url.replace( # \"localhost:8000\", \"xxxx.vaiwan.com\" # ) # \u5185\u7f51\u7a7f\u900f\u6d4b\u8bd5\u7528 next_url = request . GET . get ( \"next\" , None ) if next_url is not None : next_url = \"?next=\" + next_url else : next_url = \"\" url = self . get_authorize_url ( config , callback_url , next_url ) return HttpResponseRedirect ( url )","title":"login()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#arkid.core.extension.external_idp.ExternalIdpExtension.update_tenant_config","text":"\u66f4\u65b0\u8fd0\u884c\u65f6\u914d\u7f6e Parameters: Name Type Description Default id str config_id required config dict config required name str \u8fd0\u884c\u65f6\u914d\u7f6e\u540d\u5b57 required type str \u914d\u7f6e\u7c7b\u578b required Returns: Type Description bool \u66f4\u65b0\u6210\u529fTrue\uff0c\u6ca1\u6709\u627e\u5230\u8be5\u914d\u7f6e\u8fd4\u56deFalse Source code in arkid/core/extension/external_idp.py def update_tenant_config ( self , id , config , name , type ): super () . update_tenant_config ( id , config , name , type ) config_created = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () server_host = get_app_config () . get_host () login_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _login' , args = [ config_created . id ], ) callback_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _callback' , args = [ config_created . id ], ) bind_url = server_host + reverse ( f 'api: { self . pname } : { self . pname } _bind' , args = [ config_created . id ], ) # img_url = self.get_img_url() config [ \"login_url\" ] = login_url config [ \"callback_url\" ] = callback_url config [ \"bind_url\" ] = bind_url # config[\"img_url\"] = img_url config_created . config = config config_created . save () return config_created","title":"update_tenant_config()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#exemplary","text":"","title":"Exemplary"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension","text":"Source code in extension_root/com_longgui_external_idp_github/__init__.py class ExternalIdpGithubExtension ( ExternalIdpExtension ): def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema ) def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" )","title":"ExternalIdpGithubExtension"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.bind_arkid_user","text":"Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 required Source code in extension_root/com_longgui_external_idp_github/__init__.py def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save ()","title":"bind_arkid_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_arkid_user","text":"Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None","title":"get_arkid_user()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_auth_code_from_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code","title":"get_auth_code_from_request()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_authorize_url","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required redirect_uri str \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 required Returns: Type Description str \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url","title":"get_authorize_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_ext_token","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required Returns: Type Description str \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ]","title":"get_ext_token()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_ext_user_info","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required token str Github\u8fd4\u56de\u7684access_token required Returns: Type Description tuple \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response","title":"get_ext_user_info()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_img_and_redirect_url","text":"\u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" )","title":"get_img_and_redirect_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_img_url","text":"\u8fd4\u56deGithub\u7684\u56fe\u6807URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL","title":"get_img_url()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Plug%20-In%20Classification/WorthMentioning/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_external_idp_github/__init__.py def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema )","title":"load()"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Test%20And%20Release/Release/","text":"","title":"Release"},{"location":"%20%20Developer%20Guide/%20Plug%20-In%20Development/%20Test%20And%20Release/Test/","text":"","title":"Test"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/","text":"Data table definition # arkid.core.models # AccountLifeCrontab ( BaseModel ) django-model # AccountLifeCrontab(id, is_del, is_active, updated, created, name, tenant, config) config : JSONField blank django-field nullable # Config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField blank django-field nullable # name tenant : ForeignKey django-field # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 App ( BaseModel , ExpandModel ) django-model # App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification) arkstore_app_id : CharField blank django-field nullable # Arkstore app id arkstore_category_id : IntegerField django-field nullable # ArkStore\u5206\u7c7bID config : OneToOneField blank django-field nullable # config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 description : TextField blank django-field nullable # description entry_permission : ForeignKey blank django-field nullable # entry permission id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 logo : CharField blank django-field nullable # logo name : CharField django-field # name package : CharField blank django-field nullable # package secret : CharField blank django-field nullable # secret skip_token_verification : BooleanField django-field # Skip Token Verification tenant : ForeignKey django-field # tenant type : CharField django-field # type updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : CharField blank django-field nullable # url AppExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification) arkstore_app_id : CharField blank django-field nullable # Arkstore app id arkstore_category_id : IntegerField django-field nullable # ArkStore\u5206\u7c7bID config : OneToOneField blank django-field nullable # config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 description : TextField blank django-field nullable # description entry_permission : ForeignKey blank django-field nullable # entry permission id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 logo : CharField blank django-field nullable # logo name : CharField django-field # name package : CharField blank django-field nullable # package secret : CharField blank django-field nullable # secret skip_token_verification : BooleanField django-field # Skip Token Verification tenant : ForeignKey django-field # tenant type : CharField django-field # type updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : CharField blank django-field nullable # url AppGroup ( BaseModel , ExpandModel ) django-model # AppGroup(id, is_del, is_active, updated, created, tenant, name, parent) apps : ManyToManyField blank django-field # APP List created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # name parent : ForeignKey blank django-field nullable # parent tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 AppGroupExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # AppGroup(id, is_del, is_active, updated, created, tenant, name, parent) apps : ManyToManyField blank django-field # APP List created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # name parent : ForeignKey blank django-field nullable # parent tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 AppPermissionResult ( BaseModel , ExpandModel ) django-model # AppPermissionResult(id, is_del, is_active, updated, created, self_app, tenant, app, result) app : ForeignKey blank django-field nullable # App created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 result : CharField blank django-field nullable # \u6743\u9650\u7ed3\u679c self_app : ForeignKey blank django-field nullable # \u81ea\u8eab\u5e94\u7528 tenant : ForeignKey django-field # \u79df\u6237 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 ApproveAction ( BaseModel , ExpandModel ) django-model # ApproveAction(id, is_del, is_active, updated, created, name, path, method, description, extension, tenant) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 description : TextField blank django-field nullable # Description extension : ForeignKey django-field nullable # Extension id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 method : CharField django-field # Request Method name : CharField django-field # Name path : CharField django-field # Request Path tenant : ForeignKey django-field nullable # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 ApproveRequest ( BaseModel , ExpandModel ) django-model # ApproveRequest(id, is_del, is_active, updated, created, user, tenant, action, environ, body, status, request_path, request_get, request_post) action : ForeignKey django-field # Request Action body : BinaryField django-field # Request Body created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 environ : JSONField django-field # Request Environ id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 request_get : JSONField django-field nullable # Request GET request_path : CharField django-field # Request Path request_post : JSONField django-field nullable # Request POST status : CharField django-field # Status tenant : ForeignKey django-field nullable # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 user : ForeignKey django-field # User EmptyModel ( Model ) django-model # EmptyModel(id) ExpiringToken ( Model ) django-model # ExpiringToken(user, token, created, active_date) active_date : DateField blank django-field nullable # Active Date created : DateTimeField blank django-field # Created token : CharField django-field # Token user : OneToOneField django-field # User expired ( self , tenant ) # Return boolean indicating token expiration. GroupPermissionResult ( BaseModel , ExpandModel ) django-model # GroupPermissionResult(id, is_del, is_active, updated, created, user_group, tenant, app, result) app : ForeignKey blank django-field nullable # App created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 result : CharField blank django-field nullable # \u6743\u9650\u7ed3\u679c tenant : ForeignKey django-field # \u79df\u6237 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 user_group : ForeignKey django-field # \u7528\u6237\u5206\u7ec4 LanguageData ( BaseModel ) django-model # LanguageData(id, is_del, is_active, updated, created, name, extension, extension_data, custom_data) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 extension : OneToOneField django-field nullable # Extension extension_data : JSONField blank django-field nullable # \u63d2\u4ef6\u81ea\u5e26\u6570\u636e id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # Name updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 Message ( BaseModel , ExpandModel ) django-model # Message(id, is_del, is_active, updated, created, title, user, content, readed_status, url, sender) content : TextField blank django-field nullable # content created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 readed_status : BooleanField django-field # readed_status sender : ForeignKey blank django-field nullable # Sender title : CharField blank django-field nullable # title updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : URLField blank django-field nullable # url user : ForeignKey django-field # User MessageExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # Message(id, is_del, is_active, updated, created, title, user, content, readed_status, url, sender) content : TextField blank django-field nullable # content created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 readed_status : BooleanField django-field # readed_status sender : ForeignKey blank django-field nullable # Sender title : CharField blank django-field nullable # title updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : URLField blank django-field nullable # url user : ForeignKey django-field # User Node ( BaseModel ) django-model # Node(id, is_del, is_active, updated, created, ip) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID ip : CharField django-field # IP is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 OpenPermission ( BaseModel ) django-model # OpenPermission(id, is_del, is_active, updated, created, tenant, system_permission, permission) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 permission : ForeignKey blank django-field nullable # permission system_permission : ForeignKey blank django-field nullable # system permission tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 Permission ( PermissionAbstract ) django-model # Permission(id, is_del, is_active, updated, created, name, code, tenant, category, is_system, operation_id, describe, is_update, is_open, is_open_other_user, sort_id, app, parent) app : ForeignKey blank django-field nullable # APP category : CharField django-field # category code : CharField django-field # Code container : ManyToManyField blank django-field # Permission List created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 describe : JSONField blank django-field # describe id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_open : BooleanField django-field # is open is_open_other_user : BooleanField django-field # is open other user is_system : BooleanField django-field # System Permission is_update : BooleanField django-field # \u662f\u5426\u66f4\u65b0 name : CharField django-field # Name operation_id : CharField blank django-field nullable # Operation ID parent : ForeignKey blank django-field nullable # Parent sort_id : IntegerField django-field # Sort ID tenant : ForeignKey blank django-field nullable # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 save ( self , * args , ** kwargs ) # Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set. PermissionAbstract ( BaseModel , ExpandModel ) django-model # category : CharField django-field # category code : CharField django-field # Code created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 describe : JSONField blank django-field # describe id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_open : BooleanField django-field # is open is_open_other_user : BooleanField django-field # is open other user is_system : BooleanField django-field # System Permission is_update : BooleanField django-field # \u662f\u5426\u66f4\u65b0 name : CharField django-field # Name operation_id : CharField blank django-field nullable # Operation ID tenant : ForeignKey blank django-field nullable # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 Platform ( BaseModel , ExpandModel ) django-model # Platform(id, is_del, is_active, updated, created, is_saas, is_need_rent, frontend_url) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 frontend_url : URLField blank django-field nullable # ArkId\u8bbf\u95ee\u5730\u5740 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_need_rent : BooleanField django-field # Is Tenant Need Rent Extension is_saas : BooleanField django-field # SaaS Switch updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 PrivateApp ( BaseModel ) django-model # PrivateApp(id, is_del, is_active, updated, created, tenant, name, url, logo, description, arkstore_category_id, arkstore_app_id, status, values_data) arkstore_app_id : CharField blank django-field nullable # Arkstore app id arkstore_category_id : IntegerField django-field nullable # ArkStore\u5206\u7c7bID created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 description : TextField blank django-field nullable # description id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 logo : CharField blank django-field nullable # logo name : CharField django-field # name status : CharField django-field # Status tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 url : CharField blank django-field nullable # url values_data : TextField blank django-field nullable # Values Data ScimSyncLog ( BaseModel ) django-model # ScimSyncLog(id, is_del, is_active, updated, created, config, start_time, end_time, users_created, users_deleted, groups_created, groups_deleted, error) config : ForeignKey django-field # config created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 end_time : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 error : TextField blank django-field nullable # SCIM Sycn error groups_created : IntegerField blank django-field nullable # New Groups Created groups_deleted : IntegerField blank django-field nullable # Groups Deleted id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 start_time : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 users_created : IntegerField blank django-field nullable # New Users Created users_deleted : IntegerField blank django-field nullable # Users Deleted SystemPermission ( PermissionAbstract ) django-model # SystemPermission(id, is_del, is_active, updated, created, name, code, tenant, category, is_system, operation_id, describe, is_update, is_open, is_open_other_user, sort_id, parent) category : CharField django-field # category code : CharField django-field # Code container : ManyToManyField blank django-field # SystemPermission List created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 describe : JSONField blank django-field # describe id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_open : BooleanField django-field # is open is_open_other_user : BooleanField django-field # is open other user is_system : BooleanField django-field # System Permission is_update : BooleanField django-field # \u662f\u5426\u66f4\u65b0 name : CharField django-field # Name operation_id : CharField blank django-field nullable # Operation ID parent : ForeignKey blank django-field nullable # Parent sort_id : IntegerField django-field # Sort ID tenant : ForeignKey blank django-field nullable # Tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 save ( self , * args , ** kwargs ) # Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set. Tenant ( BaseModel , ExpandModel ) django-model # Tenant(id, is_del, is_active, updated, created, name, slug, icon, token_duration_minutes) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 icon : URLField blank django-field nullable # Icon id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_platform_tenant property readonly # \u662f\u5426\u662f\u5e73\u53f0\u79df\u6237 name : CharField django-field # Name slug : SlugField blank django-field nullable # Slug token_duration_minutes : IntegerField django-field # Token Duration Minutes updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 users : ManyToManyField blank django-field # users TenantExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # Tenant(id, is_del, is_active, updated, created, name, slug, icon, token_duration_minutes) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 icon : URLField blank django-field nullable # Icon id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_platform_tenant property readonly # \u662f\u5426\u662f\u5e73\u53f0\u79df\u6237 name : CharField django-field # Name slug : SlugField blank django-field nullable # Slug token_duration_minutes : IntegerField django-field # Token Duration Minutes updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 users : ManyToManyField blank django-field # users User ( BaseModel , ExpandModel ) django-model # User(id, is_del, is_active, updated, created, username, avatar, is_platform_user, tenant, scim_external_id) avatar : URLField blank django-field nullable # Avatar created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_platform_user : BooleanField django-field # Is Platform User scim_external_id : CharField blank django-field nullable # scim external id tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 username : CharField django-field # Username save ( self , * args , ** kwargs ) # Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set. UserExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # User(id, is_del, is_active, updated, created, username, avatar, is_platform_user, tenant, scim_external_id) avatar : URLField blank django-field nullable # Avatar created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 is_platform_user : BooleanField django-field # Is Platform User scim_external_id : CharField blank django-field nullable # scim external id tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 username : CharField django-field # Username save ( self , * args , ** kwargs ) # Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set. UserGroup ( BaseModel , ExpandModel ) django-model # UserGroup(id, is_del, is_active, updated, created, tenant, name, parent, permission, scim_external_id) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # name parent : ForeignKey blank django-field nullable # parent permission : ForeignKey blank django-field nullable # permission scim_external_id : CharField blank django-field nullable # scim external id tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 users : ManyToManyField blank django-field # User List UserGroupExpandAbstract ( BaseModel ) django-model # created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 target : OneToOneField blank django-field # target updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 foreign_key ( BaseModel , ExpandModel ) django-model # UserGroup(id, is_del, is_active, updated, created, tenant, name, parent, permission, scim_external_id) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 name : CharField django-field # name parent : ForeignKey blank django-field nullable # parent permission : ForeignKey blank django-field nullable # permission scim_external_id : CharField blank django-field nullable # scim external id tenant : ForeignKey django-field # tenant updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 users : ManyToManyField blank django-field # User List UserPermissionResult ( BaseModel , ExpandModel ) django-model # UserPermissionResult(id, is_del, is_active, updated, created, user, tenant, app, result) app : ForeignKey blank django-field nullable # App created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 result : CharField blank django-field nullable # \u6743\u9650\u7ed3\u679c tenant : ForeignKey django-field # \u79df\u6237 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 user : ForeignKey django-field # \u7528\u6237 UserPersonalSettings ( BaseModel , ExpandModel ) django-model # UserPersonalSettings(id, is_del, is_active, updated, created, user, tenant, settings) created : DateTimeField blank django-field nullable # \u521b\u5efa\u65f6\u95f4 id : UUIDField django-field # ID is_active : BooleanField django-field # \u662f\u5426\u53ef\u7528 is_del : BooleanField django-field # \u662f\u5426\u5220\u9664 settings : JSONField django-field # \u7528\u6237\u4e2a\u4eba\u8bbe\u7f6e tenant : ForeignKey django-field # \u79df\u6237 updated : DateTimeField blank django-field nullable # \u66f4\u65b0\u65f6\u95f4 user : ForeignKey django-field # \u7528\u6237 Kernel extension # arkid.core.expand # ExpandManager ( Manager ) # Enables changing the default queryset function. get_queryset ( self , filters = {}) # Return a new QuerySet object. Subclasses can override this method to customize the behavior of the Manager.","title":"Data table definition"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#data-table-definition","text":"","title":"Data table definition"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models","text":"","title":"models"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab","text":"AccountLifeCrontab(id, is_del, is_active, updated, created, name, tenant, config)","title":"AccountLifeCrontab"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.config","text":"Config","title":"config"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AccountLifeCrontab.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App","text":"App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification)","title":"App"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.arkstore_app_id","text":"Arkstore app id","title":"arkstore_app_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.arkstore_category_id","text":"ArkStore\u5206\u7c7bID","title":"arkstore_category_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.config","text":"config","title":"config"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.description","text":"description","title":"description"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.entry_permission","text":"entry permission","title":"entry_permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.logo","text":"logo","title":"logo"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.package","text":"package","title":"package"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.secret","text":"secret","title":"secret"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.skip_token_verification","text":"Skip Token Verification","title":"skip_token_verification"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.type","text":"type","title":"type"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.App.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract","text":"","title":"AppExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key","text":"App(id, is_del, is_active, updated, created, tenant, name, url, logo, description, type, secret, config, package, entry_permission, arkstore_category_id, arkstore_app_id, skip_token_verification)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.arkstore_app_id","text":"Arkstore app id","title":"arkstore_app_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.arkstore_category_id","text":"ArkStore\u5206\u7c7bID","title":"arkstore_category_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.config","text":"config","title":"config"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.description","text":"description","title":"description"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.entry_permission","text":"entry permission","title":"entry_permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.logo","text":"logo","title":"logo"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.package","text":"package","title":"package"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.secret","text":"secret","title":"secret"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.skip_token_verification","text":"Skip Token Verification","title":"skip_token_verification"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.type","text":"type","title":"type"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppExpandAbstract.foreign_key.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup","text":"AppGroup(id, is_del, is_active, updated, created, tenant, name, parent)","title":"AppGroup"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.apps","text":"APP List","title":"apps"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.parent","text":"parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroup.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract","text":"","title":"AppGroupExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key","text":"AppGroup(id, is_del, is_active, updated, created, tenant, name, parent)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.apps","text":"APP List","title":"apps"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.parent","text":"parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppGroupExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult","text":"AppPermissionResult(id, is_del, is_active, updated, created, self_app, tenant, app, result)","title":"AppPermissionResult"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.app","text":"App","title":"app"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.result","text":"\u6743\u9650\u7ed3\u679c","title":"result"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.self_app","text":"\u81ea\u8eab\u5e94\u7528","title":"self_app"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.AppPermissionResult.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction","text":"ApproveAction(id, is_del, is_active, updated, created, name, path, method, description, extension, tenant)","title":"ApproveAction"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.description","text":"Description","title":"description"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.extension","text":"Extension","title":"extension"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.method","text":"Request Method","title":"method"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.path","text":"Request Path","title":"path"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveAction.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest","text":"ApproveRequest(id, is_del, is_active, updated, created, user, tenant, action, environ, body, status, request_path, request_get, request_post)","title":"ApproveRequest"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.action","text":"Request Action","title":"action"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.body","text":"Request Body","title":"body"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.environ","text":"Request Environ","title":"environ"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.request_get","text":"Request GET","title":"request_get"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.request_path","text":"Request Path","title":"request_path"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.request_post","text":"Request POST","title":"request_post"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.status","text":"Status","title":"status"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ApproveRequest.user","text":"User","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.EmptyModel","text":"EmptyModel(id)","title":"EmptyModel"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken","text":"ExpiringToken(user, token, created, active_date)","title":"ExpiringToken"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken.active_date","text":"Active Date","title":"active_date"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken.created","text":"Created","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken.token","text":"Token","title":"token"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken.user","text":"User","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ExpiringToken.expired","text":"Return boolean indicating token expiration.","title":"expired()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult","text":"GroupPermissionResult(id, is_del, is_active, updated, created, user_group, tenant, app, result)","title":"GroupPermissionResult"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.app","text":"App","title":"app"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.result","text":"\u6743\u9650\u7ed3\u679c","title":"result"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.GroupPermissionResult.user_group","text":"\u7528\u6237\u5206\u7ec4","title":"user_group"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData","text":"LanguageData(id, is_del, is_active, updated, created, name, extension, extension_data, custom_data)","title":"LanguageData"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.extension","text":"Extension","title":"extension"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.extension_data","text":"\u63d2\u4ef6\u81ea\u5e26\u6570\u636e","title":"extension_data"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.LanguageData.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message","text":"Message(id, is_del, is_active, updated, created, title, user, content, readed_status, url, sender)","title":"Message"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.content","text":"content","title":"content"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.readed_status","text":"readed_status","title":"readed_status"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.sender","text":"Sender","title":"sender"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.title","text":"title","title":"title"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Message.user","text":"User","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract","text":"","title":"MessageExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key","text":"Message(id, is_del, is_active, updated, created, title, user, content, readed_status, url, sender)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.content","text":"content","title":"content"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.readed_status","text":"readed_status","title":"readed_status"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.sender","text":"Sender","title":"sender"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.title","text":"title","title":"title"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.MessageExpandAbstract.foreign_key.user","text":"User","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node","text":"Node(id, is_del, is_active, updated, created, ip)","title":"Node"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.ip","text":"IP","title":"ip"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Node.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission","text":"OpenPermission(id, is_del, is_active, updated, created, tenant, system_permission, permission)","title":"OpenPermission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.permission","text":"permission","title":"permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.system_permission","text":"system permission","title":"system_permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.OpenPermission.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission","text":"Permission(id, is_del, is_active, updated, created, name, code, tenant, category, is_system, operation_id, describe, is_update, is_open, is_open_other_user, sort_id, app, parent)","title":"Permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.app","text":"APP","title":"app"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.category","text":"category","title":"category"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.code","text":"Code","title":"code"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.container","text":"Permission List","title":"container"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.describe","text":"describe","title":"describe"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_open","text":"is open","title":"is_open"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_open_other_user","text":"is open other user","title":"is_open_other_user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_system","text":"System Permission","title":"is_system"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.is_update","text":"\u662f\u5426\u66f4\u65b0","title":"is_update"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.operation_id","text":"Operation ID","title":"operation_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.parent","text":"Parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.sort_id","text":"Sort ID","title":"sort_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Permission.save","text":"Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set.","title":"save()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract","text":"","title":"PermissionAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.category","text":"category","title":"category"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.code","text":"Code","title":"code"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.describe","text":"describe","title":"describe"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_open","text":"is open","title":"is_open"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_open_other_user","text":"is open other user","title":"is_open_other_user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_system","text":"System Permission","title":"is_system"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.is_update","text":"\u662f\u5426\u66f4\u65b0","title":"is_update"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.operation_id","text":"Operation ID","title":"operation_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PermissionAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform","text":"Platform(id, is_del, is_active, updated, created, is_saas, is_need_rent, frontend_url)","title":"Platform"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.frontend_url","text":"ArkId\u8bbf\u95ee\u5730\u5740","title":"frontend_url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.is_need_rent","text":"Is Tenant Need Rent Extension","title":"is_need_rent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.is_saas","text":"SaaS Switch","title":"is_saas"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Platform.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp","text":"PrivateApp(id, is_del, is_active, updated, created, tenant, name, url, logo, description, arkstore_category_id, arkstore_app_id, status, values_data)","title":"PrivateApp"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.arkstore_app_id","text":"Arkstore app id","title":"arkstore_app_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.arkstore_category_id","text":"ArkStore\u5206\u7c7bID","title":"arkstore_category_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.description","text":"description","title":"description"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.logo","text":"logo","title":"logo"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.status","text":"Status","title":"status"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.url","text":"url","title":"url"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.PrivateApp.values_data","text":"Values Data","title":"values_data"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog","text":"ScimSyncLog(id, is_del, is_active, updated, created, config, start_time, end_time, users_created, users_deleted, groups_created, groups_deleted, error)","title":"ScimSyncLog"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.config","text":"config","title":"config"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.end_time","text":"\u66f4\u65b0\u65f6\u95f4","title":"end_time"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.error","text":"SCIM Sycn error","title":"error"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.groups_created","text":"New Groups Created","title":"groups_created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.groups_deleted","text":"Groups Deleted","title":"groups_deleted"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.start_time","text":"\u521b\u5efa\u65f6\u95f4","title":"start_time"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.users_created","text":"New Users Created","title":"users_created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.ScimSyncLog.users_deleted","text":"Users Deleted","title":"users_deleted"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission","text":"SystemPermission(id, is_del, is_active, updated, created, name, code, tenant, category, is_system, operation_id, describe, is_update, is_open, is_open_other_user, sort_id, parent)","title":"SystemPermission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.category","text":"category","title":"category"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.code","text":"Code","title":"code"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.container","text":"SystemPermission List","title":"container"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.describe","text":"describe","title":"describe"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_open","text":"is open","title":"is_open"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_open_other_user","text":"is open other user","title":"is_open_other_user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_system","text":"System Permission","title":"is_system"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.is_update","text":"\u662f\u5426\u66f4\u65b0","title":"is_update"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.operation_id","text":"Operation ID","title":"operation_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.parent","text":"Parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.sort_id","text":"Sort ID","title":"sort_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.tenant","text":"Tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.SystemPermission.save","text":"Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set.","title":"save()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant","text":"Tenant(id, is_del, is_active, updated, created, name, slug, icon, token_duration_minutes)","title":"Tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.icon","text":"Icon","title":"icon"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.is_platform_tenant","text":"\u662f\u5426\u662f\u5e73\u53f0\u79df\u6237","title":"is_platform_tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.slug","text":"Slug","title":"slug"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.token_duration_minutes","text":"Token Duration Minutes","title":"token_duration_minutes"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.Tenant.users","text":"users","title":"users"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract","text":"","title":"TenantExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key","text":"Tenant(id, is_del, is_active, updated, created, name, slug, icon, token_duration_minutes)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.icon","text":"Icon","title":"icon"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.is_platform_tenant","text":"\u662f\u5426\u662f\u5e73\u53f0\u79df\u6237","title":"is_platform_tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.name","text":"Name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.slug","text":"Slug","title":"slug"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.token_duration_minutes","text":"Token Duration Minutes","title":"token_duration_minutes"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.TenantExpandAbstract.foreign_key.users","text":"users","title":"users"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User","text":"User(id, is_del, is_active, updated, created, username, avatar, is_platform_user, tenant, scim_external_id)","title":"User"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.avatar","text":"Avatar","title":"avatar"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.is_platform_user","text":"Is Platform User","title":"is_platform_user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.scim_external_id","text":"scim external id","title":"scim_external_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.username","text":"Username","title":"username"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.User.save","text":"Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set.","title":"save()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract","text":"","title":"UserExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key","text":"User(id, is_del, is_active, updated, created, username, avatar, is_platform_user, tenant, scim_external_id)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.avatar","text":"Avatar","title":"avatar"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.is_platform_user","text":"Is Platform User","title":"is_platform_user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.scim_external_id","text":"scim external id","title":"scim_external_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.username","text":"Username","title":"username"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserExpandAbstract.foreign_key.save","text":"Save the current instance. Override this in a subclass if you want to control the saving process. The 'force_insert' and 'force_update' parameters can be used to insist that the \"save\" must be an SQL insert or update (or equivalent for non-SQL backends), respectively. Normally, they should not be set.","title":"save()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup","text":"UserGroup(id, is_del, is_active, updated, created, tenant, name, parent, permission, scim_external_id)","title":"UserGroup"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.parent","text":"parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.permission","text":"permission","title":"permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.scim_external_id","text":"scim external id","title":"scim_external_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroup.users","text":"User List","title":"users"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract","text":"","title":"UserGroupExpandAbstract"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.target","text":"target","title":"target"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key","text":"UserGroup(id, is_del, is_active, updated, created, tenant, name, parent, permission, scim_external_id)","title":"foreign_key"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.name","text":"name","title":"name"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.parent","text":"parent","title":"parent"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.permission","text":"permission","title":"permission"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.scim_external_id","text":"scim external id","title":"scim_external_id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.tenant","text":"tenant","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserGroupExpandAbstract.foreign_key.users","text":"User List","title":"users"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult","text":"UserPermissionResult(id, is_del, is_active, updated, created, user, tenant, app, result)","title":"UserPermissionResult"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.app","text":"App","title":"app"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.result","text":"\u6743\u9650\u7ed3\u679c","title":"result"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPermissionResult.user","text":"\u7528\u6237","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings","text":"UserPersonalSettings(id, is_del, is_active, updated, created, user, tenant, settings)","title":"UserPersonalSettings"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.created","text":"\u521b\u5efa\u65f6\u95f4","title":"created"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.id","text":"ID","title":"id"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.is_active","text":"\u662f\u5426\u53ef\u7528","title":"is_active"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.is_del","text":"\u662f\u5426\u5220\u9664","title":"is_del"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.settings","text":"\u7528\u6237\u4e2a\u4eba\u8bbe\u7f6e","title":"settings"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.tenant","text":"\u79df\u6237","title":"tenant"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.updated","text":"\u66f4\u65b0\u65f6\u95f4","title":"updated"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.models.UserPersonalSettings.user","text":"\u7528\u6237","title":"user"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#kernel-extension","text":"","title":"Kernel extension"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.expand","text":"","title":"expand"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.expand.ExpandManager","text":"Enables changing the default queryset function.","title":"ExpandManager"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/DataTableDefinition/#arkid.core.expand.ExpandManager.get_queryset","text":"Return a new QuerySet object. Subclasses can override this method to customize the behavior of the Manager.","title":"get_queryset()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/","text":"Kernel event # arkid.core.event # Event # __init__ ( self , tag , tenant , request = None , response = None , packages = [], data = None , uuid = None ) special # \u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7c7b\u578b\u552f\u4e00\u6807\u8bc6 required tenant Tenant \u79df\u6237 required request HttpRequest django http request None response HttpResponse django http response None packages list[str] \u63d2\u4ef6package\u6807\u8bc6 [] data _type_ \u4e8b\u4ef6data None uuid str \u4e8b\u4ef6\u5305\u542b\u7684request_uuid None EventType # __init__ ( self , tag , name , data_schema = None , result_schema = None , request_schema = None , response_schema = None , description = '' ) special # \u4e8b\u4ef6\u7c7b\u578b\u7528\u4e8e\u6ce8\u518c \u6ce8\u610f event request \u5207\u52ff\u4fee\u6539 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7c7b\u578b\u552f\u4e00\u6807\u8bc6 required name str \u4e8b\u4ef6\u7c7b\u578b\u540d\u5b57 required data_schema Schema \u8f93\u5165data\u7684Schema None result_schema Schema \u4e8b\u4ef6\u5904\u7406\u56de\u8c03\u51fd\u6570 return \u7ed3\u679c Schema None request_schema Schema django http request Schema None response_schema Schema django http response Schema None description str \u4e8b\u4ef6\u7c7b\u578b\u63cf\u8ff0 ''","title":"Kernel event"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#kernel-event","text":"","title":"Kernel event"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#arkid.core.event","text":"","title":"event"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#arkid.core.event.Event","text":"","title":"Event"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#arkid.core.event.Event.__init__","text":"\u4e8b\u4ef6 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7c7b\u578b\u552f\u4e00\u6807\u8bc6 required tenant Tenant \u79df\u6237 required request HttpRequest django http request None response HttpResponse django http response None packages list[str] \u63d2\u4ef6package\u6807\u8bc6 [] data _type_ \u4e8b\u4ef6data None uuid str \u4e8b\u4ef6\u5305\u542b\u7684request_uuid None","title":"__init__()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#arkid.core.event.EventType","text":"","title":"EventType"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/EventList/#arkid.core.event.EventType.__init__","text":"\u4e8b\u4ef6\u7c7b\u578b\u7528\u4e8e\u6ce8\u518c \u6ce8\u610f event request \u5207\u52ff\u4fee\u6539 Parameters: Name Type Description Default tag str \u4e8b\u4ef6\u7c7b\u578b\u552f\u4e00\u6807\u8bc6 required name str \u4e8b\u4ef6\u7c7b\u578b\u540d\u5b57 required data_schema Schema \u8f93\u5165data\u7684Schema None result_schema Schema \u4e8b\u4ef6\u5904\u7406\u56de\u8c03\u51fd\u6570 return \u7ed3\u679c Schema None request_schema Schema django http request Schema None response_schema Schema django http response Schema None description str \u4e8b\u4ef6\u7c7b\u578b\u63cf\u8ff0 ''","title":"__init__()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/","text":"Front -end interface # Kind tips Before reading the document\uff0cI hope you have read Openapi-Plus documentation You have used or browsed the front -end interface of the ARKID The front -end interface mainly contains the following modules\uff1a login interface Front -end address interface Functional interface login interface # The login interface is mainly passed /api/v1/tenant/{tenant_id}/login_page/ Page described by the interface to describe information generation\u3002 Login interface configuration interface Return content includes two items\uff0cAs shown in the table below\u3002For example, as shown in the figure below\u3002 Keyword name Detail description data [Page surface configuration] (#_3) Rendering/Different page forms such as registration tenant [Practitioner Information] (#_4) Rendering tenants icons and names, etc. Page surface configuration # Page surface configuration information can be caused by it Authentication Module dynamic additional income\u3002There is information such as the user name and password login page configuration and other information\u3002As shown in FIG\uff0cPage surface configuration generates all different forms and buttons in the login module\u3002The main page items include the login page\u3001Register page and forget the password page\u3002Since the rendering process of three pages items is consistent\uff0cHere we only introduce the generation process and precautions of the login page item\u3002 dataThe value corresponding to the keyword is the description information of the respective page of the page item\uff0cEach item contains forms bottoms extend name Field information\u3002 Keyword name name Page configuration item name forms Forms in different ways bottoms Found operation of the table extend worth mentioning Table item forms formsUsed to render different ways form items\u3002For example, login can exist \u2460 Username password login method\uff1b\u2461 SMS verification code login method Wait\u3002And it contains label items submit Field information\u3002 Keyword Detail label Table title name items Detailed expression of each form item submit Submitting operation expression of the form item itemsForm items are used to display and enter user names\u3001password\u3001Mobile phone number and other information\uff0cAnd with functional operations such as sending verification codes\u3002 Keyword meaning Detail name Field key Key returned when submitted type Table type type \u2460 text \u2461 password \u2462 hidden placeholder Tables shareholding - readonly Table item read only - append Suffering See the submit operation instructions\uff0c Generally used for'Send the verification code'and'Graphical Code'Wait submitTo submit the Items information entered by the user\u3002 Keyword Detail http Button operation content\uff0cIncluding URL/path/Params and other content title Button operation name redirect Click the redirection to the address after clicking agreement Registration agreement description delay time delay\uff0c Used to send verification codes and other operations gopage Page name\uff0cUsed to a page in Data img The map's address\uff0cIcon display for third -party login long Boolean value\uff0cLong type button, Control of the length of the button prepend Button prefix text\uff0cCommonly used for the bottom button at the bottom of the form tooltip The button move into the prompt information description\uff0cCommonly used for third -party login buttons Bottom operation bottoms bottomsUsed to switch between different pages configuration items\u3002 In the front -end page display\uff0cCommon No account yet\uff0cSign up now and Forgot password Waiting for the button\u3002The operation attributes of this type generally include in the above description prepend gopage Equal attribute\u3002 worth mentioning extend extendOnly in the login page configuration item\uff0cUsed to display different third -party login items\u3002It is expressed in the above picture as the multiple icons below\u3002 extendDepend on title buttons Two items\u3002Title is the title\uff1bButtons configures for the button for each third party login\u3002 buttonsThe operating attributes in it generally include img redirect tooltip Equity information\u3002 Configuration Example The information returned in the interface is as described as described below\uff1a { \"data\" : { \"login\" : { \"name\" : \"login\" , \"forms\" : [ { \"label\" : \"Username password login\" , \"items\" : [ { \"value\" : \"\" , \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"username\" , }, { \"value\" : \"\" , \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"password\" , }, ], \"submit\" : { \"http\" : { \"url\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"params\" : null , }, \"title\" : \"Log in\" , \"long\" : true , }, } ], \"bottoms\" : [ { \"prepend\" : \"No account yet\uff0c\" , \"gopage\" : \"register\" , \"title\" : \"Sign up now\" , }, { \"prepend\" : null , \"gopage\" : \"password\" , \"title\" : \"Forgot password\" , }, ], \"extend\" : { \"title\" : \"worth mentioning\" , \"buttons\" : [ { \"img\" : \"xxx.png\" , \"redirect\" : { \"url\" : \"xxx\" , \"params\" : null , }, \"tooltip\" : \"Github\" , }, { \"img\" : \"xxx.png\" , \"redirect\" : { \"url\" : \"xxx\" , \"params\" : null , }, \"tooltip\" : \"Gitee\" , } ], }, }, \"register\" : {}, \"password\" : {}, } } Tenant information # Ten information mainly returns the current login tenant information\u3002Rendering the tenants icon and tenant name above the form in the figure above\u3002 Login Login page By default, use platform tenants to log in If you want to use other existing tenants to log in\uff0cPlease fill in the suffix information in the address bar For example\uff1a /login?tenant_id=123 Front -end address interface # The existence of this page is just to match the possible tenant SLUG\u3002 The front -end address interface is shown in the figure below\uff1a Instructions for use The address must contain protocols\u3001Domain name and port\u3002for example https://Ark.dev.longguikeji.com If the input address contains space at both ends\uff0cWill automatically remove\u3002 If the at the end of the input address is / character\uff0cIt will also be removed automatically\u3002 If there is a space in the middle of the input address or a non -site string\uff0cWill not submit success\u3002 Functional interface # Main description how to pass Openapi-Plus expansion interface /api/v1/openapi.json The returned information evolved into each interface displayed by the front end\u3002By described by the evolution of the generation process of the front -end interface\uff0cIt makes it easier for those who read the front -end project of the ARKID to recommend or use\u3002 The functional interface mainly includes other functional pages except login page\uff0cThat is, you can read data and add deletion to the content page of the data information information.\u3002The content and operation of the specific page need to have the foundation of the front -end knowledge\uff0cFor example, TypeScript\u3001Vue3 and bootstrap5, etc.\u3002This document will avoid the basic knowledge required by any front end\uff0cAnd just for you to penetrate the front end and the back end\uff0cSo as to understand the general operation of its operation\u3002 Overview # How did these pages come from?\uff1fThe generation of the function page is generally passed by the following steps\u3002 According to routes\uff08routers\uff09Generate front -end route According to the page provided by the routing\uff08page\uff09Find page configuration\uff08pages\uff09Corresponding configuration details Generate type page according to the page configuration\uff0cAnd look for the bomb box page\u3001Level United Page and Sub -page\uff0cAnd the corresponding operations\uff08paths\uff09 Find the corresponding description according to the operation information\uff08components\uff09content\uff0cAnd generate page attributes according to the description Mount the operation to the page or button\uff0cSo as to complete the rendering of the page and the operation of the button Hint Bouncing page\uff1aThe dialog box page of the operation of the button type is Open Level joint page\uff1aGenerally a tree page node_Cascade type operation in the Action description of the point of the cascade type operation Subpages\uff1aDefinition as tabs/Pages declared in STEP and other types of pages point to the page OpenAPI-Plus # OpenAPI-PlusPass the interface /api/v1/openapi.json Introduction to the information and functions returned as follows\u3002For more detailed content, please refer to Openapi-Plus documentation\u3002 Module name Detail description Whether to use the front end routers Routing set Used for front -end generating route information \u2714 pages Page set Used to generate different page types and page operations in the front end \u2714 paths Interface set Used to find Components and permissions certification \u2714 components Description Used for front -end generation page element information \u2714 permissions Authority set Used for authority management \u2714 translation globalization Used for international voice switch \u2714 info information Openapi description \u2718 openapi Version version number \u2718 routing routers # Routing information is obitated by Openapi-Plus interface provides\u3002The front end will read the content of this module directly\uff0cAnd based on routing description to generate front -end routing table\u3002 During the generating front -end routing table, you need to process and mount some information on the routing page and some information\u3002Routes are divided into Children and no Children\u3002 hint Sub -routing children quantity is greater than or equal to 2 o'clock\uff0cIt will produce a father -son sidebar Sub -routing children is empty or quantity is 1\uff0cDisplay the page directly on the sidebar No Children Routing Example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"page\" : \"mine\" , } Routing authority If some Openapi-Plus routing table provided page information\uff0cIt means that this routing table needs to display a page\uff0cYou need to judge whether the page has authority\u3002The permissions set will not directly provide the permissions of the page\uff0cAnd the front end needs to find the initialization interface of the page\uff0cThe authority of the routing page is indirectly judged by the interface\u3002 Route permission search step\uff08The above example is an example\uff09\uff1a In the above example page Point to the MINE page\uff0cIt will be configured on [page] (#Check in pages)_action\u3002If it is a level connection page and sub -page (TABS/STEP) type\uff0cThen look for the first sub -page of the level connection page [page configuration] (page configuration] (#pages) Through init_Action look for [interface information] (interface information] (#Paths) corresponding interface Operationid Go to [permissions set] through Operationid#Find the corresponding SORT in Permissions)_ID value According to sort_The ID value determines whether it has permissions through the string information returned by the permission interface If you have this routing permission\uff0cIt is displayed\uff1bOtherwise it will not be displayed Display attribute In addition to the routing permissions need front -end attention\uff0cOpenapi-Provided by Plus mobile web Two display attributes also require the front end for corresponding treatment\u3002 These two attributes determine which routing pages are displayed on the mobile and web side\u3002If the mobile attribute is indicated\uff0cThe corresponding routing information will be displayed on the bottom of the mobile page\u3002 Page configuration pages # Page configuration items are mainly used to render the type and operation of the page\u3002By reading the content in the analysis page configuration item\uff0cComplete the complete rendering of the routing page\u3002What are the contents of the page configuration items\uff0cAlready in Openapi-Plus document explains in detail\uff0cI won't go into details here\u3002 A certain homepage generated as shown in the figure below\uff1a The pages of a pop -up box generated are shown in the figure below\uff1a Reading prompt If the routing statement page and its level pages are the homepage Homepage and other sub -pages (TABS/STEP) use CARD without MODAL The first sub -page of the homepage and the homepage is required to initialize the data when the route is opened Page configuration item reading steps\uff1a Read the page configuration name\uff0cMount it to the front page page\uff0cIf it is the main page and not a level joint page, the name is hidden Read init_ACTION Information\uff0cAccording to init_Interface acquisition interface description in the action information information Read the rest information\uff0cAnd generate the corresponding operation or button in the page Use the ACTION information in the above two steps\uff0cComplete the mounting of the page operation Repeat the reading step\uff0cComplete the configuration reading of all specified pages Interface information paths # Interface information is for the front end\uff0cExcept for Operationid\uff0cMainly used for the reading of interface Responses or requestbody content and mounting of operating content\u3002 When [page configuration] (page configuration] (#Action description in pages) method=get Read responses when you read\uff1bOtherwise, read Requestbody\u3002 Two read routes responses => 200 => content => application/json => schema => $ref requestBody => content => application/json => schema => $ref And read the one further$Ref Direction\u3002For example $ref=#/components/schemas/Mineapppsout Time\uff0cWill be based on it Mineapppsout Go [Properties Description] (#further operation description in components)\u3002 Attribute description components # Attribute description components => schema => Mineapppsout Analysis and processing of detailed information described by way\u3002 In the detailed information properties Wuling in the contents of different types of pages\u3002 tableThe table type page is mounted to the table column\uff1bForm table model page is mounted to the form item\u3002 Authority set permissions # Permanent set is mainly used for the control of the front -end routing and the API button.\u3002 When there is no route or button permission information\uff0cThe page will not display the corresponding content\u3002 globalization translation # Page example picture\uff1a Internationalization is mainly used to switch between users' choice between language\uff0cAfter switching, the page will be refreshed and updated\uff0cUse Openapi-The translation text provided by PLUS for the global replacement of the location used by the page\u3002","title":"Front -end interface"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#front-end-interface","text":"Kind tips Before reading the document\uff0cI hope you have read Openapi-Plus documentation You have used or browsed the front -end interface of the ARKID The front -end interface mainly contains the following modules\uff1a login interface Front -end address interface Functional interface","title":"Front -end interface"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#login-interface","text":"The login interface is mainly passed /api/v1/tenant/{tenant_id}/login_page/ Page described by the interface to describe information generation\u3002 Login interface configuration interface Return content includes two items\uff0cAs shown in the table below\u3002For example, as shown in the figure below\u3002 Keyword name Detail description data [Page surface configuration] (#_3) Rendering/Different page forms such as registration tenant [Practitioner Information] (#_4) Rendering tenants icons and names, etc.","title":"login interface"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#page-surface-configuration","text":"Page surface configuration information can be caused by it Authentication Module dynamic additional income\u3002There is information such as the user name and password login page configuration and other information\u3002As shown in FIG\uff0cPage surface configuration generates all different forms and buttons in the login module\u3002The main page items include the login page\u3001Register page and forget the password page\u3002Since the rendering process of three pages items is consistent\uff0cHere we only introduce the generation process and precautions of the login page item\u3002 dataThe value corresponding to the keyword is the description information of the respective page of the page item\uff0cEach item contains forms bottoms extend name Field information\u3002 Keyword name name Page configuration item name forms Forms in different ways bottoms Found operation of the table extend worth mentioning Table item forms formsUsed to render different ways form items\u3002For example, login can exist \u2460 Username password login method\uff1b\u2461 SMS verification code login method Wait\u3002And it contains label items submit Field information\u3002 Keyword Detail label Table title name items Detailed expression of each form item submit Submitting operation expression of the form item itemsForm items are used to display and enter user names\u3001password\u3001Mobile phone number and other information\uff0cAnd with functional operations such as sending verification codes\u3002 Keyword meaning Detail name Field key Key returned when submitted type Table type type \u2460 text \u2461 password \u2462 hidden placeholder Tables shareholding - readonly Table item read only - append Suffering See the submit operation instructions\uff0c Generally used for'Send the verification code'and'Graphical Code'Wait submitTo submit the Items information entered by the user\u3002 Keyword Detail http Button operation content\uff0cIncluding URL/path/Params and other content title Button operation name redirect Click the redirection to the address after clicking agreement Registration agreement description delay time delay\uff0c Used to send verification codes and other operations gopage Page name\uff0cUsed to a page in Data img The map's address\uff0cIcon display for third -party login long Boolean value\uff0cLong type button, Control of the length of the button prepend Button prefix text\uff0cCommonly used for the bottom button at the bottom of the form tooltip The button move into the prompt information description\uff0cCommonly used for third -party login buttons Bottom operation bottoms bottomsUsed to switch between different pages configuration items\u3002 In the front -end page display\uff0cCommon No account yet\uff0cSign up now and Forgot password Waiting for the button\u3002The operation attributes of this type generally include in the above description prepend gopage Equal attribute\u3002 worth mentioning extend extendOnly in the login page configuration item\uff0cUsed to display different third -party login items\u3002It is expressed in the above picture as the multiple icons below\u3002 extendDepend on title buttons Two items\u3002Title is the title\uff1bButtons configures for the button for each third party login\u3002 buttonsThe operating attributes in it generally include img redirect tooltip Equity information\u3002 Configuration Example The information returned in the interface is as described as described below\uff1a { \"data\" : { \"login\" : { \"name\" : \"login\" , \"forms\" : [ { \"label\" : \"Username password login\" , \"items\" : [ { \"value\" : \"\" , \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"username\" , }, { \"value\" : \"\" , \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"password\" , }, ], \"submit\" : { \"http\" : { \"url\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"params\" : null , }, \"title\" : \"Log in\" , \"long\" : true , }, } ], \"bottoms\" : [ { \"prepend\" : \"No account yet\uff0c\" , \"gopage\" : \"register\" , \"title\" : \"Sign up now\" , }, { \"prepend\" : null , \"gopage\" : \"password\" , \"title\" : \"Forgot password\" , }, ], \"extend\" : { \"title\" : \"worth mentioning\" , \"buttons\" : [ { \"img\" : \"xxx.png\" , \"redirect\" : { \"url\" : \"xxx\" , \"params\" : null , }, \"tooltip\" : \"Github\" , }, { \"img\" : \"xxx.png\" , \"redirect\" : { \"url\" : \"xxx\" , \"params\" : null , }, \"tooltip\" : \"Gitee\" , } ], }, }, \"register\" : {}, \"password\" : {}, } }","title":"Page surface configuration"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#tenant-information","text":"Ten information mainly returns the current login tenant information\u3002Rendering the tenants icon and tenant name above the form in the figure above\u3002 Login Login page By default, use platform tenants to log in If you want to use other existing tenants to log in\uff0cPlease fill in the suffix information in the address bar For example\uff1a /login?tenant_id=123","title":"Tenant information"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#front-end-address-interface","text":"The existence of this page is just to match the possible tenant SLUG\u3002 The front -end address interface is shown in the figure below\uff1a Instructions for use The address must contain protocols\u3001Domain name and port\u3002for example https://Ark.dev.longguikeji.com If the input address contains space at both ends\uff0cWill automatically remove\u3002 If the at the end of the input address is / character\uff0cIt will also be removed automatically\u3002 If there is a space in the middle of the input address or a non -site string\uff0cWill not submit success\u3002","title":"Front -end address interface"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#functional-interface","text":"Main description how to pass Openapi-Plus expansion interface /api/v1/openapi.json The returned information evolved into each interface displayed by the front end\u3002By described by the evolution of the generation process of the front -end interface\uff0cIt makes it easier for those who read the front -end project of the ARKID to recommend or use\u3002 The functional interface mainly includes other functional pages except login page\uff0cThat is, you can read data and add deletion to the content page of the data information information.\u3002The content and operation of the specific page need to have the foundation of the front -end knowledge\uff0cFor example, TypeScript\u3001Vue3 and bootstrap5, etc.\u3002This document will avoid the basic knowledge required by any front end\uff0cAnd just for you to penetrate the front end and the back end\uff0cSo as to understand the general operation of its operation\u3002","title":"Functional interface"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#overview","text":"How did these pages come from?\uff1fThe generation of the function page is generally passed by the following steps\u3002 According to routes\uff08routers\uff09Generate front -end route According to the page provided by the routing\uff08page\uff09Find page configuration\uff08pages\uff09Corresponding configuration details Generate type page according to the page configuration\uff0cAnd look for the bomb box page\u3001Level United Page and Sub -page\uff0cAnd the corresponding operations\uff08paths\uff09 Find the corresponding description according to the operation information\uff08components\uff09content\uff0cAnd generate page attributes according to the description Mount the operation to the page or button\uff0cSo as to complete the rendering of the page and the operation of the button Hint Bouncing page\uff1aThe dialog box page of the operation of the button type is Open Level joint page\uff1aGenerally a tree page node_Cascade type operation in the Action description of the point of the cascade type operation Subpages\uff1aDefinition as tabs/Pages declared in STEP and other types of pages point to the page","title":"Overview"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#openapi-plus","text":"OpenAPI-PlusPass the interface /api/v1/openapi.json Introduction to the information and functions returned as follows\u3002For more detailed content, please refer to Openapi-Plus documentation\u3002 Module name Detail description Whether to use the front end routers Routing set Used for front -end generating route information \u2714 pages Page set Used to generate different page types and page operations in the front end \u2714 paths Interface set Used to find Components and permissions certification \u2714 components Description Used for front -end generation page element information \u2714 permissions Authority set Used for authority management \u2714 translation globalization Used for international voice switch \u2714 info information Openapi description \u2718 openapi Version version number \u2718","title":"OpenAPI-Plus"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#routing-routers","text":"Routing information is obitated by Openapi-Plus interface provides\u3002The front end will read the content of this module directly\uff0cAnd based on routing description to generate front -end routing table\u3002 During the generating front -end routing table, you need to process and mount some information on the routing page and some information\u3002Routes are divided into Children and no Children\u3002 hint Sub -routing children quantity is greater than or equal to 2 o'clock\uff0cIt will produce a father -son sidebar Sub -routing children is empty or quantity is 1\uff0cDisplay the page directly on the sidebar No Children Routing Example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"page\" : \"mine\" , } Routing authority If some Openapi-Plus routing table provided page information\uff0cIt means that this routing table needs to display a page\uff0cYou need to judge whether the page has authority\u3002The permissions set will not directly provide the permissions of the page\uff0cAnd the front end needs to find the initialization interface of the page\uff0cThe authority of the routing page is indirectly judged by the interface\u3002 Route permission search step\uff08The above example is an example\uff09\uff1a In the above example page Point to the MINE page\uff0cIt will be configured on [page] (#Check in pages)_action\u3002If it is a level connection page and sub -page (TABS/STEP) type\uff0cThen look for the first sub -page of the level connection page [page configuration] (page configuration] (#pages) Through init_Action look for [interface information] (interface information] (#Paths) corresponding interface Operationid Go to [permissions set] through Operationid#Find the corresponding SORT in Permissions)_ID value According to sort_The ID value determines whether it has permissions through the string information returned by the permission interface If you have this routing permission\uff0cIt is displayed\uff1bOtherwise it will not be displayed Display attribute In addition to the routing permissions need front -end attention\uff0cOpenapi-Provided by Plus mobile web Two display attributes also require the front end for corresponding treatment\u3002 These two attributes determine which routing pages are displayed on the mobile and web side\u3002If the mobile attribute is indicated\uff0cThe corresponding routing information will be displayed on the bottom of the mobile page\u3002","title":"routing routers"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#page-configuration-pages","text":"Page configuration items are mainly used to render the type and operation of the page\u3002By reading the content in the analysis page configuration item\uff0cComplete the complete rendering of the routing page\u3002What are the contents of the page configuration items\uff0cAlready in Openapi-Plus document explains in detail\uff0cI won't go into details here\u3002 A certain homepage generated as shown in the figure below\uff1a The pages of a pop -up box generated are shown in the figure below\uff1a Reading prompt If the routing statement page and its level pages are the homepage Homepage and other sub -pages (TABS/STEP) use CARD without MODAL The first sub -page of the homepage and the homepage is required to initialize the data when the route is opened Page configuration item reading steps\uff1a Read the page configuration name\uff0cMount it to the front page page\uff0cIf it is the main page and not a level joint page, the name is hidden Read init_ACTION Information\uff0cAccording to init_Interface acquisition interface description in the action information information Read the rest information\uff0cAnd generate the corresponding operation or button in the page Use the ACTION information in the above two steps\uff0cComplete the mounting of the page operation Repeat the reading step\uff0cComplete the configuration reading of all specified pages","title":"Page configuration pages"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#interface-information-paths","text":"Interface information is for the front end\uff0cExcept for Operationid\uff0cMainly used for the reading of interface Responses or requestbody content and mounting of operating content\u3002 When [page configuration] (page configuration] (#Action description in pages) method=get Read responses when you read\uff1bOtherwise, read Requestbody\u3002 Two read routes responses => 200 => content => application/json => schema => $ref requestBody => content => application/json => schema => $ref And read the one further$Ref Direction\u3002For example $ref=#/components/schemas/Mineapppsout Time\uff0cWill be based on it Mineapppsout Go [Properties Description] (#further operation description in components)\u3002","title":"Interface information paths"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#attribute-description-components","text":"Attribute description components => schema => Mineapppsout Analysis and processing of detailed information described by way\u3002 In the detailed information properties Wuling in the contents of different types of pages\u3002 tableThe table type page is mounted to the table column\uff1bForm table model page is mounted to the form item\u3002","title":"Attribute description components"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#authority-set-permissions","text":"Permanent set is mainly used for the control of the front -end routing and the API button.\u3002 When there is no route or button permission information\uff0cThe page will not display the corresponding content\u3002","title":"Authority set permissions"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/Front-EndInterface/#globalization-translation","text":"Page example picture\uff1a Internationalization is mainly used to switch between users' choice between language\uff0cAfter switching, the page will be refreshed and updated\uff0cUse Openapi-The translation text provided by PLUS for the global replacement of the location used by the page\u3002","title":"globalization translation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/","text":"Kernel API # API # arkid.core.api # Universal Openapi Schema # arkid.core.schema # RootSchema ( Schema ) pydantic-model # __setattr__ ( self , item , value ) special # Implement setattr(self, name, value). dict ( self , ** kwargs ) # Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. Front -end page # arkid.core.pages # CardsPage ( SelectPage ) # \u5361\u7247\u5217\u8868 ChartPage ( FrontPage ) # \u56fe\u8868\u9875\u9762 DescriptionPage ( FrontPage ) # \u63cf\u8ff0\u9875\u9762 FormPage ( FrontPage ) # \u8868\u5355\u9875\u9762 FrontPage ( DeepSN ) # \u524d\u7aef\u9875\u9762\u914d\u7f6e\u7c7b Examples: >>> from arkid.core import pages >>> from arkid.core.translation import gettext_default as _ >>> >>> # \u7533\u660e\u4e00\u4e2a\u9875\u9762 >>> page = pages . FrontPage ( >>> tag = \"user_list\" , >>> name = \"user_list\" , >>> page_type = pages . FrontPageType . TABLE_PAGE , >>> init_action = pages . FrontAction ( >>> path = '/api/v1/tenant/ {tenant_id} /users/' , >>> method = pages . FrontActionMethod . GET >>> ) >>> ) >>> # \u6dfb\u52a0\u5c40\u90e8\u52a8\u4f5c >>> page . add_local_action ( >>> [ >>> pages . FrontAction ( >>> name = _ ( \"\u7f16\u8f91\" ), >>> page = user_edit_page , >>> icon = \"icon-edit\" , >>> action_type = pages . FrontActionType . OPEN_ACTION >>> ), >>> ... >>> ] >>> ) >>> # \u6dfb\u52a0\u5168\u5c40\u52a8\u4f5c >>> page . add_global_action ( >>> [ >>> pages . FrontAction ( >>> name = \"\u521b\u5efa\" , >>> page = user_create_page , >>> icon = \"icon-create\" , >>> action_type = pages . FrontActionType . OPEN_ACTION >>> ) >>> ] >>> ) __init__ ( self , name , tag = None , tag_pre = None , type =< FrontPageType . TABLE_PAGE : 'table' > , * args , ** kwargs ) special # \u521d\u59cb\u5316\u51fd\u6570 Parameters: Name Type Description Default name str \u9875\u9762\u540d\u79f0 required page_type FrontPageType \u9875\u9762\u7c7b\u578b required init_action FrontAction|OrderedDict \u521d\u59cb\u5316\u52a8\u4f5c required global_actions list \u5168\u5c40\u52a8\u4f5c required local_actions list \u672c\u5730\u52a8\u4f5c required tag str \u6807\u8bc6. None tag_pre str \u6807\u8bc6\u524d\u7f00. None add_global_actions ( self , actions ) # \u6dfb\u52a0\u5168\u5c40\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required add_local_actions ( self , actions ) # \u6dfb\u52a0\u8868\u5355\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required add_node_actions ( self , actions ) # \u6dfb\u52a0\u8868\u5355\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required add_tag_pre ( self , tag_pre ) # \u6dfb\u52a0\u6807\u8bc6\u524d\u7f00 \u7528\u4e8e\u63d2\u4ef6\u4e2d\u751f\u6210\u9875\u9762\u65f6\u7ed9\u9875\u9762\u7684\u6807\u8bc6\u6dfb\u52a0\u524d\u7f00 Parameters: Name Type Description Default tag_pre str \u524d\u7f00 required FrontPageType ( Enum ) # \u524d\u7aef\u9875\u9762\u7c7b\u578b\u679a\u4e3e\u7c7b Type\u9875\u9762\u7c7b\u578b [\u53ef\u6269\u5c55]: - \u8868\u683c\u578b\u9875\u9762 (table) - \u8868\u5355\u578b\u9875\u9762 (form) - \u63cf\u8ff0\u578b\u9875\u9762 (description) - \u6811\u72b6\u578b\u9875\u9762 (tree) - \u5207\u6362\u578b\u9875\u9762 (tabs)- \u6682\u4e0d\u652f\u6301 - \u5217\u8868\u578b\u9875\u9762 (list)- \u6682\u4e0d\u652f\u6301 - \u5361\u7247\u578b\u9875\u9762 (cards)- \u6682\u4e0d\u652f\u6301 - \u7f51\u683c\u578b\u9875\u9762 (grid)- \u6682\u4e0d\u652f\u6301 - \u6b65\u9aa4\u578b\u9875\u9762 (step)- \u6682\u4e0d\u652f\u6301 GridPage ( FrontPage ) # \u7f51\u683c\u9875\u9762 ListPage ( SelectPage ) # \u5217\u8868\u9875\u9762 ScanPage ( FrontPage ) # \u8868\u5355\u9875\u9762 SelectPage ( FrontPage ) # \u9009\u62e9\u578b\u9875\u9762 StepPage ( FrontPage ) # \u6b65\u9aa4\u9875\u9762 TablePage ( SelectPage ) # \u8868\u683c\u9875\u9762 TabsPage ( FrontPage ) # \u7f51\u683c\u9875\u9762 TreePage ( SelectPage ) # \u6811\u5f62\u9875\u9762 get_global_pages () # \u83b7\u53d6\u9875\u9762\u5217\u8868 register_front_pages ( pages ) # \u6ce8\u518c\u524d\u7aef\u9875\u9762 Parameters: Name Type Description Default pages List|FrontPage \u524d\u7aef\u9875\u9762 required unregister_front_pages ( pages ) # \u5378\u8f7d\u9875\u9762 Parameters: Name Type Description Default pages List|FrontPage \u524d\u7aef\u9875\u9762 required Front -end routing # arkid.core.routers # FrontRouter ( DeepSN ) # _\u524d\u7aef\u8def\u7531\u7c7b Examples: >>> from arkid.core import routers >>> >>> router = routers . FrontRouter ( >>> path = 'user' , >>> name = '\u7528\u6237\u7ba1\u7406' , >>> icon = 'user' , >>> children = [ >>> routers . FrontRouter ( >>> path = user_list_tag , >>> name = '\u7528\u6237\u7ba1\u7406' , >>> icon = 'user' , >>> page = user_list_tag , >>> ) >>> ], >>> ) __init__ ( self , path , name = None , icon = None , children = None , redirect = None , page = None , url = None , web = True , mobile = False , * args , ** kwargs ) special # \u521d\u59cb\u5316 Parameters: Name Type Description Default path str \u8def\u7531\u8def\u5f84 required name str \u8def\u7531\u540d\u79f0. Defaults to None. None icon str \u56fe\u6807. Defaults to None. None children List \u5b50\u8def\u7531\u5217\u8868. Defaults to None. None redirect str \u8df3\u8f6c\u94fe\u63a5. Defaults to None. None page FrontPage \u9875\u9762. Defaults to None. None url str \u94fe\u63a5\u5730\u5740. Defaults to None. None add_children ( self , child ) # \u6dfb\u52a0\u5b50\u8def\u7531 Parameters: Name Type Description Default child OrderedDict \u5b50\u8def\u7531\u63cf\u8ff0 required change_page_tag ( self , header ) # \u66f4\u6539\u9875\u9762\u6807\u8bc6\uff0c\u4e3b\u8981\u7528\u4e8e\u63d2\u4ef6\u4e2d\u6dfb\u52a0\u6807\u8bc6\u524d\u7f00\u4ee5\u6ce8\u660e\u8be5\u9875\u9762\u6765\u6e90 \u6ce8\u610f\uff1a \u6b64\u5904\u4f1a\u5c06\u5b50\u9875\u9762\u6807\u8bc6\u4e00\u5e76\u66f4\u6539 Parameters: Name Type Description Default header str \u9875\u9762\u6807\u8bc6\u524d\u7f00 required remove_child ( self , child ) # \u79fb\u9664\u5b50\u8def\u7531 Parameters: Name Type Description Default child OrderedDict \u5b50\u8def\u7531\u63cf\u8ff0 required exclude_routers ( global_routers ) # \u901a\u8fc7\u4e8b\u4ef6\u673a\u5236\u6392\u9664\u6389\u4e00\u4e9b\u8def\u7531 register_front_routers ( routers , primary = None ) # \u6ce8\u518c\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default routers list \u8def\u7531\u5217\u8868\u6216\u8005\u8def\u7531 required primary str \u4e3b\u8def\u7531. Defaults to ''. None unregister_front_routers ( routers , primary = None ) # \u5378\u8f7d\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default routers list \u8def\u7531\u5217\u8868\u6216\u8def\u7531 required primary str \u4e3b\u8def\u7531. Defaults to ''. None Token # arkid.core.token # get_valid_token ( user , tenant ) # \u5982\u679c\u6ca1\u8fc7\u671f\u5c31\u4e0d\u5237\u65b0\uff0c\u8fc7\u671f\u624d\u5237\u65b0 Internationalization # arkid.core.translation # gettext_default ( id , msg = None , lang = '\u7b80\u4f53\u4e2d\u6587' ) # \u591a\u8bed\u8a00\u9ed8\u8ba4\u65b9\u6cd5 Parameters: Name Type Description Default id str \u6807\u8bc6 required msg str \u8bed\u8a00\u6587\u5b57. Defaults to None. None lang str \u8bed\u8a00\u79cd\u7c7b. Defaults to \"\u7b80\u4f53\u4e2d\u6587\". '\u7b80\u4f53\u4e2d\u6587' Returns: Type Description str id \u6807\u8bc6 error code # arkid.core.error # ErrorCode ( Enum ) # An enumeration.","title":"Kernel API"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#kernel-api","text":"","title":"Kernel API"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#api","text":"","title":"API"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.api","text":"","title":"api"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#universal-openapi-schema","text":"","title":"Universal Openapi Schema"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.schema","text":"","title":"schema"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.schema.RootSchema","text":"","title":"RootSchema"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.schema.RootSchema.__setattr__","text":"Implement setattr(self, name, value).","title":"__setattr__()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.schema.RootSchema.dict","text":"Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#front-end-page","text":"","title":"Front -end page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages","text":"","title":"pages"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.CardsPage","text":"\u5361\u7247\u5217\u8868","title":"CardsPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.ChartPage","text":"\u56fe\u8868\u9875\u9762","title":"ChartPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.DescriptionPage","text":"\u63cf\u8ff0\u9875\u9762","title":"DescriptionPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FormPage","text":"\u8868\u5355\u9875\u9762","title":"FormPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage","text":"\u524d\u7aef\u9875\u9762\u914d\u7f6e\u7c7b Examples: >>> from arkid.core import pages >>> from arkid.core.translation import gettext_default as _ >>> >>> # \u7533\u660e\u4e00\u4e2a\u9875\u9762 >>> page = pages . FrontPage ( >>> tag = \"user_list\" , >>> name = \"user_list\" , >>> page_type = pages . FrontPageType . TABLE_PAGE , >>> init_action = pages . FrontAction ( >>> path = '/api/v1/tenant/ {tenant_id} /users/' , >>> method = pages . FrontActionMethod . GET >>> ) >>> ) >>> # \u6dfb\u52a0\u5c40\u90e8\u52a8\u4f5c >>> page . add_local_action ( >>> [ >>> pages . FrontAction ( >>> name = _ ( \"\u7f16\u8f91\" ), >>> page = user_edit_page , >>> icon = \"icon-edit\" , >>> action_type = pages . FrontActionType . OPEN_ACTION >>> ), >>> ... >>> ] >>> ) >>> # \u6dfb\u52a0\u5168\u5c40\u52a8\u4f5c >>> page . add_global_action ( >>> [ >>> pages . FrontAction ( >>> name = \"\u521b\u5efa\" , >>> page = user_create_page , >>> icon = \"icon-create\" , >>> action_type = pages . FrontActionType . OPEN_ACTION >>> ) >>> ] >>> )","title":"FrontPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage.__init__","text":"\u521d\u59cb\u5316\u51fd\u6570 Parameters: Name Type Description Default name str \u9875\u9762\u540d\u79f0 required page_type FrontPageType \u9875\u9762\u7c7b\u578b required init_action FrontAction|OrderedDict \u521d\u59cb\u5316\u52a8\u4f5c required global_actions list \u5168\u5c40\u52a8\u4f5c required local_actions list \u672c\u5730\u52a8\u4f5c required tag str \u6807\u8bc6. None tag_pre str \u6807\u8bc6\u524d\u7f00. None","title":"__init__()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage.add_global_actions","text":"\u6dfb\u52a0\u5168\u5c40\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required","title":"add_global_actions()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage.add_local_actions","text":"\u6dfb\u52a0\u8868\u5355\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required","title":"add_local_actions()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage.add_node_actions","text":"\u6dfb\u52a0\u8868\u5355\u52a8\u4f5c Parameters: Name Type Description Default actions FrontAction|OrderedDict \u52a8\u4f5c\u5217\u8868 required","title":"add_node_actions()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPage.add_tag_pre","text":"\u6dfb\u52a0\u6807\u8bc6\u524d\u7f00 \u7528\u4e8e\u63d2\u4ef6\u4e2d\u751f\u6210\u9875\u9762\u65f6\u7ed9\u9875\u9762\u7684\u6807\u8bc6\u6dfb\u52a0\u524d\u7f00 Parameters: Name Type Description Default tag_pre str \u524d\u7f00 required","title":"add_tag_pre()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.FrontPageType","text":"\u524d\u7aef\u9875\u9762\u7c7b\u578b\u679a\u4e3e\u7c7b Type\u9875\u9762\u7c7b\u578b [\u53ef\u6269\u5c55]: - \u8868\u683c\u578b\u9875\u9762 (table) - \u8868\u5355\u578b\u9875\u9762 (form) - \u63cf\u8ff0\u578b\u9875\u9762 (description) - \u6811\u72b6\u578b\u9875\u9762 (tree) - \u5207\u6362\u578b\u9875\u9762 (tabs)- \u6682\u4e0d\u652f\u6301 - \u5217\u8868\u578b\u9875\u9762 (list)- \u6682\u4e0d\u652f\u6301 - \u5361\u7247\u578b\u9875\u9762 (cards)- \u6682\u4e0d\u652f\u6301 - \u7f51\u683c\u578b\u9875\u9762 (grid)- \u6682\u4e0d\u652f\u6301 - \u6b65\u9aa4\u578b\u9875\u9762 (step)- \u6682\u4e0d\u652f\u6301","title":"FrontPageType"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.GridPage","text":"\u7f51\u683c\u9875\u9762","title":"GridPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.ListPage","text":"\u5217\u8868\u9875\u9762","title":"ListPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.ScanPage","text":"\u8868\u5355\u9875\u9762","title":"ScanPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.SelectPage","text":"\u9009\u62e9\u578b\u9875\u9762","title":"SelectPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.StepPage","text":"\u6b65\u9aa4\u9875\u9762","title":"StepPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.TablePage","text":"\u8868\u683c\u9875\u9762","title":"TablePage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.TabsPage","text":"\u7f51\u683c\u9875\u9762","title":"TabsPage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.TreePage","text":"\u6811\u5f62\u9875\u9762","title":"TreePage"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.get_global_pages","text":"\u83b7\u53d6\u9875\u9762\u5217\u8868","title":"get_global_pages()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.register_front_pages","text":"\u6ce8\u518c\u524d\u7aef\u9875\u9762 Parameters: Name Type Description Default pages List|FrontPage \u524d\u7aef\u9875\u9762 required","title":"register_front_pages()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.pages.unregister_front_pages","text":"\u5378\u8f7d\u9875\u9762 Parameters: Name Type Description Default pages List|FrontPage \u524d\u7aef\u9875\u9762 required","title":"unregister_front_pages()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#front-end-routing","text":"","title":"Front -end routing"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers","text":"","title":"routers"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.FrontRouter","text":"_\u524d\u7aef\u8def\u7531\u7c7b Examples: >>> from arkid.core import routers >>> >>> router = routers . FrontRouter ( >>> path = 'user' , >>> name = '\u7528\u6237\u7ba1\u7406' , >>> icon = 'user' , >>> children = [ >>> routers . FrontRouter ( >>> path = user_list_tag , >>> name = '\u7528\u6237\u7ba1\u7406' , >>> icon = 'user' , >>> page = user_list_tag , >>> ) >>> ], >>> )","title":"FrontRouter"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.FrontRouter.__init__","text":"\u521d\u59cb\u5316 Parameters: Name Type Description Default path str \u8def\u7531\u8def\u5f84 required name str \u8def\u7531\u540d\u79f0. Defaults to None. None icon str \u56fe\u6807. Defaults to None. None children List \u5b50\u8def\u7531\u5217\u8868. Defaults to None. None redirect str \u8df3\u8f6c\u94fe\u63a5. Defaults to None. None page FrontPage \u9875\u9762. Defaults to None. None url str \u94fe\u63a5\u5730\u5740. Defaults to None. None","title":"__init__()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.FrontRouter.add_children","text":"\u6dfb\u52a0\u5b50\u8def\u7531 Parameters: Name Type Description Default child OrderedDict \u5b50\u8def\u7531\u63cf\u8ff0 required","title":"add_children()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.FrontRouter.change_page_tag","text":"\u66f4\u6539\u9875\u9762\u6807\u8bc6\uff0c\u4e3b\u8981\u7528\u4e8e\u63d2\u4ef6\u4e2d\u6dfb\u52a0\u6807\u8bc6\u524d\u7f00\u4ee5\u6ce8\u660e\u8be5\u9875\u9762\u6765\u6e90 \u6ce8\u610f\uff1a \u6b64\u5904\u4f1a\u5c06\u5b50\u9875\u9762\u6807\u8bc6\u4e00\u5e76\u66f4\u6539 Parameters: Name Type Description Default header str \u9875\u9762\u6807\u8bc6\u524d\u7f00 required","title":"change_page_tag()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.FrontRouter.remove_child","text":"\u79fb\u9664\u5b50\u8def\u7531 Parameters: Name Type Description Default child OrderedDict \u5b50\u8def\u7531\u63cf\u8ff0 required","title":"remove_child()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.exclude_routers","text":"\u901a\u8fc7\u4e8b\u4ef6\u673a\u5236\u6392\u9664\u6389\u4e00\u4e9b\u8def\u7531","title":"exclude_routers()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.register_front_routers","text":"\u6ce8\u518c\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default routers list \u8def\u7531\u5217\u8868\u6216\u8005\u8def\u7531 required primary str \u4e3b\u8def\u7531. Defaults to ''. None","title":"register_front_routers()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.routers.unregister_front_routers","text":"\u5378\u8f7d\u524d\u7aef\u8def\u7531 Parameters: Name Type Description Default routers list \u8def\u7531\u5217\u8868\u6216\u8def\u7531 required primary str \u4e3b\u8def\u7531. Defaults to ''. None","title":"unregister_front_routers()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#token","text":"","title":"Token"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.token","text":"","title":"token"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.token.get_valid_token","text":"\u5982\u679c\u6ca1\u8fc7\u671f\u5c31\u4e0d\u5237\u65b0\uff0c\u8fc7\u671f\u624d\u5237\u65b0","title":"get_valid_token()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#internationalization","text":"","title":"Internationalization"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.translation","text":"","title":"translation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.translation.gettext_default","text":"\u591a\u8bed\u8a00\u9ed8\u8ba4\u65b9\u6cd5 Parameters: Name Type Description Default id str \u6807\u8bc6 required msg str \u8bed\u8a00\u6587\u5b57. Defaults to None. None lang str \u8bed\u8a00\u79cd\u7c7b. Defaults to \"\u7b80\u4f53\u4e2d\u6587\". '\u7b80\u4f53\u4e2d\u6587' Returns: Type Description str id \u6807\u8bc6","title":"gettext_default()"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#error-code","text":"","title":"error code"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.error","text":"","title":"error"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/KernelApi/#arkid.core.error.ErrorCode","text":"An enumeration.","title":"ErrorCode"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/","text":"OpenAPI Plus # OpenAPI-Plus use django-ninja and pydantic function extension\uff0cTo achieve adaptation ArkID The purpose of the front end of the one -account project\u3002 OpenAPI-Plus Mainly tells what extensions it has made\uff0cAnd what do these expansion exist?\uff1fPlease continue to read the document\u3002 Extended one: routing\uff08routers\uff09 # Its main declaration front -end routing information\uff0cBy reading analysis routers Middle content\uff0cGenerate the front sidebar of the front end of the front end\u3002A total of two categories can be divided into two categories\uff1a Have Children Routing none Children Routing Keyword meaning Types of path Front -end access path\uff0cuse/Characters are superimposed string name Name of side barn route string icon Large -boring routing icon\uff0cNeed to cooperate with the front -end statement string hidden Whether to hide\uff0cIf you do true\uff0cDo not show in the front sidebar of the front end boolean page This route needs to be rendered\uff0cSpecific information direction pages Expand string url Visit the URL interface directly\uff0cDeficiency of GET\uff0cThe interface returns the new URL address\uff0cPut in iframe display string web Whether it is the sidebar of the computer end\uff0cCan contain order number, boolean mobile Whether it is the bottom bar of the mobile phone\uff0cAnd sequence number, boolean Important statement path Out of service . Special characters\u3002 page Out of service [ ] { } Special characters\u3002 There is a Children route example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"children\" : [ { \"path\" : \"profile\" , \"name\" : \"Personal management\" , \"page\" : \"mine_profile\" , \"icon\" : \"profile\" }, { \"path\" : \"logout\" , \"name\" : \"sign out\" , \"page\" : \"mine_logout\" , \"icon\" : \"logout\" } ] } No Children Routing Example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"page\" : \"mine\" } Extended two: Page configuration\uff08pages\uff09 # Declarize the configuration information required to generate the front end page\uff0cThe front end will be parsed according to the content returned by OpenAPI\uff0cSo as to generate various types of front -end pages\u3002The following will explain the meaning of each configuration and how to express and display the corresponding expression at the front end\u3002 question Generate a form or form page page\uff0cNeed those configuration information\uff1f Generate a tree structure page\uff1f What are the differences between the page?\uff1f Page type # For the above problems\uff0cGive us the current Support \u2714 or Be supported \u2718 Page type\u3002 Types of name Support table Table -type page \u2714 form Table model page \u2714 tree Tree -like page \u2714 tabs Switch page \u2714 description Descriptive page \u2714 cards Card -type page \u2714 grid Grid page \u2718 list List -type page \u2718 step Step -type page \u2714 Page configuration # Explain the configuration required in the page\uff0cTo support the generation situation of the above -mentioned pages\u3002 Keyword meaning Features Additional information type Page type Generate front -end page template For details, refer to the following page type description tag Page identifier Matching the unique page configuration Page unique tag name Page name Corresponding display front -end page title Need to support Chinese and English init_action [Page initialization operation] (#_6) Get SCHEMA and data Specific reference to init_Action detailed description init_data Initialization data Initialized assignment operation Start from the parent -level data pool by default global_action [Page global operation] (#_7) Generate global button operation Specific reference Global_Action detailed description local_action [Page local operation] (#_8) Generate local button operation Specific reference Local_Action detailed description node_action [Page node operation] (#_9) Generate nodes, click operation It may exist in TREE/Cards and other pages\uff0cSpecific reference node_Action detailed description select Whether it is an optional page Selected page This field is not required in the form page pages tabs/stepMulti -page pointing Generate tabs/STEP multi -page Only in TABS/In step page important hint tag Cannot only [ ] { } Special characters tag Do not repeat a tag under the same page Page operation # The main configuration of the page is composed of multiple operations\u3002Including initialization data acquisition operation\uff0cClick, deletion, change, etc. Click to operate\u3002So the operation configuration has extremely important meaning and detailed configuration statement\u3002 Operating type # Keyword name Detail description Support direct Direct Common in confirming editing or deleting, and clicking on tree nodes to get children and other operations \u2714 open Bomber Open the dialog\uff0cShow a new type page\uff0cCommon operations such as creating or editing \u2714 cascade Classification Commonly used on the grade pages of tree -shaped pages\uff0cWhen clicking a certain node, The data display page that appears side by side \u2714 import Import Use when importing files or data \u2718 export Export type Use when exporting files or data\uff0cDivided into full export or partial export \u2718 next Step Click to continue the next operation\uff0cAutomatically add a step button according to the situation \u2714 url Address Change the current browser address bar address directly \u2714 Operating configuration # Keyword meaning Features tag Operating label Can be used for front -end operation name path APIinterface Used to match SCHEMA description and obtain data method APIInterface method Above type [Operation type] (#_4) Easy to identify operation\uff0cSee the specific instructions above page Page tag When the operation type is open\uff0cPointing to the tag on the page name Operating name Front -end page button name\uff0cnode_Action does not need to include this content icon icon Optional\uff0cNot supported yet close Closure condition Turn on the switch -type button operation open Open condition Open condition of the switch button operation hint The above fields are optional fields\uff0cYou need to declare according to the specific situation tagOr page can not include special characters close/openOnly support BOOL description\uff0cOther conditions are under plan development close=True; (\u2714) open=False; (\u2714) close=is_system; (\u2718) open=!is_admin; (\u2718) close=is_system&!is_admin; (\u2718) Initialization operation # init_actionThe purpose is to obtain a page SCHEMA structure and initial data\u3002That is, when you open or see a page\uff0cThis operation will automatically initiate\uff0cThen fill in the obtained data into the page\u3002 It mainly contains path and method \uff0cThe operation type is direct Types of\uff0cThere are no other types of initialization operations at present\u3002 { \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"tag\" : \"\" , \"type\" : \"direct\" , } } Global operation # global_actionMainly complete the generation of the pages global button\uff0cAnd complete the initialization of its corresponding operation according to the configuration\u3002Such as creation/Import and other operations\u3002 Its configuration needs to be completely followed by [Operation Configuration] (#_5) Explanation to complete\u3002 { \"global_action\" : { \"create\" : { \"name\" : \"Newly built\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"open\" , \"page\" : \"user_create\" , \"tag\" : \"\" , }, \"import\" : { \"name\" : \"Import\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"import\" , \"tag\" : \"\" , }, \"export\" : { \"name\" : \"Export\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"export\" , \"tag\" : \"\" , }, } } Local operation # local_actionMainly complete the generation of page parts of the page\uff0cAnd the initialization of its operation\u3002Such as deleting/Edit and other operations\u3002 Its configuration needs to be completely followed by [Operation Configuration] (#_5) Explanation to complete\u3002 Exemplary { \"local_action\" : { \"edit\" : { \"name\" : \"edit\" , \"type\" : \"open\" , \"page\" : \"user_edit\" , \"tag\" : \"\" , }, \"delete\" : { \"name\" : \"delete\" , \"type\" : \"direct\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"delete\" , \"tag\" : \"\" , } } } Node operation # node_actionMainly complete the generation of the operation of the page node\uff0cThere is no display of the corresponding button\u3002 The function is mainly to obtain the data of the sub -node and the level connection page\uff0cIn the CARDS type page, it can be used as a click CARDS operation statement\u3002 hint node_actionConfigure for array type If node_What is in Action direct During the operation\uff0cAnd the current tree page\uff0cThe default is considered to be a child node If node_Action cascade During the operation\uff0cWill execute intit on this page_After using the first node data to trigger the initial page of the link_action Exemplary { \"node_action\" : [ { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, { \"type\" : \"cascade\" , \"page\" : \"user_list\" , \"tag\" : \"\" , }, ] } Configuration Example # Table -type page # { \"name\" : \"user list\" , \"type\" : \"table\" , \"tag\" : \"user_list\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"local_action\" : { \"edit\" : { \"name\" : \"edit\" , \"page\" : \"user_edit\" , \"tag\" : \"\" , \"type\" : \"open\" , \"icon\" : \"edit\" , }, \"delete\" : { \"name\" : \"delete\" , \"tag\" : \"\" , \"type\" : \"direct\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"delete\" , } }, \"global_action\" : { \"create\" : { \"name\" : \"create\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"open\" , \"tag\" : \"\" , } }, } Hint The global and local operations in the configuration include Type=Open type operation\uff0cBut the description is different Global\u2018create\u2019There is only one interface description on the operation page\uff0cTherefore, no Page field is needed\uff0cThe front end will handle it by itself Partial\u2018edit\u2019There will be two interfaces on the operation page\uff08get and post\uff09describe\uff0cTherefore, the page field needs Table model page # The form page pages are generally not local_Action statement\u3002global_Action statement is generally for submitting form operation\u3002 { \"name\" : \"Edit user\" , \"type\" : \"form\" , \"tag\" : \"user_edit\" , \"init_action\" : { \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"global_action\" : { \"confirm\" : { \"name\" : \"confirm\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"post\" , \"type\" : \"direct\" , \"tag\" : \"\" , } } } Tree page # Tree pages generally need to cooperate with Select or Cascade for joint use\uff0cLittle use alone\u3002 { \"name\" : \"User group\" , \"type\" : \"tree\" , \"tag\" : \"user_group\" , \"init_action\" : { }, } Descriptive page # Description page configuration is shown below\uff1a { \"name\" : \"personal information\" , \"type\" : \"description\" , \"tag\" : \"\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"tag\" : \"\" , \"type\" : \"direct\" , }, \"global_action\" : { \"edit\" : { \"name\" : \"edit\" , \"type\" : \"open\" , \"page\" : \"edit_login_user\" , \"tag\" : \"\" , }, }, } Card -type page # The configuration of the card type page is shown below\uff1a { \"name\" : \"Local application\" , \"type\" : \"cards\" , \"tag\" : \"\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"global_action\" : { \"create\" : { \"name\" : \"create\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"tag\" : \"\" , \"type\" : \"open\" , } }, \"local_action\" : { \"eidt\" : { \"name\" : \"edit\" , \"page\" : \"edit_this_app\" , \"type\" : \"open\" , \"tag\" : \"\" , }, \"delete\" : { \"name\" : \"delete\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"delete\" , \"type\" : \"direct\" , \"tag\" : \"\" , } } } Step -type page # { \"name\" : \"Order\" , \"type\" : \"step\" , \"tag\" : \"\" , \"pages\" : [ \"first_step\" , \"second_step\" , \"third_step\" ], } Switch page # { \"name\" : \"Application List\" , \"type\" : \"tabs\" , \"tag\" : \"\" , \"pages\" : [ \"my_app_list\" , \"app_store_list\" , \"purchased_app_list\" ], } Expansion three\uff1aSchema # OpenAPI-PlusUse pydantic Medium Field Methods to expand the SCHEMA field\u3002The following will explain which fields are extended and explained to the usage of these fields in the front -end interface\u3002 Types of/Format type/format # type information Page display integer Number Digital input box string String type String input box boolean Boolean Switch button array Array Drop -down selection object Object type Mainly multiple forms format information Page display textarea Long text Adjustable long text input box link Link Use A tag display date-time time Time selector auto Automatic filling Trigger options when dropping down\uff0cCooperate Option_ACTION dynamic Dynamic form You can add multiple and delete a form based on a certain unit binary binary file Input box and upload button qrcode QR code Display QR code markdown MDDocumentation Display MD documentation badges Label Display multiple label content besides\uff0cThere are still some other schema descriptions\uff0cIt also affects the display of the front -end page\u3002for example\uff1a Enumeration (enum) - Use the drop -down single selection box allOf - Use FormObject oneOf - Use FormObject $ref - Use FormObject Additional information When declared deprecated=True or Hidden=True\uff0cThe front -end interface is not displayed When declared Readonly=True\uff0cThe front -end interface is forbidden to edit operate *_action # The operation of this module mainly performs a single operation of some attributes in the SCHEMA description\u3002Mainly contain the following three situations\uff0cThis module can be expanded\uff0cDepending on the actual situation and needs\u3002Each content is similar to the page configuration operation described above\u3002 Keyword Types of item_action [Element item operation] (#item_action) suffix_action [Discose operation] (#suffix_action) option_action [Select item operation] (#option_action) item_action # Element item operation is mainly used in the element of the switch button type\uff0cThat is Type=Bool's element\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"close\" : false , } suffix_action # The suffix item operation is mainly used for image Send a school code Similar form items operation\u3002Through Suffix_Action description\uff0cThe front end will read and identify\uff0cAnd click the button to operate on the Input input box\uff0cInitiating Suffix_action\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"name\" : \"Send a school code\" , \"delay\" : 60 , } option_action # Selected items are mainly used to obtain the drop -down selection box data\u3002Via Option_Action description\uff0cWhen the user mouse is moved into the corresponding front page Select element\uff0cTrigger the operation\u3002This operation needs to pay attention to the format of returning the data\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , } Dialog page # Hint Think about: Why do I need to pop up a new dialog box?\uff1f When you need to select one or more data in a page and add it uniformly When you need to select a certain or more data in a page and make a unified transmission When a certain element description is used to add a PAGE attribute with FIELD\uff0cThen it means when clicking the page element\uff0cYou need to open the dialog box page of the page attribute direction\u3002 page\u5c5e\u6027\u6307\u5411\u7684\u5185\u5bb9\u9700\u8981\u5728 pages \u3002besides\uff0cYou also need to declare whether the data is multiple or single\uff0cSingle optional use string \uff0cChoose more use array \u3002 When the data is added or passed back, only the ID value is required\uff0cDon't make another statement again\u3002Otherwise, you need to declare the SCHEMA content of the return\u3002As follows: class UserGroupCreateParentIn ( Schema ): \"\"\"hidden=TrueIt means that you don't need to be displayed at the front end\uff0cBut you need to return in the interface\"\"\" id : UUID = Field ( hidden = True ) name : str class UserGroupCreateIn ( ModalSchema ): parent : Optional [ UserGroupCreateParentIn ] = Field ( title = _ ( \"Superior user group\" ), page = \"\" , ) Extended four\uff1ainterface\uff08paths\uff09 # OpenAPI-PlusDo some necessary extensions to the Paths module\u3002Such as Operationid and other content\u3002 Use these contents to set and match the interface API permissions\u3002 Extended five\uff1aAuthority\uff08permissions\uff09 # OpenAPI-PlusAdded permissions related modules\u3002 Implement the control of the API interface and page through the matching of permissions\u3002 Expand\uff1aglobalization\uff08translation\uff09 # OpenAPI-PlusAdded an international module\u3002 It mainly includes Chinese and English information that needs to be translated in the OpenAPI description\u3002","title":"OpenAPI Plus"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#openapi-plus","text":"OpenAPI-Plus use django-ninja and pydantic function extension\uff0cTo achieve adaptation ArkID The purpose of the front end of the one -account project\u3002 OpenAPI-Plus Mainly tells what extensions it has made\uff0cAnd what do these expansion exist?\uff1fPlease continue to read the document\u3002","title":"OpenAPI Plus"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#extended-one-routingrouters","text":"Its main declaration front -end routing information\uff0cBy reading analysis routers Middle content\uff0cGenerate the front sidebar of the front end of the front end\u3002A total of two categories can be divided into two categories\uff1a Have Children Routing none Children Routing Keyword meaning Types of path Front -end access path\uff0cuse/Characters are superimposed string name Name of side barn route string icon Large -boring routing icon\uff0cNeed to cooperate with the front -end statement string hidden Whether to hide\uff0cIf you do true\uff0cDo not show in the front sidebar of the front end boolean page This route needs to be rendered\uff0cSpecific information direction pages Expand string url Visit the URL interface directly\uff0cDeficiency of GET\uff0cThe interface returns the new URL address\uff0cPut in iframe display string web Whether it is the sidebar of the computer end\uff0cCan contain order number, boolean mobile Whether it is the bottom bar of the mobile phone\uff0cAnd sequence number, boolean Important statement path Out of service . Special characters\u3002 page Out of service [ ] { } Special characters\u3002 There is a Children route example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"children\" : [ { \"path\" : \"profile\" , \"name\" : \"Personal management\" , \"page\" : \"mine_profile\" , \"icon\" : \"profile\" }, { \"path\" : \"logout\" , \"name\" : \"sign out\" , \"page\" : \"mine_logout\" , \"icon\" : \"logout\" } ] } No Children Routing Example { \"path\" : \"mine\" , \"name\" : \"mine\" , \"icon\" : \"mine\" , \"hidden\" : true , \"page\" : \"mine\" }","title":"Extended one: routing\uff08routers\uff09"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#extended-two-page-configurationpages","text":"Declarize the configuration information required to generate the front end page\uff0cThe front end will be parsed according to the content returned by OpenAPI\uff0cSo as to generate various types of front -end pages\u3002The following will explain the meaning of each configuration and how to express and display the corresponding expression at the front end\u3002 question Generate a form or form page page\uff0cNeed those configuration information\uff1f Generate a tree structure page\uff1f What are the differences between the page?\uff1f","title":"Extended two: Page configuration\uff08pages\uff09"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#page-type","text":"For the above problems\uff0cGive us the current Support \u2714 or Be supported \u2718 Page type\u3002 Types of name Support table Table -type page \u2714 form Table model page \u2714 tree Tree -like page \u2714 tabs Switch page \u2714 description Descriptive page \u2714 cards Card -type page \u2714 grid Grid page \u2718 list List -type page \u2718 step Step -type page \u2714","title":"Page type"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#page-configuration","text":"Explain the configuration required in the page\uff0cTo support the generation situation of the above -mentioned pages\u3002 Keyword meaning Features Additional information type Page type Generate front -end page template For details, refer to the following page type description tag Page identifier Matching the unique page configuration Page unique tag name Page name Corresponding display front -end page title Need to support Chinese and English init_action [Page initialization operation] (#_6) Get SCHEMA and data Specific reference to init_Action detailed description init_data Initialization data Initialized assignment operation Start from the parent -level data pool by default global_action [Page global operation] (#_7) Generate global button operation Specific reference Global_Action detailed description local_action [Page local operation] (#_8) Generate local button operation Specific reference Local_Action detailed description node_action [Page node operation] (#_9) Generate nodes, click operation It may exist in TREE/Cards and other pages\uff0cSpecific reference node_Action detailed description select Whether it is an optional page Selected page This field is not required in the form page pages tabs/stepMulti -page pointing Generate tabs/STEP multi -page Only in TABS/In step page important hint tag Cannot only [ ] { } Special characters tag Do not repeat a tag under the same page","title":"Page configuration"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#page-operation","text":"The main configuration of the page is composed of multiple operations\u3002Including initialization data acquisition operation\uff0cClick, deletion, change, etc. Click to operate\u3002So the operation configuration has extremely important meaning and detailed configuration statement\u3002","title":"Page operation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#operating-type","text":"Keyword name Detail description Support direct Direct Common in confirming editing or deleting, and clicking on tree nodes to get children and other operations \u2714 open Bomber Open the dialog\uff0cShow a new type page\uff0cCommon operations such as creating or editing \u2714 cascade Classification Commonly used on the grade pages of tree -shaped pages\uff0cWhen clicking a certain node, The data display page that appears side by side \u2714 import Import Use when importing files or data \u2718 export Export type Use when exporting files or data\uff0cDivided into full export or partial export \u2718 next Step Click to continue the next operation\uff0cAutomatically add a step button according to the situation \u2714 url Address Change the current browser address bar address directly \u2714","title":"Operating type"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#operating-configuration","text":"Keyword meaning Features tag Operating label Can be used for front -end operation name path APIinterface Used to match SCHEMA description and obtain data method APIInterface method Above type [Operation type] (#_4) Easy to identify operation\uff0cSee the specific instructions above page Page tag When the operation type is open\uff0cPointing to the tag on the page name Operating name Front -end page button name\uff0cnode_Action does not need to include this content icon icon Optional\uff0cNot supported yet close Closure condition Turn on the switch -type button operation open Open condition Open condition of the switch button operation hint The above fields are optional fields\uff0cYou need to declare according to the specific situation tagOr page can not include special characters close/openOnly support BOOL description\uff0cOther conditions are under plan development close=True; (\u2714) open=False; (\u2714) close=is_system; (\u2718) open=!is_admin; (\u2718) close=is_system&!is_admin; (\u2718)","title":"Operating configuration"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#initialization-operation","text":"init_actionThe purpose is to obtain a page SCHEMA structure and initial data\u3002That is, when you open or see a page\uff0cThis operation will automatically initiate\uff0cThen fill in the obtained data into the page\u3002 It mainly contains path and method \uff0cThe operation type is direct Types of\uff0cThere are no other types of initialization operations at present\u3002 { \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"tag\" : \"\" , \"type\" : \"direct\" , } }","title":"Initialization operation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#global-operation","text":"global_actionMainly complete the generation of the pages global button\uff0cAnd complete the initialization of its corresponding operation according to the configuration\u3002Such as creation/Import and other operations\u3002 Its configuration needs to be completely followed by [Operation Configuration] (#_5) Explanation to complete\u3002 { \"global_action\" : { \"create\" : { \"name\" : \"Newly built\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"open\" , \"page\" : \"user_create\" , \"tag\" : \"\" , }, \"import\" : { \"name\" : \"Import\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"import\" , \"tag\" : \"\" , }, \"export\" : { \"name\" : \"Export\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"export\" , \"tag\" : \"\" , }, } }","title":"Global operation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#local-operation","text":"local_actionMainly complete the generation of page parts of the page\uff0cAnd the initialization of its operation\u3002Such as deleting/Edit and other operations\u3002 Its configuration needs to be completely followed by [Operation Configuration] (#_5) Explanation to complete\u3002 Exemplary { \"local_action\" : { \"edit\" : { \"name\" : \"edit\" , \"type\" : \"open\" , \"page\" : \"user_edit\" , \"tag\" : \"\" , }, \"delete\" : { \"name\" : \"delete\" , \"type\" : \"direct\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"delete\" , \"tag\" : \"\" , } } }","title":"Local operation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#node-operation","text":"node_actionMainly complete the generation of the operation of the page node\uff0cThere is no display of the corresponding button\u3002 The function is mainly to obtain the data of the sub -node and the level connection page\uff0cIn the CARDS type page, it can be used as a click CARDS operation statement\u3002 hint node_actionConfigure for array type If node_What is in Action direct During the operation\uff0cAnd the current tree page\uff0cThe default is considered to be a child node If node_Action cascade During the operation\uff0cWill execute intit on this page_After using the first node data to trigger the initial page of the link_action Exemplary { \"node_action\" : [ { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, { \"type\" : \"cascade\" , \"page\" : \"user_list\" , \"tag\" : \"\" , }, ] }","title":"Node operation"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#configuration-example","text":"","title":"Configuration Example"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#table-type-page","text":"{ \"name\" : \"user list\" , \"type\" : \"table\" , \"tag\" : \"user_list\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"local_action\" : { \"edit\" : { \"name\" : \"edit\" , \"page\" : \"user_edit\" , \"tag\" : \"\" , \"type\" : \"open\" , \"icon\" : \"edit\" , }, \"delete\" : { \"name\" : \"delete\" , \"tag\" : \"\" , \"type\" : \"direct\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"delete\" , } }, \"global_action\" : { \"create\" : { \"name\" : \"create\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"type\" : \"open\" , \"tag\" : \"\" , } }, } Hint The global and local operations in the configuration include Type=Open type operation\uff0cBut the description is different Global\u2018create\u2019There is only one interface description on the operation page\uff0cTherefore, no Page field is needed\uff0cThe front end will handle it by itself Partial\u2018edit\u2019There will be two interfaces on the operation page\uff08get and post\uff09describe\uff0cTherefore, the page field needs","title":"Table -type page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#table-model-page","text":"The form page pages are generally not local_Action statement\u3002global_Action statement is generally for submitting form operation\u3002 { \"name\" : \"Edit user\" , \"type\" : \"form\" , \"tag\" : \"user_edit\" , \"init_action\" : { \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"global_action\" : { \"confirm\" : { \"name\" : \"confirm\" , \"path\" : \"/api/v1/xxx/{id}/\" , \"method\" : \"post\" , \"type\" : \"direct\" , \"tag\" : \"\" , } } }","title":"Table model page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#tree-page","text":"Tree pages generally need to cooperate with Select or Cascade for joint use\uff0cLittle use alone\u3002 { \"name\" : \"User group\" , \"type\" : \"tree\" , \"tag\" : \"user_group\" , \"init_action\" : { }, }","title":"Tree page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#descriptive-page","text":"Description page configuration is shown below\uff1a { \"name\" : \"personal information\" , \"type\" : \"description\" , \"tag\" : \"\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"tag\" : \"\" , \"type\" : \"direct\" , }, \"global_action\" : { \"edit\" : { \"name\" : \"edit\" , \"type\" : \"open\" , \"page\" : \"edit_login_user\" , \"tag\" : \"\" , }, }, }","title":"Descriptive page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#card-type-page","text":"The configuration of the card type page is shown below\uff1a { \"name\" : \"Local application\" , \"type\" : \"cards\" , \"tag\" : \"\" , \"init_action\" : { \"path\" : \"/api/v1/xxx\" , \"method\" : \"get\" , \"type\" : \"direct\" , \"tag\" : \"\" , }, \"global_action\" : { \"create\" : { \"name\" : \"create\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"tag\" : \"\" , \"type\" : \"open\" , } }, \"local_action\" : { \"eidt\" : { \"name\" : \"edit\" , \"page\" : \"edit_this_app\" , \"type\" : \"open\" , \"tag\" : \"\" , }, \"delete\" : { \"name\" : \"delete\" , \"path\" : \"/api/v1/xxx\" , \"method\" : \"delete\" , \"type\" : \"direct\" , \"tag\" : \"\" , } } }","title":"Card -type page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#step-type-page","text":"{ \"name\" : \"Order\" , \"type\" : \"step\" , \"tag\" : \"\" , \"pages\" : [ \"first_step\" , \"second_step\" , \"third_step\" ], }","title":"Step -type page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#switch-page","text":"{ \"name\" : \"Application List\" , \"type\" : \"tabs\" , \"tag\" : \"\" , \"pages\" : [ \"my_app_list\" , \"app_store_list\" , \"purchased_app_list\" ], }","title":"Switch page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#expansion-threeschema","text":"OpenAPI-PlusUse pydantic Medium Field Methods to expand the SCHEMA field\u3002The following will explain which fields are extended and explained to the usage of these fields in the front -end interface\u3002","title":"Expansion three\uff1aSchema"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#types-offormat-typeformat","text":"type information Page display integer Number Digital input box string String type String input box boolean Boolean Switch button array Array Drop -down selection object Object type Mainly multiple forms format information Page display textarea Long text Adjustable long text input box link Link Use A tag display date-time time Time selector auto Automatic filling Trigger options when dropping down\uff0cCooperate Option_ACTION dynamic Dynamic form You can add multiple and delete a form based on a certain unit binary binary file Input box and upload button qrcode QR code Display QR code markdown MDDocumentation Display MD documentation badges Label Display multiple label content besides\uff0cThere are still some other schema descriptions\uff0cIt also affects the display of the front -end page\u3002for example\uff1a Enumeration (enum) - Use the drop -down single selection box allOf - Use FormObject oneOf - Use FormObject $ref - Use FormObject Additional information When declared deprecated=True or Hidden=True\uff0cThe front -end interface is not displayed When declared Readonly=True\uff0cThe front -end interface is forbidden to edit","title":"Types of/Format type/format"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#operate-_action","text":"The operation of this module mainly performs a single operation of some attributes in the SCHEMA description\u3002Mainly contain the following three situations\uff0cThis module can be expanded\uff0cDepending on the actual situation and needs\u3002Each content is similar to the page configuration operation described above\u3002 Keyword Types of item_action [Element item operation] (#item_action) suffix_action [Discose operation] (#suffix_action) option_action [Select item operation] (#option_action)","title":"operate *_action"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#item_action","text":"Element item operation is mainly used in the element of the switch button type\uff0cThat is Type=Bool's element\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"close\" : false , }","title":"item_action"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#suffix_action","text":"The suffix item operation is mainly used for image Send a school code Similar form items operation\u3002Through Suffix_Action description\uff0cThe front end will read and identify\uff0cAnd click the button to operate on the Input input box\uff0cInitiating Suffix_action\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , \"name\" : \"Send a school code\" , \"delay\" : 60 , }","title":"suffix_action"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#option_action","text":"Selected items are mainly used to obtain the drop -down selection box data\u3002Via Option_Action description\uff0cWhen the user mouse is moved into the corresponding front page Select element\uff0cTrigger the operation\u3002This operation needs to pay attention to the format of returning the data\u3002 Exemplary { \"path\" : \"/api/v1/xxx\" , \"method\" : \"post\" , }","title":"option_action"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#dialog-page","text":"Hint Think about: Why do I need to pop up a new dialog box?\uff1f When you need to select one or more data in a page and add it uniformly When you need to select a certain or more data in a page and make a unified transmission When a certain element description is used to add a PAGE attribute with FIELD\uff0cThen it means when clicking the page element\uff0cYou need to open the dialog box page of the page attribute direction\u3002 page\u5c5e\u6027\u6307\u5411\u7684\u5185\u5bb9\u9700\u8981\u5728 pages \u3002besides\uff0cYou also need to declare whether the data is multiple or single\uff0cSingle optional use string \uff0cChoose more use array \u3002 When the data is added or passed back, only the ID value is required\uff0cDon't make another statement again\u3002Otherwise, you need to declare the SCHEMA content of the return\u3002As follows: class UserGroupCreateParentIn ( Schema ): \"\"\"hidden=TrueIt means that you don't need to be displayed at the front end\uff0cBut you need to return in the interface\"\"\" id : UUID = Field ( hidden = True ) name : str class UserGroupCreateIn ( ModalSchema ): parent : Optional [ UserGroupCreateParentIn ] = Field ( title = _ ( \"Superior user group\" ), page = \"\" , )","title":"Dialog page"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#extended-fourinterfacepaths","text":"OpenAPI-PlusDo some necessary extensions to the Paths module\u3002Such as Operationid and other content\u3002 Use these contents to set and match the interface API permissions\u3002","title":"Extended four\uff1ainterface\uff08paths\uff09"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#extended-fiveauthoritypermissions","text":"OpenAPI-PlusAdded permissions related modules\u3002 Implement the control of the API interface and page through the matching of permissions\u3002","title":"Extended five\uff1aAuthority\uff08permissions\uff09"},{"location":"%20%20Developer%20Guide/Reference%20Documentation/OpenAPI%20Plus/#expandglobalizationtranslation","text":"OpenAPI-PlusAdded an international module\u3002 It mainly includes Chinese and English information that needs to be translated in the OpenAPI description\u3002","title":"Expand\uff1aglobalization\uff08translation\uff09"},{"location":"About%20Us/","text":"Longgui Technology # The domestic software industry is large but not strong # Although the Chinese software industry starts late\uff0cBut development so far\uff0cWe already have a nearly trillion -dollar market size and nearly 8 million practitioners\u3002But what is not commensurate is\uff0cThe research and development of domestic software is always in the low -end position of the related industrial chain\u3002 Any market or business\uff0cIn essence, the source of formation is the needs of customers\u3002Software companies, as Party B, are meeting customer needs\uff0cThis industry presents completely different characteristics\u3002 Software market\uff0cCustomers can be divided into several levels by paid ability\uff1aGovernment and public institutions\u3001Large state -owned enterprises and private enterprises\u3001Medium -sized enterprise\u3001Small and micro enterprise\u3001personal\u3002 First category\u2014\u2014Government and public institutions \uff0cBecause the central government encourages and supports the information industry\uff0cAnd give these institutions in full space in the budget\uff0cGovernment and public institutions have strong paid capacity\uff0cOccupy the entire market\u3002 Supported by local governments and public institutions\uff0cIn the early days of the software industry development, a large number of local software companies\uff0cLay the foundation for the software industry\u3002 But due to its stable customer relationship\uff0cMake it lack of enthusiasm for R & D investment\u3002And due to its strong regional character\uff0cWill fight each other\u3002At the same time to reduce costs\uff0cSuch software companies are more willing to use mature business solutions abroad\uff0cIt also indirectly allows customers to purchase some expensive overseas software products\u3002 Second category\u2014\u2014Large state -owned enterprises and private enterprises \uff0cIts market -oriented operation method is less affected by policies in demand\u3002But due to the huge internal enterprise\uff0cFine division of labor\uff0cComplex business processes\u3001unique\uff0cThis type of customer's demand for software shows a highly customized characteristics\uff0cCan't reduce costs by purchasing existing products\uff0cYou can only organize the development team to customize\u3002 Around these large enterprises to reduce the cost of employment costs\uff0cA group of software companies were also born\uff0cIt can be regarded as a technical outsourcing company for large enterprises\u3002The internal development team of large enterprises exists for the purpose of meeting application needs such as enterprise processes\uff0cLoen the use of conservative technical solutions\uff0cTechnological innovation research and development is not the element of priority consideration\u3002 Third category customer\u2014\u2014The edge departments of medium -sized or large enterprises \uff0cIts scale cannot support the cost of custom software\uff0cOften buy ready -made products\uff0cBuild its business process again\uff0cThey are the mainstream consumers of domestic software products\u3002In the market of this customer group\uff0cSoftware companies present a fierce competition state\u3002In addition to a few areas with strong professional or policy barriers\uff0cCan produce one or two strong men\uff0cOther category software is severe homogeneity\u3002 Internal software protection of software companies is relatively weak\uff0cMay use pirated software\uff0cAnd did not comply with the rules to use the open source code\u3002This method is conducive to software companies with a certain market position to continue to consolidate their market position\uff0cAnd kill later innovators\u3002With the pressure of the rising show\uff0cOver -interest companies tend to invest more resources to maintain their business relationships\uff0cNon -technology\u3002 Category 4\u2014\u2014Small and micro enterprise \uff0cThere are many quantities\u3001The payment capacity is relatively weak\uff0cYou can only use free or extremely low -price rental software\uff0cThis constitutes the current situation of the domestic SaaS software market.\u3002And SaaS software companies can not get health cash flow with even bring\uff0cIt has caused it to stop at the R & D level\u3002 SaaSDue to its professionalism\uff0cUnable to imitate personal software through e -commerce\u3001game\u3001Advertising and other business model monetization\u3002And once SaaS companies want to expand to the field of medium -sized enterprises\uff0cFacing the above -mentioned fierce competition status quo\uff0cMost startup SaaS companies cannot bear this price\u3002 Even if a few SaaS companies have capital blessings\uff0cGrab the next piece of meat from the existing market\uff0cStill falling into the business and cannot be further expanded\u3001The embarrassing situation of capital cannot be obtained\uff0cEnterprises still have to return to the old road that has to invest a lot of resources to maintain market relations\u3002In this situation\uff0cThe R & D department will become a cost center rather than a profit center\u3002SaaS companies are mostly startups\uff0cIts core backbones are mostly from technical products such as technical products\uff0cThey have the willingness to make technological progress\uff0cIf you have a chance\uff0cIt will be the backbone of technological progress\u3002 Fifth category\uff0cPersonal software field \uff0cAttract users for free\uff0cE -commerce\u3001game\u3001Advertising changes traffic\uff0cThis is the home of Internet companies\u3002However\uff0cInternet giants are pursuing market share and profit returns\uff0cHard hoarding a lot of technical talents\uff0cInnovation\uff0cIn particular, technological innovation contains greater risks\uff0cIn the short term, the capital return is difficult to measure\uff0cAs a result, large Internet companies will also be conservative\uff0cFocus on the commercialization of the main business\u3002 The domestic software industry is always at the result of the low -end industrial chain\uff0cThe profit growth of the entire industry does not rely on technological innovation to create\uff0cIt is the scale that seriously relies on manpower\uff0cNeed to expand the scale of labor and extend the time of labor\u3002This situation brings real software producer workers\uff0cinclude\uff1aproduct\u3001design\u3001Develop\u3001Test\uff0cCan not obtain the income growth brought by the industry's development\u3002 This can be seen\uff0cThe existing business model of the entire software industry\uff08Relations of production\uff09Has become technological progress\uff08Productivity development\uff09Restraint\u3002There is a possibility here\uff0cOr a trend\u3001One force\uff0cWant to reshape the production relationship\uff08Industrial revolution\uff09\uff0cTo meet the needs of productivity development\u3002 By analyzing the domestic software industry\uff0cYou can find these problems\uff1a Lack of a market with free resource flowing Software producers rely on time rather than technology innovation drive\uff0cThe scale of the business scale depends on the number of stacking personnel Product homogeneity is serious\uff0cCause malicious competition Poor paid capacity of small and micro enterprises\uff0cLow paid willingness Monopoly of Internet platform Intellectual property protection is weak After eliminating the factors that are not conducive to technological progress\uff0cEnterprises or individuals participating in production and transactions are new market opportunities\uff0cAnd the element of technology is liberated\uff0cYou can be a promoting innovation\u3001New driving driving force for productivity development\uff0cRealize industrial changes\u3002 Promoting the overall change of the software industry needs to change production relations\uff0cCreate a new possibility of connection # The change in the taxi market provides us with ideas\u3002Taxi app by the driver\u3001Passengers integrate on the same platform to complete the transaction directly\uff0cDestroy information barriers\uff0cSuccessfully promoted industry changes through market changes\u3002If the software industry can open up consumers and producers\uff0cEstablish a national software market\uff0cI believe it can achieve the same effect\u3002 Unlike the service provider in the taxi market, it is as simple as the driver\uff0cThe software industry is much more complicated\u3002Software Products\u3001The service faces the ever -changing personalized needs\uff0cAnd many people need to cooperate to complete\u3002this means\uff0cOrganizing producers is a necessary condition for forming a unified market\u3002 The current software producers are scattered in various enterprises\uff0cWhether it is a product\u3001design\u3001Develop\uff0cThe communication between them is very limited\u3002 In the organization of the producer\uff0cThe relatively mature software market in Europe and the United States is a good reference\u3002Enterprise wants to land a IT project\uff0cOften do you first connect to consulting enterprises\uff0cDedicated or excavated by these companies\uff0cThen the professional implementation enterprise is responsible for landing the demand\uff0cSuch implementation companies will purchase various basic software upstream\uff0cIncluding development tools\u3001operating system\u3001Database et al\u3002Implementation enterprises can also be traded with each other\uff0cIncluding functional modules and mature products, etc.\u3002After the development\uff0cThe professional test enterprise is responsible for acceptance and acceptance\u3002 This industrial chain division of labor\uff0cLet the implementation of the implementation of a layer of the customer no longer a pure sea tactics\u3002Although people are still key factors\uff0cBut at least get rid of software development is just a situation of physical labor\u3002 There is no such structure in China\uff0cThe core reason is that the cost advantage brought by the division of labor overseas is not worth the low labor cost in China.\u3002At this point\uff0cOnly further refine the division of labor\uff0cExpand the cost advantage caused by the cooperation of the industrial chain\uff0cOnly producers will move towards the industrialization method that depends on each other\u3002The interests of producers are consistent\uff0cYou can get rid of the competition of the homogeneity of the product\u3002 The same difference from abroad is\uff0cThere are enough industrial groups in China to support the finer granular industrial division of labor\uff0cFrom this point of view\uff0cCompared with Europe and the United States, China has more advantages to complete industrial change deeper\u3002 The cost of copying software products is almost zero.\uff0cUnder the common role of the division of labor and unified market in the industrial chain\uff0cIt's easy to fulfill the selling point with low price\u3001Software market for small and micro enterprises\uff0cEven expand to the field of personal software\u3002at this point\uff0cThere are a lot of price of tens of yuan today\u3001Hundreds of yuan WeChat Mini Program\uff0cThis subdivision software market has already made a good demonstration\u3002 in conclusion\uff0cTo make the software industry a step forward upward\uff0cTo solve the above problems\uff0cIt is necessary to promote the following points\uff1a Establish a national software product market\uff0cLet resources flow freely Establish a software development market based on division of labor cooperation\uff0cIf you consult\u3001Research and development\u3001design\u3001Professional enterprises such as testing Strengthen the connection between the upstream producers of the software industry chain\uff0cTurning competition into mutual assistance\uff0cFor example, establish a source code trading market Strengthen the cooperation of software products on the sales side\uff0cReduce the agency threshold Respect the results of each other\uff0cStrengthen the protection of innovative intellectual property rights Every aspect of the above looks more difficult to achieve in the short term\uff0cBut we can still see some technical trends\uff0cIt's like the buds on the ground\uff0cMake these iron plates a crack\uff0cYou can penetrate into new changes\u3002for example\uff1a Unified identity Represented by OIDC\uff0cEstablish a uniform standard agreement with unified identity certification\uff0cTo reduce the cost of enterprise management software\u3001The foundation of digitalization has laid the foundation\uff0cThis derives a series of IAMs that build unified identity services/IDAAS Enterprise\u3002 Yunyuan Cloud native technology represented by Docker and K8S\uff0cCan greatly reduce the difficulty and cost of operation and maintenance implementation\uff0cIt also has a clearer boundary in the division of labor and operation and maintenance of IT management and operation and maintenance\uff0cThis gives the unified software market plan a technical foundation\u3002There are a number of outstanding technical enterprises that build an enterprise cloud platform based on cloud native technology\u3002 Low code Web technology represented by Vue has recently developed and popularized\uff0cWeb's excellent cross -platform capabilities have changed the software development process greatly\uff0cMany innovative enterprises have begun to explore in the field of low or no code\u3002Although in the exploration stage\uff0cBut the concept of low code is to further refine the division of labor\u3001Reshaping the industrial chain provides a feasible direction\u3002 Open source movement Python\uff0cGoThe open source community of the language is challenging the original Java and.Net -based enterprise software market based on Net\uff0cTechnology companies with open source as a business model are rapidly promoting technology popularization\uff0cBreaking the technical monopoly of large enterprises\uff1bThey also establish standards at the same time\uff0cPromote the integration of the industrial chain\uff0cAnd become core forces\u3002 The country's norms and guidance for the industry\uff0cWe also see a series of measures to introduce a series of incentive industries\u3002certainly\uff0cIt is not enough to rely on government forces alone\u3002The occurrence of the industrial revolution must be the result of the common promotion of many industries\uff0cEspecially SaaS companies\uff0cAs an emerging force\uff0cUnite\uff0cclose co-opperation\uff0cForm an industrial chain\uff0cGrow up\uff0cPromote changes together\u3002 Change\uff0cThe entry point of Longgui Technology # Longgui Technology is trying to do something\uff0cArkid developed by Longgui Technology is a core project carried these ideas\u3002On the surface\uff0cArkid is a IDAAS product\uff0cIt may look similar to the general unified identity product\u3002But the difference lies in\uff1a Open source The reason why it is open source\uff0cThe purpose is to share our products with all industry people\u3002Developing any product requires identity module\uff0cUse ARKID to directly save development time\u3002Arkid support privatization deployment\uff0cWhether it is self -use or as an independent IDAAS site\uff0cYou can use it directly\u3002 Plug -in\uff0cAnd set up a plug -in store ArkIDMost functions rely on plug -in to achieve\u3002The flexibility of the plug -in can meet the user's various personalized needs\uff0cReduce implementation cost\u3002All ARKID users can upload the plug -in they developed to the plug -in store to share or sell with partners\uff0cAnd the implementation can be used to buy these plug -in directly than the cost below direct development\u3002 Built -in SaaS App Store ArkIDBuilt -in application store\u3002Developers can create the entrance to the SaaS application through the official IDAAS platform\uff0cWhether it is the ARKID user whether it is privately deployed or the use of tenants\uff0cYou can use your own ARKID account to log in to use SaaS software in the app store\u3002Share users with Arkid's cooperative developers in this way\u3002 Open proxy rules Whether you are personal or enterprise\uff0cIs the way to use private deployment or tenants\uff0cYou registered ARKID's account through any channel\uff0cAll automatically become ARKID agents\uff0cTo sell all products of plug -in and application stores at the agency price\u3002 Low -code development framework If you are a programmer\uff0cAnd interested in looking at ARKID's code\uff0cYou may find this\uff1aWe incorporate some ideas of low -code development in Arkid's development\uff0cAnd use these ideas to achieve the development framework\u3002This is also an attempt to promote a more fine -grained industrial division of labor\u3002If you are interested\uff0cWelcome to contact us to exchange\u3002 If you are interested in what we are doing\uff0cWelcome to participate in the following forms\uff1a Contribute Issue or code in the open source community Submit a function plug -in in the plug -in store Submit SaaS application in the application store Become an agent to recommend ARKID to customers","title":"Longgui Technology"},{"location":"About%20Us/#longgui-technology","text":"","title":"Longgui Technology"},{"location":"About%20Us/#the-domestic-software-industry-is-large-but-not-strong","text":"Although the Chinese software industry starts late\uff0cBut development so far\uff0cWe already have a nearly trillion -dollar market size and nearly 8 million practitioners\u3002But what is not commensurate is\uff0cThe research and development of domestic software is always in the low -end position of the related industrial chain\u3002 Any market or business\uff0cIn essence, the source of formation is the needs of customers\u3002Software companies, as Party B, are meeting customer needs\uff0cThis industry presents completely different characteristics\u3002 Software market\uff0cCustomers can be divided into several levels by paid ability\uff1aGovernment and public institutions\u3001Large state -owned enterprises and private enterprises\u3001Medium -sized enterprise\u3001Small and micro enterprise\u3001personal\u3002 First category\u2014\u2014Government and public institutions \uff0cBecause the central government encourages and supports the information industry\uff0cAnd give these institutions in full space in the budget\uff0cGovernment and public institutions have strong paid capacity\uff0cOccupy the entire market\u3002 Supported by local governments and public institutions\uff0cIn the early days of the software industry development, a large number of local software companies\uff0cLay the foundation for the software industry\u3002 But due to its stable customer relationship\uff0cMake it lack of enthusiasm for R & D investment\u3002And due to its strong regional character\uff0cWill fight each other\u3002At the same time to reduce costs\uff0cSuch software companies are more willing to use mature business solutions abroad\uff0cIt also indirectly allows customers to purchase some expensive overseas software products\u3002 Second category\u2014\u2014Large state -owned enterprises and private enterprises \uff0cIts market -oriented operation method is less affected by policies in demand\u3002But due to the huge internal enterprise\uff0cFine division of labor\uff0cComplex business processes\u3001unique\uff0cThis type of customer's demand for software shows a highly customized characteristics\uff0cCan't reduce costs by purchasing existing products\uff0cYou can only organize the development team to customize\u3002 Around these large enterprises to reduce the cost of employment costs\uff0cA group of software companies were also born\uff0cIt can be regarded as a technical outsourcing company for large enterprises\u3002The internal development team of large enterprises exists for the purpose of meeting application needs such as enterprise processes\uff0cLoen the use of conservative technical solutions\uff0cTechnological innovation research and development is not the element of priority consideration\u3002 Third category customer\u2014\u2014The edge departments of medium -sized or large enterprises \uff0cIts scale cannot support the cost of custom software\uff0cOften buy ready -made products\uff0cBuild its business process again\uff0cThey are the mainstream consumers of domestic software products\u3002In the market of this customer group\uff0cSoftware companies present a fierce competition state\u3002In addition to a few areas with strong professional or policy barriers\uff0cCan produce one or two strong men\uff0cOther category software is severe homogeneity\u3002 Internal software protection of software companies is relatively weak\uff0cMay use pirated software\uff0cAnd did not comply with the rules to use the open source code\u3002This method is conducive to software companies with a certain market position to continue to consolidate their market position\uff0cAnd kill later innovators\u3002With the pressure of the rising show\uff0cOver -interest companies tend to invest more resources to maintain their business relationships\uff0cNon -technology\u3002 Category 4\u2014\u2014Small and micro enterprise \uff0cThere are many quantities\u3001The payment capacity is relatively weak\uff0cYou can only use free or extremely low -price rental software\uff0cThis constitutes the current situation of the domestic SaaS software market.\u3002And SaaS software companies can not get health cash flow with even bring\uff0cIt has caused it to stop at the R & D level\u3002 SaaSDue to its professionalism\uff0cUnable to imitate personal software through e -commerce\u3001game\u3001Advertising and other business model monetization\u3002And once SaaS companies want to expand to the field of medium -sized enterprises\uff0cFacing the above -mentioned fierce competition status quo\uff0cMost startup SaaS companies cannot bear this price\u3002 Even if a few SaaS companies have capital blessings\uff0cGrab the next piece of meat from the existing market\uff0cStill falling into the business and cannot be further expanded\u3001The embarrassing situation of capital cannot be obtained\uff0cEnterprises still have to return to the old road that has to invest a lot of resources to maintain market relations\u3002In this situation\uff0cThe R & D department will become a cost center rather than a profit center\u3002SaaS companies are mostly startups\uff0cIts core backbones are mostly from technical products such as technical products\uff0cThey have the willingness to make technological progress\uff0cIf you have a chance\uff0cIt will be the backbone of technological progress\u3002 Fifth category\uff0cPersonal software field \uff0cAttract users for free\uff0cE -commerce\u3001game\u3001Advertising changes traffic\uff0cThis is the home of Internet companies\u3002However\uff0cInternet giants are pursuing market share and profit returns\uff0cHard hoarding a lot of technical talents\uff0cInnovation\uff0cIn particular, technological innovation contains greater risks\uff0cIn the short term, the capital return is difficult to measure\uff0cAs a result, large Internet companies will also be conservative\uff0cFocus on the commercialization of the main business\u3002 The domestic software industry is always at the result of the low -end industrial chain\uff0cThe profit growth of the entire industry does not rely on technological innovation to create\uff0cIt is the scale that seriously relies on manpower\uff0cNeed to expand the scale of labor and extend the time of labor\u3002This situation brings real software producer workers\uff0cinclude\uff1aproduct\u3001design\u3001Develop\u3001Test\uff0cCan not obtain the income growth brought by the industry's development\u3002 This can be seen\uff0cThe existing business model of the entire software industry\uff08Relations of production\uff09Has become technological progress\uff08Productivity development\uff09Restraint\u3002There is a possibility here\uff0cOr a trend\u3001One force\uff0cWant to reshape the production relationship\uff08Industrial revolution\uff09\uff0cTo meet the needs of productivity development\u3002 By analyzing the domestic software industry\uff0cYou can find these problems\uff1a Lack of a market with free resource flowing Software producers rely on time rather than technology innovation drive\uff0cThe scale of the business scale depends on the number of stacking personnel Product homogeneity is serious\uff0cCause malicious competition Poor paid capacity of small and micro enterprises\uff0cLow paid willingness Monopoly of Internet platform Intellectual property protection is weak After eliminating the factors that are not conducive to technological progress\uff0cEnterprises or individuals participating in production and transactions are new market opportunities\uff0cAnd the element of technology is liberated\uff0cYou can be a promoting innovation\u3001New driving driving force for productivity development\uff0cRealize industrial changes\u3002","title":"The domestic software industry is large but not strong"},{"location":"About%20Us/#promoting-the-overall-change-of-the-software-industry-needs-to-change-production-relationscreate-a-new-possibility-of-connection","text":"The change in the taxi market provides us with ideas\u3002Taxi app by the driver\u3001Passengers integrate on the same platform to complete the transaction directly\uff0cDestroy information barriers\uff0cSuccessfully promoted industry changes through market changes\u3002If the software industry can open up consumers and producers\uff0cEstablish a national software market\uff0cI believe it can achieve the same effect\u3002 Unlike the service provider in the taxi market, it is as simple as the driver\uff0cThe software industry is much more complicated\u3002Software Products\u3001The service faces the ever -changing personalized needs\uff0cAnd many people need to cooperate to complete\u3002this means\uff0cOrganizing producers is a necessary condition for forming a unified market\u3002 The current software producers are scattered in various enterprises\uff0cWhether it is a product\u3001design\u3001Develop\uff0cThe communication between them is very limited\u3002 In the organization of the producer\uff0cThe relatively mature software market in Europe and the United States is a good reference\u3002Enterprise wants to land a IT project\uff0cOften do you first connect to consulting enterprises\uff0cDedicated or excavated by these companies\uff0cThen the professional implementation enterprise is responsible for landing the demand\uff0cSuch implementation companies will purchase various basic software upstream\uff0cIncluding development tools\u3001operating system\u3001Database et al\u3002Implementation enterprises can also be traded with each other\uff0cIncluding functional modules and mature products, etc.\u3002After the development\uff0cThe professional test enterprise is responsible for acceptance and acceptance\u3002 This industrial chain division of labor\uff0cLet the implementation of the implementation of a layer of the customer no longer a pure sea tactics\u3002Although people are still key factors\uff0cBut at least get rid of software development is just a situation of physical labor\u3002 There is no such structure in China\uff0cThe core reason is that the cost advantage brought by the division of labor overseas is not worth the low labor cost in China.\u3002At this point\uff0cOnly further refine the division of labor\uff0cExpand the cost advantage caused by the cooperation of the industrial chain\uff0cOnly producers will move towards the industrialization method that depends on each other\u3002The interests of producers are consistent\uff0cYou can get rid of the competition of the homogeneity of the product\u3002 The same difference from abroad is\uff0cThere are enough industrial groups in China to support the finer granular industrial division of labor\uff0cFrom this point of view\uff0cCompared with Europe and the United States, China has more advantages to complete industrial change deeper\u3002 The cost of copying software products is almost zero.\uff0cUnder the common role of the division of labor and unified market in the industrial chain\uff0cIt's easy to fulfill the selling point with low price\u3001Software market for small and micro enterprises\uff0cEven expand to the field of personal software\u3002at this point\uff0cThere are a lot of price of tens of yuan today\u3001Hundreds of yuan WeChat Mini Program\uff0cThis subdivision software market has already made a good demonstration\u3002 in conclusion\uff0cTo make the software industry a step forward upward\uff0cTo solve the above problems\uff0cIt is necessary to promote the following points\uff1a Establish a national software product market\uff0cLet resources flow freely Establish a software development market based on division of labor cooperation\uff0cIf you consult\u3001Research and development\u3001design\u3001Professional enterprises such as testing Strengthen the connection between the upstream producers of the software industry chain\uff0cTurning competition into mutual assistance\uff0cFor example, establish a source code trading market Strengthen the cooperation of software products on the sales side\uff0cReduce the agency threshold Respect the results of each other\uff0cStrengthen the protection of innovative intellectual property rights Every aspect of the above looks more difficult to achieve in the short term\uff0cBut we can still see some technical trends\uff0cIt's like the buds on the ground\uff0cMake these iron plates a crack\uff0cYou can penetrate into new changes\u3002for example\uff1a Unified identity Represented by OIDC\uff0cEstablish a uniform standard agreement with unified identity certification\uff0cTo reduce the cost of enterprise management software\u3001The foundation of digitalization has laid the foundation\uff0cThis derives a series of IAMs that build unified identity services/IDAAS Enterprise\u3002 Yunyuan Cloud native technology represented by Docker and K8S\uff0cCan greatly reduce the difficulty and cost of operation and maintenance implementation\uff0cIt also has a clearer boundary in the division of labor and operation and maintenance of IT management and operation and maintenance\uff0cThis gives the unified software market plan a technical foundation\u3002There are a number of outstanding technical enterprises that build an enterprise cloud platform based on cloud native technology\u3002 Low code Web technology represented by Vue has recently developed and popularized\uff0cWeb's excellent cross -platform capabilities have changed the software development process greatly\uff0cMany innovative enterprises have begun to explore in the field of low or no code\u3002Although in the exploration stage\uff0cBut the concept of low code is to further refine the division of labor\u3001Reshaping the industrial chain provides a feasible direction\u3002 Open source movement Python\uff0cGoThe open source community of the language is challenging the original Java and.Net -based enterprise software market based on Net\uff0cTechnology companies with open source as a business model are rapidly promoting technology popularization\uff0cBreaking the technical monopoly of large enterprises\uff1bThey also establish standards at the same time\uff0cPromote the integration of the industrial chain\uff0cAnd become core forces\u3002 The country's norms and guidance for the industry\uff0cWe also see a series of measures to introduce a series of incentive industries\u3002certainly\uff0cIt is not enough to rely on government forces alone\u3002The occurrence of the industrial revolution must be the result of the common promotion of many industries\uff0cEspecially SaaS companies\uff0cAs an emerging force\uff0cUnite\uff0cclose co-opperation\uff0cForm an industrial chain\uff0cGrow up\uff0cPromote changes together\u3002","title":"Promoting the overall change of the software industry needs to change production relations\uff0cCreate a new possibility of connection"},{"location":"About%20Us/#changethe-entry-point-of-longgui-technology","text":"Longgui Technology is trying to do something\uff0cArkid developed by Longgui Technology is a core project carried these ideas\u3002On the surface\uff0cArkid is a IDAAS product\uff0cIt may look similar to the general unified identity product\u3002But the difference lies in\uff1a Open source The reason why it is open source\uff0cThe purpose is to share our products with all industry people\u3002Developing any product requires identity module\uff0cUse ARKID to directly save development time\u3002Arkid support privatization deployment\uff0cWhether it is self -use or as an independent IDAAS site\uff0cYou can use it directly\u3002 Plug -in\uff0cAnd set up a plug -in store ArkIDMost functions rely on plug -in to achieve\u3002The flexibility of the plug -in can meet the user's various personalized needs\uff0cReduce implementation cost\u3002All ARKID users can upload the plug -in they developed to the plug -in store to share or sell with partners\uff0cAnd the implementation can be used to buy these plug -in directly than the cost below direct development\u3002 Built -in SaaS App Store ArkIDBuilt -in application store\u3002Developers can create the entrance to the SaaS application through the official IDAAS platform\uff0cWhether it is the ARKID user whether it is privately deployed or the use of tenants\uff0cYou can use your own ARKID account to log in to use SaaS software in the app store\u3002Share users with Arkid's cooperative developers in this way\u3002 Open proxy rules Whether you are personal or enterprise\uff0cIs the way to use private deployment or tenants\uff0cYou registered ARKID's account through any channel\uff0cAll automatically become ARKID agents\uff0cTo sell all products of plug -in and application stores at the agency price\u3002 Low -code development framework If you are a programmer\uff0cAnd interested in looking at ARKID's code\uff0cYou may find this\uff1aWe incorporate some ideas of low -code development in Arkid's development\uff0cAnd use these ideas to achieve the development framework\u3002This is also an attempt to promote a more fine -grained industrial division of labor\u3002If you are interested\uff0cWelcome to contact us to exchange\u3002 If you are interested in what we are doing\uff0cWelcome to participate in the following forms\uff1a Contribute Issue or code in the open source community Submit a function plug -in in the plug -in store Submit SaaS application in the application store Become an agent to recommend ARKID to customers","title":"Change\uff0cThe entry point of Longgui Technology"},{"location":"Other%20Plug%20-In/com_longgui_account_active/","text":"Account Starting Control Plug -in # Features # Open up/Disable user account number Configuration guide #","title":"Account Starting Control Plug -in"},{"location":"Other%20Plug%20-In/com_longgui_account_active/#account-starting-control-plug-in","text":"","title":"Account Starting Control Plug -in"},{"location":"Other%20Plug%20-In/com_longgui_account_active/#features","text":"Open up/Disable user account number","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_account_active/#configuration-guide","text":"","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_cas_server/","text":"CasServer # CASIt's Central Authentication Abbreviation of service\uff0cCentral Certification Service\u3002When a user visits the CAS authentication server\uff0cRequest authentication\u3002CAS certification service will check whether the user logs in\u3002Go to log in if you don't log in\uff0cIf you have logged in\uff0cCAS will issue a short -term TGT bill\uff0cAnd regatt it to the service address provided by developers\u3002Then\uff0cThe application connects CAS through a secure connection\uff0cAnd provide your own service logo and verification ticket\u3002After that, CAS gave identity information about specific users The entire certification process is shown in the figure: graph LR A[start] --> B [Visit Login Page] --> C {Whether to log in}--> |Yes| D [Bring the bills jump to the service address]--> E [Use bills to obtain user information] --> F [End]; C ---->|No| G[Log in!]; G --> |login successful| D; CasCertification # Create an application # Open the application list New CAS application Click the protocol configuration in the list Select the type as CAS and confirm Click the protocol configuration again in the list Save login and check address use Cas application # Place the login link on a third -party page that needs to be logged in Here you need to allow users to access the unified authentication of Arkid on the side\u3002The service parameter is a callback address after Arkid certification\u3002 http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/e78f117b-1632-42c9-8e3c-ec4fd796c89e/cas/login/?service=http://www.baidu.com The page will automatically jump to log in http://localhost:9528/login?next=/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/e78f117b-1632-42c9-8e3c-ec4fd796c89e/cas/login/%3Fservice%3Dhttp%3A//www.baidu.com&tenant_id=4da114ce-e115-44a0-823b-d372114425d0 After the login is successful, you will get a bill https://www.baidu.com/?ticket=ST-1658743424-pvotuhaInoW1UGQlIlD1eLU6tZoMppu6 Obtain user information through the verification address A bill can only be used once\uff0cService is the same as the previous login\uff0cIf you succeed, you can get user information If you try to use the notes you have used You need to log in each time you get the bill and then use the bill to exchange for user information","title":"CasServer"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_cas_server/#casserver","text":"CASIt's Central Authentication Abbreviation of service\uff0cCentral Certification Service\u3002When a user visits the CAS authentication server\uff0cRequest authentication\u3002CAS certification service will check whether the user logs in\u3002Go to log in if you don't log in\uff0cIf you have logged in\uff0cCAS will issue a short -term TGT bill\uff0cAnd regatt it to the service address provided by developers\u3002Then\uff0cThe application connects CAS through a secure connection\uff0cAnd provide your own service logo and verification ticket\u3002After that, CAS gave identity information about specific users The entire certification process is shown in the figure: graph LR A[start] --> B [Visit Login Page] --> C {Whether to log in}--> |Yes| D [Bring the bills jump to the service address]--> E [Use bills to obtain user information] --> F [End]; C ---->|No| G[Log in!]; G --> |login successful| D;","title":"CasServer"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_cas_server/#cascertification","text":"","title":"CasCertification"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_cas_server/#create-an-application","text":"Open the application list New CAS application Click the protocol configuration in the list Select the type as CAS and confirm Click the protocol configuration again in the list Save login and check address","title":"Create an application"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_cas_server/#use-cas-application","text":"Place the login link on a third -party page that needs to be logged in Here you need to allow users to access the unified authentication of Arkid on the side\u3002The service parameter is a callback address after Arkid certification\u3002 http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/e78f117b-1632-42c9-8e3c-ec4fd796c89e/cas/login/?service=http://www.baidu.com The page will automatically jump to log in http://localhost:9528/login?next=/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/e78f117b-1632-42c9-8e3c-ec4fd796c89e/cas/login/%3Fservice%3Dhttp%3A//www.baidu.com&tenant_id=4da114ce-e115-44a0-823b-d372114425d0 After the login is successful, you will get a bill https://www.baidu.com/?ticket=ST-1658743424-pvotuhaInoW1UGQlIlD1eLU6tZoMppu6 Obtain user information through the verification address A bill can only be used once\uff0cService is the same as the previous login\uff0cIf you succeed, you can get user information If you try to use the notes you have used You need to log in each time you get the bill and then use the bill to exchange for user information","title":"use Cas application"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_ldapserver/","text":"LDAP SERVER # Features # ldapProtocol plugin\uff0cDue to the particularity of the agreement, it needs to be matched with ARKID_ldap_Server service Version\uff1a2.5.x to implement the protocol function This plug -in is based on Arkid data\uff0cImplement the LDAP protocol certification and search function\u3002 Configuration guide # arkid_ldap_serverServer deployment # Contact the administrator or operation and maintenance staff to confirm that the ARKID_ldap_Server service Version\uff1a2.5.x deployment,Or refer to the following documents to deploy yourself by yourself\uff1a k8s helmThe installed Arkid\uff0cAdd LDAP docker-composeThe installed Arkid\uff0cAdd LDAP deployment LDAPSERVER on the Arkid platform In LDAP Link arkid in admin LDAP SERVER Create the yaml file required for LDAP --- apiVersion : v1 kind : Service metadata : name : arkid-ldapjs spec : type : NodePort ports : - name : ldap nodePort : 32581 port : 389 protocol : TCP targetPort : 1389 selector : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs --- apiVersion : apps/v1 kind : Deployment metadata : name : arkid-ldapjs spec : selector : matchLabels : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs template : metadata : labels : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs spec : containers : - env : - name : TZ value : Asia/Shanghai - name : BEURL value : http://dev-arkidv2-be image : registry.cn-zhangjiakou.aliyuncs.com/ark-releases/ldapjs:latest imagePullPolicy : IfNotPresent name : arkid-ldapjs resources : {} initContainers : - command : - sh - -c - sysctl -w net.core.somaxconn=65535 image : busybox imagePullPolicy : Always name : setsysctl resources : {} securityContext : privileged : true Place that may need to be modified args : - \"http://arkid-be\" // This location needs to be filled in the service name of the ARKID back end k8s Install LDAP\uff0cInstalled in Arkid In the name space where you live kubectl -n arkid apply -f ldap.yaml Modify docker-compose.yml document\uff0cRemove the comments from the comments Then execute the command docker-compose up -d Lease plug -in\uff1a Practitioner administrator enters from the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011,Select the lease LDAP in the plug -in lease page Server plugin: ![Lease plugin] (https://S1.ax1x.com/2022/08/01/vktnqj.png) After the lease is successful\uff0cFind LDAP in the list of leased plugins Server plugin,Clicked\u3010Tenant configuration\u3011Button,Configure related information\uff1a ![Configure plug -in] (https://S1.ax1x.com/2022/08/01/vk7jne.md.png) Pay attention to users/Group information field mapping column is mapped in the LDAP protocol, users in the LDAP protocol/The attribute name of the group\uff0cThe field is called the user in the ARKID platform/Group attribute field name\uff0cIf you do not fill it, you will use the default configuration Enter after the configuration is completed\u3010Identity data source\u3011\u3010LDAP SERVER\u3011In the column\uff0cThe information required by the relevant client will be displayed here\uff1a ![Identity data source] (https://S1.ax1x.com/2022/08/01/VKHYHH.md.png) Create a link: ![Create link] (https://S1.ax1x.com/2022/08/01/vkHbUs.md.png) Login name is the login name displayed in the identity data source in the previous step The password is ARKID user password User search: ![User search] (https://S1.ax1x.com/2022/08/01/VKBMrd.md.png) Group search: ![Group search] (https://S1.ax1x.com/2022/08/01/vkb6MT.md.png) Notice\uff1aGroup CN mapping is the ID of the ARKID group model instead of name","title":"LDAP SERVER"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_ldapserver/#ldap-server","text":"","title":"LDAP SERVER"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_ldapserver/#features","text":"ldapProtocol plugin\uff0cDue to the particularity of the agreement, it needs to be matched with ARKID_ldap_Server service Version\uff1a2.5.x to implement the protocol function This plug -in is based on Arkid data\uff0cImplement the LDAP protocol certification and search function\u3002","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_ldapserver/#configuration-guide","text":"","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_ldapserver/#arkid_ldap_serverserver-deployment","text":"Contact the administrator or operation and maintenance staff to confirm that the ARKID_ldap_Server service Version\uff1a2.5.x deployment,Or refer to the following documents to deploy yourself by yourself\uff1a k8s helmThe installed Arkid\uff0cAdd LDAP docker-composeThe installed Arkid\uff0cAdd LDAP deployment LDAPSERVER on the Arkid platform In LDAP Link arkid in admin LDAP SERVER Create the yaml file required for LDAP --- apiVersion : v1 kind : Service metadata : name : arkid-ldapjs spec : type : NodePort ports : - name : ldap nodePort : 32581 port : 389 protocol : TCP targetPort : 1389 selector : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs --- apiVersion : apps/v1 kind : Deployment metadata : name : arkid-ldapjs spec : selector : matchLabels : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs template : metadata : labels : app.kubernetes.io/instance : arkid app.kubernetes.io/name : arkid-ldapjs spec : containers : - env : - name : TZ value : Asia/Shanghai - name : BEURL value : http://dev-arkidv2-be image : registry.cn-zhangjiakou.aliyuncs.com/ark-releases/ldapjs:latest imagePullPolicy : IfNotPresent name : arkid-ldapjs resources : {} initContainers : - command : - sh - -c - sysctl -w net.core.somaxconn=65535 image : busybox imagePullPolicy : Always name : setsysctl resources : {} securityContext : privileged : true Place that may need to be modified args : - \"http://arkid-be\" // This location needs to be filled in the service name of the ARKID back end k8s Install LDAP\uff0cInstalled in Arkid In the name space where you live kubectl -n arkid apply -f ldap.yaml Modify docker-compose.yml document\uff0cRemove the comments from the comments Then execute the command docker-compose up -d Lease plug -in\uff1a Practitioner administrator enters from the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011,Select the lease LDAP in the plug -in lease page Server plugin: ![Lease plugin] (https://S1.ax1x.com/2022/08/01/vktnqj.png) After the lease is successful\uff0cFind LDAP in the list of leased plugins Server plugin,Clicked\u3010Tenant configuration\u3011Button,Configure related information\uff1a ![Configure plug -in] (https://S1.ax1x.com/2022/08/01/vk7jne.md.png) Pay attention to users/Group information field mapping column is mapped in the LDAP protocol, users in the LDAP protocol/The attribute name of the group\uff0cThe field is called the user in the ARKID platform/Group attribute field name\uff0cIf you do not fill it, you will use the default configuration Enter after the configuration is completed\u3010Identity data source\u3011\u3010LDAP SERVER\u3011In the column\uff0cThe information required by the relevant client will be displayed here\uff1a ![Identity data source] (https://S1.ax1x.com/2022/08/01/VKHYHH.md.png) Create a link: ![Create link] (https://S1.ax1x.com/2022/08/01/vkHbUs.md.png) Login name is the login name displayed in the identity data source in the previous step The password is ARKID user password User search: ![User search] (https://S1.ax1x.com/2022/08/01/VKBMrd.md.png) Group search: ![Group search] (https://S1.ax1x.com/2022/08/01/vkb6MT.md.png) Notice\uff1aGroup CN mapping is the ID of the ARKID group model instead of name","title":"arkid_ldap_serverServer deployment"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_multiaccount/","text":"Application multiple accounts # Features # This plugin is based on the ARKID account system (OIDC application) derivative child application multi -account management\uff0cThat is, one ARKID account can bind multiple sub -application accounts\uff0cSubcutors can choose the specific login account when receiving account login sequenceDiagram participant U as user participant P as platform participant A as third-party usage U->>P: Access third -party application P->>A: Jump to third -party application entrance A->>P: Integrate the OIDC protocol data to launch a login request P->>U: Corresponding request\uff0cJump login interface Steps # Login interface #","title":"Application multiple accounts"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_multiaccount/#application-multiple-accounts","text":"","title":"Application multiple accounts"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_multiaccount/#features","text":"This plugin is based on the ARKID account system (OIDC application) derivative child application multi -account management\uff0cThat is, one ARKID account can bind multiple sub -application accounts\uff0cSubcutors can choose the specific login account when receiving account login sequenceDiagram participant U as user participant P as platform participant A as third-party usage U->>P: Access third -party application P->>A: Jump to third -party application entrance A->>P: Integrate the OIDC protocol data to launch a login request P->>U: Corresponding request\uff0cJump login interface","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_multiaccount/#steps","text":"","title":"Steps"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_multiaccount/#login-interface","text":"","title":"Login interface"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_client/","text":"radiusClient # Features # The plug -in supports the Radius server of the given given\uff0cLog in to user login\uff0cIf the login user account exists on the Radius server\uff0cBut there is no existence in Arkid\uff0cWill use a given user name and password to create new users Steps # Find the plug -in and try Click on the tenant configuration Configure the radius server information\uff0cAnd save the certification address Get the tenant ID Login interface # Request address: /api/v1/tenant/{tenant_id}/com_Dragon turtle_app_protocol_radius_client/radius_login/ Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username password password Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.app.protocol.radius.client\" , \"data\" : { \"token\" : \"6a4473603dfae89ac9ef8e6aacdcd2369233d2a5\" } }","title":"radiusClient"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_client/#radiusclient","text":"","title":"radiusClient"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_client/#features","text":"The plug -in supports the Radius server of the given given\uff0cLog in to user login\uff0cIf the login user account exists on the Radius server\uff0cBut there is no existence in Arkid\uff0cWill use a given user name and password to create new users","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_client/#steps","text":"Find the plug -in and try Click on the tenant configuration Configure the radius server information\uff0cAnd save the certification address Get the tenant ID","title":"Steps"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_client/#login-interface","text":"Request address: /api/v1/tenant/{tenant_id}/com_Dragon turtle_app_protocol_radius_client/radius_login/ Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username password password Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.app.protocol.radius.client\" , \"data\" : { \"token\" : \"6a4473603dfae89ac9ef8e6aacdcd2369233d2a5\" } }","title":"Login interface"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/","text":"radiusServer # Features # The plug -in needs to be combined\u300aFreeRadius+REST implementation routing authentication document\u300bUse\uff0cWhen the user uses freeradius for routing authentication\uff0cNeed to combine the plugin\uff0cUser certification for dragon return Steps # Find the plug -in and try Click on the tenant configuration Save the authentication address Get the tenant ID","title":"radiusServer"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/#radiusserver","text":"","title":"radiusServer"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/#features","text":"The plug -in needs to be combined\u300aFreeRadius+REST implementation routing authentication document\u300bUse\uff0cWhen the user uses freeradius for routing authentication\uff0cNeed to combine the plugin\uff0cUser certification for dragon return","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/#steps","text":"Find the plug -in and try Click on the tenant configuration Save the authentication address Get the tenant ID","title":"Steps"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/Docs/","text":"FreeRadius+RestImplement route authentication # FreeRadiusInstall # Install freeradius sudo apt-get install freeradius freeradius-mysql Manually close freeradius service freeradius stop Give/etc/Freeradius directory authority sudo chmod -R 777 /etc/freeradius Restart freeradius if there are prompts\uff1a \"/etc/freeradius/\" is globally writable. Refusing to start due to insecure configuration. You need to execute sudo chmod -R o-w /etc/freeradius Modify the file/etc/freeradius/3.0/Users to cancel the following code comments\uff0cAs a test data steve Cleartext-Password : = \"testing\" Service-Type = Framed-User, Framed-Protocol = PPP, Framed-IP-Address = 172 .16.3.33, Framed-IP-Netmask = 255 .255.255.0, Framed-Routing = Broadcast-Listen, Framed-Filter-Id = \"std.ppp\" , Framed-MTU = 1500 , Framed-Compression = Van-Jacobsen-TCP-IP Restart freeradius (-X means debugging) sudo freeradius -X Open a new terminal for testing\uff0cThe parameters are user names\u3001password\u3001IP and port\u3001key\uff08KEY is /etc/freeradius/3.0/clients.Secret in Conf\uff09 radtest steve testing localhost 1812 testing123 The client expects the results as follows The expected result of the server is as follows You can see the successful verification Access From the above server output description, the following information can be obtained The above is a Request\uff0cThen Radius is verified\uff0cNotice\uff0cThe file he executes is/etc/freeradius/3.0/sites-enabled/default\uff0cAmong them, the Authorize module is where he reads the authentication configuration information\uff0cYou can see that here are all false\uff0cThe description has failed\uff0cThen he prompts User-Name=notfound\uff0cExplain that the user name is not found\uff0cThen returned a information that was certified\u3002 FreeRadiusSupport REST login # Open/etc/freeradius/3.0/sites-enabled/default file Add Auth to Authenticate node-Type Auth-Type rest { rest } Create soft links cd /etc/freeradius/3.0/mods-enabled ln -s ../mods-available/rest . exist/etc/freeradius/3.0/In users file\uff0cConfigure identity verification type DEFAULT Auth-Type : = rest Revise/etc/freeradius/3.0/mods-available/rest Note the content of the following nodes connect_uri preacct accounting post-auth pre-proxy post-proxy Edit Authorize node authorize { uri = \"http://loopbing.natapp1.cc/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/com_longgui_app_protocol_radius_server/radius_login/?action=authorize\" method = 'post' body = 'json' data = '{ \"username\": \"%{User-Name}\", \"password\": \"%{User-Password}\" }' } Edit Authenticate node authenticate { uri = \"http://loopbing.natapp1.cc/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/com_longgui_app_protocol_radius_server/radius_login/?action=authenticate\" method = 'post' body = 'json' data = '{ \"username\": \"%{User-Name}\", \"password\": \"%{User-Password}\" }' } Note that the URI in the AUTHORIZE and Authenticate nodes above needs to be replaced with the login address provided by the Radius server plug -in Open the external network connection Modify the file (/etc/freeradius/3.0/clients.conf)\uff0cThe iPaddr here is the client local IP client test_client { ipaddr = 111 .19.83.95 secret = testing123 } At the same time, open port 1812 of the UDP protocol of the cloud server Start the radius service sudo freeradius -X If the prompt port is occupied, you can run first ps aux | grep radius Find the process sudo kill -9 3452 Kill process Test login radtest admin admin localhost 1812 testing123","title":"FreeRadius+RestImplement route authentication"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/Docs/#freeradiusrestimplement-route-authentication","text":"","title":"FreeRadius+RestImplement route authentication"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/Docs/#freeradiusinstall","text":"Install freeradius sudo apt-get install freeradius freeradius-mysql Manually close freeradius service freeradius stop Give/etc/Freeradius directory authority sudo chmod -R 777 /etc/freeradius Restart freeradius if there are prompts\uff1a \"/etc/freeradius/\" is globally writable. Refusing to start due to insecure configuration. You need to execute sudo chmod -R o-w /etc/freeradius Modify the file/etc/freeradius/3.0/Users to cancel the following code comments\uff0cAs a test data steve Cleartext-Password : = \"testing\" Service-Type = Framed-User, Framed-Protocol = PPP, Framed-IP-Address = 172 .16.3.33, Framed-IP-Netmask = 255 .255.255.0, Framed-Routing = Broadcast-Listen, Framed-Filter-Id = \"std.ppp\" , Framed-MTU = 1500 , Framed-Compression = Van-Jacobsen-TCP-IP Restart freeradius (-X means debugging) sudo freeradius -X Open a new terminal for testing\uff0cThe parameters are user names\u3001password\u3001IP and port\u3001key\uff08KEY is /etc/freeradius/3.0/clients.Secret in Conf\uff09 radtest steve testing localhost 1812 testing123 The client expects the results as follows The expected result of the server is as follows You can see the successful verification Access From the above server output description, the following information can be obtained The above is a Request\uff0cThen Radius is verified\uff0cNotice\uff0cThe file he executes is/etc/freeradius/3.0/sites-enabled/default\uff0cAmong them, the Authorize module is where he reads the authentication configuration information\uff0cYou can see that here are all false\uff0cThe description has failed\uff0cThen he prompts User-Name=notfound\uff0cExplain that the user name is not found\uff0cThen returned a information that was certified\u3002","title":"FreeRadiusInstall"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_radius_server/Docs/#freeradiussupport-rest-login","text":"Open/etc/freeradius/3.0/sites-enabled/default file Add Auth to Authenticate node-Type Auth-Type rest { rest } Create soft links cd /etc/freeradius/3.0/mods-enabled ln -s ../mods-available/rest . exist/etc/freeradius/3.0/In users file\uff0cConfigure identity verification type DEFAULT Auth-Type : = rest Revise/etc/freeradius/3.0/mods-available/rest Note the content of the following nodes connect_uri preacct accounting post-auth pre-proxy post-proxy Edit Authorize node authorize { uri = \"http://loopbing.natapp1.cc/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/com_longgui_app_protocol_radius_server/radius_login/?action=authorize\" method = 'post' body = 'json' data = '{ \"username\": \"%{User-Name}\", \"password\": \"%{User-Password}\" }' } Edit Authenticate node authenticate { uri = \"http://loopbing.natapp1.cc/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/com_longgui_app_protocol_radius_server/radius_login/?action=authenticate\" method = 'post' body = 'json' data = '{ \"username\": \"%{User-Name}\", \"password\": \"%{User-Password}\" }' } Note that the URI in the AUTHORIZE and Authenticate nodes above needs to be replaced with the login address provided by the Radius server plug -in Open the external network connection Modify the file (/etc/freeradius/3.0/clients.conf)\uff0cThe iPaddr here is the client local IP client test_client { ipaddr = 111 .19.83.95 secret = testing123 } At the same time, open port 1812 of the UDP protocol of the cloud server Start the radius service sudo freeradius -X If the prompt port is occupied, you can run first ps aux | grep radius Find the process sudo kill -9 3452 Kill process Test login radtest admin admin localhost 1812 testing123","title":"FreeRadiusSupport REST login"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/","text":"Saml2IdpPlug -in # Features # Saml2Protocol plugin\uff0cAdapt to Alibaba Cloud/Huawei Cloud/zabbix et al. Example # SAML2.0 The configuration method of SP on the market is divided into two categories\uff0c - One category uses a complete metadata file as a inter -exchange data\uff08Public key/Interface\uff09Carrier\uff0cFor example Huawei Cloud; At the same time, supplemented by additional parameters for verification restrictions\uff0cSuch as Alibaba Cloud. - One category is completely uploaded in the form of parameters (public key/Interface, etc.)\uff0cSuch as zabbix. Large manufacturers on the market generally support SAML2.0 protocol\uff0cFor example\u3001OFFICE365, a subsidiary of Microsoft\u3002","title":"Saml2IdpPlug -in"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/#saml2idpplug-in","text":"","title":"Saml2IdpPlug -in"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/#features","text":"Saml2Protocol plugin\uff0cAdapt to Alibaba Cloud/Huawei Cloud/zabbix et al.","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/#example","text":"SAML2.0 The configuration method of SP on the market is divided into two categories\uff0c - One category uses a complete metadata file as a inter -exchange data\uff08Public key/Interface\uff09Carrier\uff0cFor example Huawei Cloud; At the same time, supplemented by additional parameters for verification restrictions\uff0cSuch as Alibaba Cloud. - One category is completely uploaded in the form of parameters (public key/Interface, etc.)\uff0cSuch as zabbix. Large manufacturers on the market generally support SAML2.0 protocol\uff0cFor example\u3001OFFICE365, a subsidiary of Microsoft\u3002","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/AlibabaCloudConfiguration/","text":"Alibaba Cloud Configuration # Alibaba Cloud User SSO # Create an application Download SP metadata file Configuration protocol Download IDP metadata file Upload IDP metad data file Log in to Alibaba Notice Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Alibaba Cloud User SSO\uff0cURL does not fill in the URL Log in to Alibaba Cloud Platform\uff0cEnter the access control page through the avatar drop -down menu\uff0cSelect the user SSO in the SSO management column\uff0ccopy\u3010SAML Service provider metadata data URL\u3011And download the file Click on the right side in Arkid\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type <b> Gathering_Aliyunram </b> \uff0cFill in related data in turn + sp metadataThe file is the data file downloaded in the previous step + See Alibaba Cloud [Document] (https] (https] (HTTPS://help.alien.com/document_detail/144277.html) Click again after confirmation\u3010Configuration protocol\u3011Button,Copy IDP entity ID of ID, download IDP metad data file spare Back to the Alibaba Cloud Platform page again\uff0cClick Edit User SSO Upload the IDP metad data file just downloaded Click to confirm\uff0cBack to the Arkid Unified Certification Platform Desktop\uff0cAt this time, click on Alibaba Cloud User SSO Application Card\uff0cAfter a few jumps, you can enter the Alibaba Cloud Platform About the domain name\uff1aAlibaba Cloud provides auxiliary domain name/Domain name/Set SSO domain name in the default domain name\uff0cUse auxiliary domain name in the example\uff0cPlease refer to the configuration of other domain names on Alibaba Cloud User SSO needs to be added to Alibaba Cloud in advance\uff0cAnd keep it consistent with the user name on the ARKID platform\uff0cFor example, Arkid user admin Corresponding to the Alibaba Cloud Platform users are admin@arkid Alibaba Cloud Character SSO # Preparation Create an application Configuration protocol Download IDP metadata file Create identity provider Creating a Role Configuration role Role authorization Character ARN Modify protocol configuration Log in to Alibaba Download [Alibaba Cloud SP metadata file] (HTTPS://sign in.alien.com/saml-role/sp-Meta.xml) Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Alibaba Cloud character SSO\uff0cURL does not fill in the URL After the addition is completed, click on the right on the right\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type Gathering_He'll fight \uff0cFill in related data in turn + sp metadataThe file is the data file downloaded at the preparation work + RoleThere is no corresponding data at present\uff0cCan be placed as empty\uff0cThe author is used here\"arkid\"Occupy Click to confirm after the configuration is completed\uff0cClick again in the list\u3010Configuration protocol\u3011The button enters the configuration protocol popup window\uff0cCopy IDP entity ID of ID, download IDP metad data file spare Log in to Alibaba Cloud Platform\uff0cEnter the menu menu of the avatar in the upper right corner\u3010Access control\u3011page\uff0cAt\u3010SSO management\u3011Page select SAML protocol->Character SSO->Create identity provider\uff0cUpload the metadata file downloaded in one step here\uff0cAfter the creation is completed, click the identity provider just created\uff0cFind the identity provider ARN for later on the detailed page Identification->In the character column\uff0cCreating a Role\uff0cType selection identity provider,Click Next When configured the role\uff0cIdentity provider type selection SAML\uff0cIdentity provider chooses the identity provider created earlier\uff0cClick to complete After the character is created, the character must be authorized\uff0cI won't go into details here After the above steps are completed\uff0cClick the character just created\uff0cCopy the character ARN spare Back to the ARKID certification platform\uff0cFill in the value of the ROLE column in the protocol configuration pop -up box\uff0cFormat \u3010Character ARN\u3011,\u3010Identity provider ARN\u3011,Pay attention to the half -angle between the two ARN\uff08English sentence\uff09Commas\u3002 Return to the Arkid certification platform desktop\uff0cClick on Alibaba Cloud Character SSO Application Card\uff0cAfter multiple jumps, you can correspond to the role to enter the Alibaba Cloud platform","title":"Alibaba Cloud Configuration"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/AlibabaCloudConfiguration/#alibaba-cloud-configuration","text":"","title":"Alibaba Cloud Configuration"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/AlibabaCloudConfiguration/#alibaba-cloud-user-sso","text":"Create an application Download SP metadata file Configuration protocol Download IDP metadata file Upload IDP metad data file Log in to Alibaba Notice Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Alibaba Cloud User SSO\uff0cURL does not fill in the URL Log in to Alibaba Cloud Platform\uff0cEnter the access control page through the avatar drop -down menu\uff0cSelect the user SSO in the SSO management column\uff0ccopy\u3010SAML Service provider metadata data URL\u3011And download the file Click on the right side in Arkid\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type <b> Gathering_Aliyunram </b> \uff0cFill in related data in turn + sp metadataThe file is the data file downloaded in the previous step + See Alibaba Cloud [Document] (https] (https] (HTTPS://help.alien.com/document_detail/144277.html) Click again after confirmation\u3010Configuration protocol\u3011Button,Copy IDP entity ID of ID, download IDP metad data file spare Back to the Alibaba Cloud Platform page again\uff0cClick Edit User SSO Upload the IDP metad data file just downloaded Click to confirm\uff0cBack to the Arkid Unified Certification Platform Desktop\uff0cAt this time, click on Alibaba Cloud User SSO Application Card\uff0cAfter a few jumps, you can enter the Alibaba Cloud Platform About the domain name\uff1aAlibaba Cloud provides auxiliary domain name/Domain name/Set SSO domain name in the default domain name\uff0cUse auxiliary domain name in the example\uff0cPlease refer to the configuration of other domain names on Alibaba Cloud User SSO needs to be added to Alibaba Cloud in advance\uff0cAnd keep it consistent with the user name on the ARKID platform\uff0cFor example, Arkid user admin Corresponding to the Alibaba Cloud Platform users are admin@arkid","title":"Alibaba Cloud User SSO"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/AlibabaCloudConfiguration/#alibaba-cloud-character-sso","text":"Preparation Create an application Configuration protocol Download IDP metadata file Create identity provider Creating a Role Configuration role Role authorization Character ARN Modify protocol configuration Log in to Alibaba Download [Alibaba Cloud SP metadata file] (HTTPS://sign in.alien.com/saml-role/sp-Meta.xml) Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Alibaba Cloud character SSO\uff0cURL does not fill in the URL After the addition is completed, click on the right on the right\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type Gathering_He'll fight \uff0cFill in related data in turn + sp metadataThe file is the data file downloaded at the preparation work + RoleThere is no corresponding data at present\uff0cCan be placed as empty\uff0cThe author is used here\"arkid\"Occupy Click to confirm after the configuration is completed\uff0cClick again in the list\u3010Configuration protocol\u3011The button enters the configuration protocol popup window\uff0cCopy IDP entity ID of ID, download IDP metad data file spare Log in to Alibaba Cloud Platform\uff0cEnter the menu menu of the avatar in the upper right corner\u3010Access control\u3011page\uff0cAt\u3010SSO management\u3011Page select SAML protocol->Character SSO->Create identity provider\uff0cUpload the metadata file downloaded in one step here\uff0cAfter the creation is completed, click the identity provider just created\uff0cFind the identity provider ARN for later on the detailed page Identification->In the character column\uff0cCreating a Role\uff0cType selection identity provider,Click Next When configured the role\uff0cIdentity provider type selection SAML\uff0cIdentity provider chooses the identity provider created earlier\uff0cClick to complete After the character is created, the character must be authorized\uff0cI won't go into details here After the above steps are completed\uff0cClick the character just created\uff0cCopy the character ARN spare Back to the ARKID certification platform\uff0cFill in the value of the ROLE column in the protocol configuration pop -up box\uff0cFormat \u3010Character ARN\u3011,\u3010Identity provider ARN\u3011,Pay attention to the half -angle between the two ARN\uff08English sentence\uff09Commas\u3002 Return to the Arkid certification platform desktop\uff0cClick on Alibaba Cloud Character SSO Application Card\uff0cAfter multiple jumps, you can correspond to the role to enter the Alibaba Cloud platform","title":"Alibaba Cloud Character SSO"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/HuaweiCloudConfiguration/","text":"Huawei Cloud Configuration # Huawei Cloud Virtual User SSO # Preparation Create identity provider Copy the login link Create an application Configuration protocol Get IDP metad data file Modify identity provider Jump login Download Huawei Yungong Public Platform Metadata File\uff1ahttps://auth.huawei cloud.com/Othui/saml/Meta.xml Log in to Huawei Yungong Public Platform\uff0cEnter\u3010Console\u3011\uff0cFind unified identity certification service\uff0cCreate identity provider After the creation is completed, enter the modified identity provider page\uff0cCopy the login link to the clipboard for later use Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Huawei Cloud Virtual User SSO\uff0cApplication URL is filled in a copy of the copy Click on the right side in Arkid\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type <b> Gathering_Meta </b> \uff0cFill in related data in turn\uff1a sp metadataThe file is the data file downloaded earlier Click again after confirmation\u3010Configuration protocol\u3011Button,Copy IDP entity ID of ID, download IDP metad data file spare Return to Huawei Yungong Public Platform\uff0cUpload the IDP just downloaded in the modified identity provider page Metadata file Enter Arkid Desktop,Click Huawei Cloud Application\uff0cAfter several page jumps\uff0cSuccessful entering Huawei Cloud Platform,Show login user as feederationUser","title":"Huawei Cloud Configuration"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/HuaweiCloudConfiguration/#huawei-cloud-configuration","text":"","title":"Huawei Cloud Configuration"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/HuaweiCloudConfiguration/#huawei-cloud-virtual-user-sso","text":"Preparation Create identity provider Copy the login link Create an application Configuration protocol Get IDP metad data file Modify identity provider Jump login Download Huawei Yungong Public Platform Metadata File\uff1ahttps://auth.huawei cloud.com/Othui/saml/Meta.xml Log in to Huawei Yungong Public Platform\uff0cEnter\u3010Console\u3011\uff0cFind unified identity certification service\uff0cCreate identity provider After the creation is completed, enter the modified identity provider page\uff0cCopy the login link to the clipboard for later use Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Huawei Cloud Virtual User SSO\uff0cApplication URL is filled in a copy of the copy Click on the right side in Arkid\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type <b> Gathering_Meta </b> \uff0cFill in related data in turn\uff1a sp metadataThe file is the data file downloaded earlier Click again after confirmation\u3010Configuration protocol\u3011Button,Copy IDP entity ID of ID, download IDP metad data file spare Return to Huawei Yungong Public Platform\uff0cUpload the IDP just downloaded in the modified identity provider page Metadata file Enter Arkid Desktop,Click Huawei Cloud Application\uff0cAfter several page jumps\uff0cSuccessful entering Huawei Cloud Platform,Show login user as feederationUser","title":"Huawei Cloud Virtual User SSO"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/ZabbixConfiguration/","text":"zabbix SSO # Preparation Add application Configuration protocol Download certificate Configure ZABBIX Certificate key zabbix Certification configuration Add zabbix user Log in to Zabbix zabbixMust be 5.0 above versions\uff0cOtherwise, the SAML2 protocol is not supported Pre -configure private keys and certificates for ZABBIX\uff0cThe file suffix is named.KEY and.crt\uff0cStore in the ZABBIX configuration directory\uff0cGenerally/etc/zabbix/web/certs/ Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Zabbix\uff0cApplication url is ZABBIX_WEB_HOST/index_sso.php After the addition is completed, click on the right on the right\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type Gathering_CERT \uff0cFill in related data in turn + acs : Assertion Consumer URL It should be set to \\<path_to_zabbix_ui>/index_sso.php?acs + sls: Single Logout URL It should be set to \\<path_to_zabbix_ui>/index_sso.php?sls + entity_id: Keep it consistent with the settings of ZABBIX Click to confirm and enter the editing page\uff0cAfter pulling down, you can see the attribute you read only,Download IDP certificate via the link\uff0cAnd copy IDP SSO URL and other backup Place the IDP certificate on the Zabbix configuration directory\uff0cGenerally/etc/zabbix/web/certs/\uff0cPut with the Zabbix certificate \u3010Notice\u3011\uff1a need to use SAML Authentication\uff0cZabbix The private key and certificate should be configured and stored in/etc/zabbix/web/conf/certs/\uff08Different from the version or installation method may be different\uff0cI have the test environment here as zabbix5.4 + docker\uff09 middle\uff0cunless zabbix.conf.php It provides a custom path\u3002 by default\uff0cZabbix Will find in the following position\uff1a + conf/certs/sp.key === \"SPPrivate key file\" + conf/certs/sp.crt === \"SP Certificate file\" + conf/certs/idp.crt === \"IDP Certificate file\" The file name of the file when storing must be SP/idp.crt sp.key Enter the zabbix page authentication configuration page\uff0cAs shown in the figure below\uff0cPay attention to replace IDP entity ID and SSO service URL Use users who are consistent with the user name of Arkid in ZABBIX\uff08Such as admin\uff0cNeed to distinguish writing\uff09,And give enough permissions Enter Arkid Desktop\uff0cClick ZABBIX card\uff0cAfter multiple jumps, you can enter Zabbix as a configuration user.","title":"zabbix SSO"},{"location":"Other%20Plug%20-In/com_longgui_app_protocol_saml2/ZabbixConfiguration/#zabbix-sso","text":"Preparation Add application Configuration protocol Download certificate Configure ZABBIX Certificate key zabbix Certification configuration Add zabbix user Log in to Zabbix zabbixMust be 5.0 above versions\uff0cOtherwise, the SAML2 protocol is not supported Pre -configure private keys and certificates for ZABBIX\uff0cThe file suffix is named.KEY and.crt\uff0cStore in the ZABBIX configuration directory\uff0cGenerally/etc/zabbix/web/certs/ Log in to the ARKID platform\uff0cEnter\u3010Application management\u3011-> \u3010Application List\u3011, Clicked\u3010Add to\u3011Button, Create an application called Zabbix\uff0cApplication url is ZABBIX_WEB_HOST/index_sso.php After the addition is completed, click on the right on the right\u3010Configuration protocol\u3011The button enters the protocol configuration window\uff0cSelect the protocol type Gathering_CERT \uff0cFill in related data in turn + acs : Assertion Consumer URL It should be set to \\<path_to_zabbix_ui>/index_sso.php?acs + sls: Single Logout URL It should be set to \\<path_to_zabbix_ui>/index_sso.php?sls + entity_id: Keep it consistent with the settings of ZABBIX Click to confirm and enter the editing page\uff0cAfter pulling down, you can see the attribute you read only,Download IDP certificate via the link\uff0cAnd copy IDP SSO URL and other backup Place the IDP certificate on the Zabbix configuration directory\uff0cGenerally/etc/zabbix/web/certs/\uff0cPut with the Zabbix certificate \u3010Notice\u3011\uff1a need to use SAML Authentication\uff0cZabbix The private key and certificate should be configured and stored in/etc/zabbix/web/conf/certs/\uff08Different from the version or installation method may be different\uff0cI have the test environment here as zabbix5.4 + docker\uff09 middle\uff0cunless zabbix.conf.php It provides a custom path\u3002 by default\uff0cZabbix Will find in the following position\uff1a + conf/certs/sp.key === \"SPPrivate key file\" + conf/certs/sp.crt === \"SP Certificate file\" + conf/certs/idp.crt === \"IDP Certificate file\" The file name of the file when storing must be SP/idp.crt sp.key Enter the zabbix page authentication configuration page\uff0cAs shown in the figure below\uff0cPay attention to replace IDP entity ID and SSO service URL Use users who are consistent with the user name of Arkid in ZABBIX\uff08Such as admin\uff0cNeed to distinguish writing\uff09,And give enough permissions Enter Arkid Desktop\uff0cClick ZABBIX card\uff0cAfter multiple jumps, you can enter Zabbix as a configuration user.","title":"zabbix SSO"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_email/","text":"Email Certification factors plugin # Features # EmailCertification factors plugin\uff0cUse the mailbox account to complete the user binding and certification Example # Plug -in lease Add certification factor log in page registration page Change the password page Replace the mailbox page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the Email certification factor plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/10/v1j5g1.png) ![Add certification factor] (https://S1.ax1x.com/2022/08/10/v1jtu6.md.png) Notice\uff1aThe SMTP mailbox service here only supports the SSL mode ![Login page] (https://S1.ax1x.com/2022/08/10/v1j09s.png) ![Registration page] (https://S1.ax1x.com/2022/08/10/And 1 h 6 baat.md.png) ![Change the password page] (https://S1.ax1x.com/2022/08/10/v1j2EF.png) ![Replace the mailbox page] (https://S1.ax1x.com/2022/08/10/v1jtHS.md.png)","title":"Email Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_email/#email-certification-factors-plugin","text":"","title":"Email Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_email/#features","text":"EmailCertification factors plugin\uff0cUse the mailbox account to complete the user binding and certification","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_email/#example","text":"Plug -in lease Add certification factor log in page registration page Change the password page Replace the mailbox page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the Email certification factor plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/10/v1j5g1.png) ![Add certification factor] (https://S1.ax1x.com/2022/08/10/v1jtu6.md.png) Notice\uff1aThe SMTP mailbox service here only supports the SSL mode ![Login page] (https://S1.ax1x.com/2022/08/10/v1j09s.png) ![Registration page] (https://S1.ax1x.com/2022/08/10/And 1 h 6 baat.md.png) ![Change the password page] (https://S1.ax1x.com/2022/08/10/v1j2EF.png) ![Replace the mailbox page] (https://S1.ax1x.com/2022/08/10/v1jtHS.md.png)","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_ldap/","text":"LDAP Certification factors plugin # Features # ldapCertification factors plugin\uff0cUse the LDAP protocol to complete the user binding and certification Example # Plug -in lease Add certification factor log in page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the LDAP certification factor plug -in card in the plug -in lease page\uff0cClick to rent Notice\uff1aUser information field mapping field name is the User model attribute field name in the ARKID platform\uff0cMap name is the name of the user information attributes in the LDAP protocol\uff0cAfter the mapping relationship is configured, the user information obtained during the authentication process will be written to the ARKID database","title":"LDAP Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_ldap/#ldap-certification-factors-plugin","text":"","title":"LDAP Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_ldap/#features","text":"ldapCertification factors plugin\uff0cUse the LDAP protocol to complete the user binding and certification","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_ldap/#example","text":"Plug -in lease Add certification factor log in page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the LDAP certification factor plug -in card in the plug -in lease page\uff0cClick to rent Notice\uff1aUser information field mapping field name is the User model attribute field name in the ARKID platform\uff0cMap name is the name of the user information attributes in the LDAP protocol\uff0cAfter the mapping relationship is configured, the user information obtained during the authentication process will be written to the ARKID database","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_otp/","text":"OTPAuthentication # Features # Time -based one -time password algorithm\uff08English\uff1aTime-based One-Time Password\uff0cAbbreviation\uff1aTotp\uff09It is an algorithm based on the one -time password based on the pre -shared key and the current time\u3002It has been accepted by the Internet engineering task group as RFC 6238 Standard [1]\uff0cBecome active open certification\uff08OATH\uff09Cornerstone\uff0cIt is also used in many important provenial verification systems\u3002 TOTPIt is a latency authentication code\uff08HMAC\uff09One of them\u3002It combines a private key and the current timestamp\uff0cUse a password scale to generate a disposable password\u3002Different network delay and clock may cause password receivers to try to encounter the correct time to verify multiple times\uff0cTime stamp usually takes 30 seconds as the interval\uff0cTo avoid repeated attempts\u3002 In specific multiple factors verification applications\uff0cUser verification steps are as follows\uff1aA user enters the user name and password on the website or other server\uff0cTotp using a local smartphone or other devices to generate a disposable password and submit it to the server\uff0cAnd enter the one -time password to the server at the same time\u3002The server runs TOTP and verifies the input disposable password\u3002to this end\uff0cThe clock in the user equipment and the server must be roughly synchronized\uff08The server generally accepts client time-1 range\uff08That is, delayed for 30 seconds\uff09Disposable password generated by the time stamp\uff09\u3002Before\uff0cThe server and the user's device must share a key through a safe channel\uff0cUsed to all the authentication sessions later\u3002If you need to execute more steps\uff0cUsers can also use TOTP to verify the server\u3002 Configuration guide # Plug -in lease Certification factor configuration Open certification management Click to set OTP identity authentication device Scan QR code Edit OTP authentication device\uff0cOpen the application switch Enter through the menu bar on the left\u3010Plug -in management\u3011->\u3010Practitioner plug -in management\u3011\uff0cFind the OTP authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"OTP\",Fill in related information\uff0cThe configuration is completed Notice Each time a new OTP identity authentication device will cover existing Notice You need to install client software such as Google Authenticator or Microsoft Authenticator or Freeotp, After scanning\uff0cEnter OTP code, Click to confirm Login process # First login Enter OTP code Notice If the operation is not timely, OTP code may expire\uff0cJust enter the new OTP code","title":"OTPAuthentication"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_otp/#otpauthentication","text":"","title":"OTPAuthentication"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_otp/#features","text":"Time -based one -time password algorithm\uff08English\uff1aTime-based One-Time Password\uff0cAbbreviation\uff1aTotp\uff09It is an algorithm based on the one -time password based on the pre -shared key and the current time\u3002It has been accepted by the Internet engineering task group as RFC 6238 Standard [1]\uff0cBecome active open certification\uff08OATH\uff09Cornerstone\uff0cIt is also used in many important provenial verification systems\u3002 TOTPIt is a latency authentication code\uff08HMAC\uff09One of them\u3002It combines a private key and the current timestamp\uff0cUse a password scale to generate a disposable password\u3002Different network delay and clock may cause password receivers to try to encounter the correct time to verify multiple times\uff0cTime stamp usually takes 30 seconds as the interval\uff0cTo avoid repeated attempts\u3002 In specific multiple factors verification applications\uff0cUser verification steps are as follows\uff1aA user enters the user name and password on the website or other server\uff0cTotp using a local smartphone or other devices to generate a disposable password and submit it to the server\uff0cAnd enter the one -time password to the server at the same time\u3002The server runs TOTP and verifies the input disposable password\u3002to this end\uff0cThe clock in the user equipment and the server must be roughly synchronized\uff08The server generally accepts client time-1 range\uff08That is, delayed for 30 seconds\uff09Disposable password generated by the time stamp\uff09\u3002Before\uff0cThe server and the user's device must share a key through a safe channel\uff0cUsed to all the authentication sessions later\u3002If you need to execute more steps\uff0cUsers can also use TOTP to verify the server\u3002","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_otp/#configuration-guide","text":"Plug -in lease Certification factor configuration Open certification management Click to set OTP identity authentication device Scan QR code Edit OTP authentication device\uff0cOpen the application switch Enter through the menu bar on the left\u3010Plug -in management\u3011->\u3010Practitioner plug -in management\u3011\uff0cFind the OTP authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"OTP\",Fill in related information\uff0cThe configuration is completed Notice Each time a new OTP identity authentication device will cover existing Notice You need to install client software such as Google Authenticator or Microsoft Authenticator or Freeotp, After scanning\uff0cEnter OTP code, Click to confirm","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_otp/#login-process","text":"First login Enter OTP code Notice If the operation is not timely, OTP code may expire\uff0cJust enter the new OTP code","title":"Login process"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_saml2/","text":"SAML 2.0 Certification factors plugin # Features # SAML 2.0Certification factors plugin\uff0cUse SAML 2.0 protocols to complete user binding and certification Example # Plug -in lease Add certification factor log in page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind SAML in the plug -in rental page 2.0 certified factors plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Authentication\u3011\uff0cClick the added button on the page\uff0cType Select SAML2.0,Upload IDpmetadata file SPMetropolitan data file address Copy to the browser label bar and open the backup","title":"SAML 2.0 Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_saml2/#saml-20-certification-factors-plugin","text":"","title":"SAML 2.0 Certification factors plugin"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_saml2/#features","text":"SAML 2.0Certification factors plugin\uff0cUse SAML 2.0 protocols to complete user binding and certification","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_saml2/#example","text":"Plug -in lease Add certification factor log in page Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind SAML in the plug -in rental page 2.0 certified factors plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Authentication\u3011\uff0cClick the added button on the page\uff0cType Select SAML2.0,Upload IDpmetadata file SPMetropolitan data file address Copy to the browser label bar and open the backup","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_scan/","text":"Code authentication factor # Features # By logging in to the ARKID device\uff0cCall the camera to scan the login QR code on another device\uff0cQuick login to realize account -free passwords Configuration guide # Plug -in lease Certification factor configuration Open the PC login interface Mobile phone open\u3010mine\u3011->\u3010Certification management\u3011->\u3010Scan code login\u3011,Click to start the scan button Scan QR code Confirm login Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the code -scanning authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"Scan\",Fill in related information\uff0cThe configuration is completed Notice chromeBrowser access HTTP website defaults to no permission to access the camera\uff0cNeed to set the parameter (Insecure origins treated as Only then can","title":"Code authentication factor"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_scan/#code-authentication-factor","text":"","title":"Code authentication factor"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_scan/#features","text":"By logging in to the ARKID device\uff0cCall the camera to scan the login QR code on another device\uff0cQuick login to realize account -free passwords","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_scan/#configuration-guide","text":"Plug -in lease Certification factor configuration Open the PC login interface Mobile phone open\u3010mine\u3011->\u3010Certification management\u3011->\u3010Scan code login\u3011,Click to start the scan button Scan QR code Confirm login Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the code -scanning authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"Scan\",Fill in related information\uff0cThe configuration is completed Notice chromeBrowser access HTTP website defaults to no permission to access the camera\uff0cNeed to set the parameter (Insecure origins treated as Only then can","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_webauthn/","text":"WebauthnAuthentication # Features # Web Authentication API\uff08Also known as Web car\uff09Use asymmetric (public-key) cryptography \uff08Asymmetric encryption\uff09Alternative password or SMS SMS registered on the website\u3001Log in\u3001second-factor authentication\uff08Double factor verification\uff09\u3002solved phishing\uff08fishing\uff09\u3001data breaches\uff08Data destruction\uff09\u3001SMS Text attack\u3001Other major security issues such as dual factors verification\uff0cAt the same time, it has significantly improved the ease of use\uff08Because users do not need to manage many more and more complicated passwords)\u3002 Configuration guide # Plug -in lease Certification factor configuration Registration interface Register login interface Login voucher Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the WebAUTHN authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"web car\",Fill in related information\uff0cThe configuration is completed webauthnVoucher management # Open certification management Delete WebaultHn vouchers New Webauthn voucher Notice WebAuthnThe protocol does not support the use of IP address access\uff0cPlease configure the domain name when deploying, otherwise\uff0cBrowser does not support","title":"WebauthnAuthentication"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_webauthn/#webauthnauthentication","text":"","title":"WebauthnAuthentication"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_webauthn/#features","text":"Web Authentication API\uff08Also known as Web car\uff09Use asymmetric (public-key) cryptography \uff08Asymmetric encryption\uff09Alternative password or SMS SMS registered on the website\u3001Log in\u3001second-factor authentication\uff08Double factor verification\uff09\u3002solved phishing\uff08fishing\uff09\u3001data breaches\uff08Data destruction\uff09\u3001SMS Text attack\u3001Other major security issues such as dual factors verification\uff0cAt the same time, it has significantly improved the ease of use\uff08Because users do not need to manage many more and more complicated passwords)\u3002","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_webauthn/#configuration-guide","text":"Plug -in lease Certification factor configuration Registration interface Register login interface Login voucher Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the WebAUTHN authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"web car\",Fill in related information\uff0cThe configuration is completed","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_auth_factor_webauthn/#webauthnvoucher-management","text":"Open certification management Delete WebaultHn vouchers New Webauthn voucher Notice WebAuthnThe protocol does not support the use of IP address access\uff0cPlease configure the domain name when deploying, otherwise\uff0cBrowser does not support","title":"webauthnVoucher management"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_black_list/","text":"Account Blacklist Certification Rules # Features # Account Blacklist Certification Rules: Any user account that meets the blacklist rules cannot be logged in/register\uff0cSupport username\u3001telephone number\u3001Email regular filtering Configuration guide # Plug -in lease Configuration plug -in Login effect Registration effect Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the account blacklist certification rules plug -in in the plug -in rental page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Certification rules\u3011\uff0cClick to create button\uff0cSelect the account blacklist in the pop -up box\uff0cFill in regular expressions and rules names in turn After the configuration is completed, only the current tenants take effect\u3002","title":"Account Blacklist Certification Rules"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_black_list/#account-blacklist-certification-rules","text":"","title":"Account Blacklist Certification Rules"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_black_list/#features","text":"Account Blacklist Certification Rules: Any user account that meets the blacklist rules cannot be logged in/register\uff0cSupport username\u3001telephone number\u3001Email regular filtering","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_black_list/#configuration-guide","text":"Plug -in lease Configuration plug -in Login effect Registration effect Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the account blacklist certification rules plug -in in the plug -in rental page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Certification rules\u3011\uff0cClick to create button\uff0cSelect the account blacklist in the pop -up box\uff0cFill in regular expressions and rules names in turn After the configuration is completed, only the current tenants take effect\u3002","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_white_list/","text":"Account Whitelist Certification Rules # Features # Account Whitelist Certification Rules\uff1aOnly users who meet the whitelist rules can log in/register\uff0cSupport username\u3001telephone number\u3001Email regular filtering Configuration guide # Plug -in lease Configuration plug -in Login effect Registration effect Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind an account white list certification rule plug -in in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Certification rules\u3011\uff0cClick to create button\uff0cSelect the account of the account number in the pop -up box\uff0cFill in regular expressions and rules names in turn After the configuration is completed, only the current tenants take effect\u3002","title":"Account Whitelist Certification Rules"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_white_list/#account-whitelist-certification-rules","text":"","title":"Account Whitelist Certification Rules"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_white_list/#features","text":"Account Whitelist Certification Rules\uff1aOnly users who meet the whitelist rules can log in/register\uff0cSupport username\u3001telephone number\u3001Email regular filtering","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auth_rule_white_list/#configuration-guide","text":"Plug -in lease Configuration plug -in Login effect Registration effect Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind an account white list certification rule plug -in in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011->\u3010Certification rules\u3011\uff0cClick to create button\uff0cSelect the account of the account number in the pop -up box\uff0cFill in regular expressions and rules names in turn After the configuration is completed, only the current tenants take effect\u3002","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/","text":"KerberosAutomatic login plug -in # Features # Via this plug -in\uff0cYou can automatically log in to Arkid with an account in AD domain, The premise that the company has configured the AD domain environment\uff0cEmployee computers are also under domain management Details on how to configure AD domain\uff0cSee [AD domain configuration KERBEROS certification document] (HTTPS://www.Lack.com/longguikeji/Run/L 1 places) ADCreate an ARKID service account in the domain # ADCreate an ARKID service account Configure service account attribute Export the keytab file corresponding to the Arkid service in AD # ADLine Windows Execute commands on the server Configure Arkid Server # ServerInstall the Kerberos client Modify the Kerberos client configuration file ADThe exported KRB5.Keytab to put it/In ETC directory centosExecute commands: yum install Close-workstation Close-libs Close-devel Notice The client software installed in other linux distributions may be different Configure Arkid Kerberos plug -in # Create an automatic login plug -in configuration Configure browser # Open the browser local site Open advanced settings Add Arkid site Notice edgeCommon this settings with Chrome, Firefox needs another configuration method, In addition, you can also set up a computer in the domain through the AD sendsing group strategy reference\uff1a[Through the group strategy, IE will automatically log in to the SP site with the current domain account number] (\"https://www.cnblogs.com/love007/p/4082875.html\") Test automatic login effect # Browser open the Arkid address\uff0cNo need to enter a password\uff0cLog in to Arkid with the current PC domain account","title":"KerberosAutomatic login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#kerberosautomatic-login-plug-in","text":"","title":"KerberosAutomatic login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#features","text":"Via this plug -in\uff0cYou can automatically log in to Arkid with an account in AD domain, The premise that the company has configured the AD domain environment\uff0cEmployee computers are also under domain management Details on how to configure AD domain\uff0cSee [AD domain configuration KERBEROS certification document] (HTTPS://www.Lack.com/longguikeji/Run/L 1 places)","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#adcreate-an-arkid-service-account-in-the-domain","text":"ADCreate an ARKID service account Configure service account attribute","title":"ADCreate an ARKID service account in the domain"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#export-the-keytab-file-corresponding-to-the-arkid-service-in-ad","text":"ADLine Windows Execute commands on the server","title":"Export the keytab file corresponding to the Arkid service in AD"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#configure-arkid-server","text":"ServerInstall the Kerberos client Modify the Kerberos client configuration file ADThe exported KRB5.Keytab to put it/In ETC directory centosExecute commands: yum install Close-workstation Close-libs Close-devel Notice The client software installed in other linux distributions may be different","title":"Configure Arkid Server"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#configure-arkid-kerberos-plug-in","text":"Create an automatic login plug -in configuration","title":"Configure Arkid Kerberos plug -in"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#configure-browser","text":"Open the browser local site Open advanced settings Add Arkid site Notice edgeCommon this settings with Chrome, Firefox needs another configuration method, In addition, you can also set up a computer in the domain through the AD sendsing group strategy reference\uff1a[Through the group strategy, IE will automatically log in to the SP site with the current domain account number] (\"https://www.cnblogs.com/love007/p/4082875.html\")","title":"Configure browser"},{"location":"Other%20Plug%20-In/com_longgui_auto_auth_kerberos/#test-automatic-login-effect","text":"Browser open the Arkid address\uff0cNo need to enter a password\uff0cLog in to Arkid with the current PC domain account","title":"Test automatic login effect"},{"location":"Other%20Plug%20-In/com_longgui_cache_redis/","text":"Cache plugin\uff1aRedis # Features # Access to cache data through redis Example # Plug -in lease Enable plug -in Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the cache plug -in in the plug -in rental page\uff1aRedis plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the cache plug -in in the installed plug -in page\uff1aRedis plug -in card card\uff0cClick on the tenant configuration After the configuration is completed, only the current tenants take effect\u3002","title":"Cache plugin\uff1aRedis"},{"location":"Other%20Plug%20-In/com_longgui_cache_redis/#cache-pluginredis","text":"","title":"Cache plugin\uff1aRedis"},{"location":"Other%20Plug%20-In/com_longgui_cache_redis/#features","text":"Access to cache data through redis","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_cache_redis/#example","text":"Plug -in lease Enable plug -in Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the cache plug -in in the plug -in rental page\uff1aRedis plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the cache plug -in in the installed plug -in page\uff1aRedis plug -in card card\uff0cClick on the tenant configuration After the configuration is completed, only the current tenants take effect\u3002","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_custom_field/","text":"Custom field plug -in # Features # Via this plug -in\uff0cYou can customize the content of the field when creating users and the creation group Install custom field plug -in # Try the plug -in on the platform plug -in management plug -in store Lease the plug -in in the tenant plug -in management Use custom field plug -in # Manage user custom fields Use user custom fields when creating Management group custom field Use a packet custom field when creating","title":"Custom field plug -in"},{"location":"Other%20Plug%20-In/com_longgui_custom_field/#custom-field-plug-in","text":"","title":"Custom field plug -in"},{"location":"Other%20Plug%20-In/com_longgui_custom_field/#features","text":"Via this plug -in\uff0cYou can customize the content of the field when creating users and the creation group","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_custom_field/#install-custom-field-plug-in","text":"Try the plug -in on the platform plug -in management plug -in store Lease the plug -in in the tenant plug -in management","title":"Install custom field plug -in"},{"location":"Other%20Plug%20-In/com_longgui_custom_field/#use-custom-field-plug-in","text":"Manage user custom fields Use user custom fields when creating Management group custom field Use a packet custom field when creating","title":"Use custom field plug -in"},{"location":"Other%20Plug%20-In/com_longgui_export_user/","text":"User and grouping guide # Features # After configuring the user and the user's group plug -in\uff0cYou can click the export button of the user list and group list\uff0cExport user data or group data\u3002Or click the import button\uff0cImport user data or group data Plug -in configuration description # After leased plug -in\uff0cClick the rental of the tenant management\uff0cFind the plug -in Click the tenant configuration button\uff0cSet the export format Export user data Export user group data Import user data\uff0cNeed to fill in the template first and then import Import user group data\uff0cNeed to fill in the template first and then import","title":"User and grouping guide"},{"location":"Other%20Plug%20-In/com_longgui_export_user/#user-and-grouping-guide","text":"","title":"User and grouping guide"},{"location":"Other%20Plug%20-In/com_longgui_export_user/#features","text":"After configuring the user and the user's group plug -in\uff0cYou can click the export button of the user list and group list\uff0cExport user data or group data\u3002Or click the import button\uff0cImport user data or group data","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_export_user/#plug-in-configuration-description","text":"After leased plug -in\uff0cClick the rental of the tenant management\uff0cFind the plug -in Click the tenant configuration button\uff0cSet the export format Export user data Export user group data Import user data\uff0cNeed to fill in the template first and then import Import user group data\uff0cNeed to fill in the template first and then import","title":"Plug -in configuration description"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/","text":"Dingding Third -party login plug -in # Features # After configured the dingding plug -in\uff0cYou can click the dingding icon on the Arkid login page\uff0cJump to dingding website to complete OAAATH2 certification\uff0cAnd bind to the user of Arkid First become a nail developer # For details, please refer to [becoming a nail developer] (https://open.dingtalk.com/document/org/become-a-dingtalk-developer) Please refer to the link to the configuration nail application [Realize the third -party website] (HTTPS://open.dingtalk.com/document/orgapp-server/tutorial-obtaining-user-personal-information) Login nail developer background\uff0cCreate and configure the application # Click to create an application Fill in the form parameter Save the app Key and app Secret Configure development management information Add interface authority Create Arkid third -party login configuration,Get the recovery URL # Create a third party login Click the editor button\uff0cGet ARKID callback URL Update Nail Application Back to Create URL\uff0cClick the login button # Set the nail application back -to -adjust URL Click on the login page nail icon icon Nailing code login Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Dingding Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#dingding-third-party-login-plug-in","text":"","title":"Dingding Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#features","text":"After configured the dingding plug -in\uff0cYou can click the dingding icon on the Arkid login page\uff0cJump to dingding website to complete OAAATH2 certification\uff0cAnd bind to the user of Arkid","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#first-become-a-nail-developer","text":"For details, please refer to [becoming a nail developer] (https://open.dingtalk.com/document/org/become-a-dingtalk-developer) Please refer to the link to the configuration nail application [Realize the third -party website] (HTTPS://open.dingtalk.com/document/orgapp-server/tutorial-obtaining-user-personal-information)","title":"First become a nail developer"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#login-nail-developer-backgroundcreate-and-configure-the-application","text":"Click to create an application Fill in the form parameter Save the app Key and app Secret Configure development management information Add interface authority","title":"Login nail developer background\uff0cCreate and configure the application"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Create a third party login Click the editor button\uff0cGet ARKID callback URL","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#update-nail-application-back-to-create-urlclick-the-login-button","text":"Set the nail application back -to -adjust URL Click on the login page nail icon icon Nailing code login","title":"Update Nail Application Back to Create URL\uff0cClick the login button"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_dingding/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/","text":"Feishu Third -party login plug -in # Features # After configuring the Feishu plugin\uff0cYou can click on the Feishu icon on the Arkid login page\uff0cJump to Feishu website to complete OAATH2 certification\uff0cAnd bind to the user of Arkid Create Feishu application # Open the creation application page Click to create an enterprise self -building application\uff0cFill in the form After the creation is completed\uff0cClick Edit\uff0cClick permission management\uff0cAdd user userID permissions Cut the voucher and basic information page Save the app ID and app Secret Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL Update Feishu application callback URL\uff0cClick the login button # Re -setting Feishu application callback URL Click on the login page Feishu icon icon Click the authorization button Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Feishu Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#feishu-third-party-login-plug-in","text":"","title":"Feishu Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#features","text":"After configuring the Feishu plugin\uff0cYou can click on the Feishu icon on the Arkid login page\uff0cJump to Feishu website to complete OAATH2 certification\uff0cAnd bind to the user of Arkid","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#create-feishu-application","text":"Open the creation application page Click to create an enterprise self -building application\uff0cFill in the form After the creation is completed\uff0cClick Edit\uff0cClick permission management\uff0cAdd user userID permissions Cut the voucher and basic information page Save the app ID and app Secret","title":"Create Feishu application"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#update-feishu-application-callback-urlclick-the-login-button","text":"Re -setting Feishu application callback URL Click on the login page Feishu icon icon Click the authorization button","title":"Update Feishu application callback URL\uff0cClick the login button"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_feishu/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/","text":"Gitee Third -party login plug -in # Features # After configured the gitee plug -in\uff0cYou can click the gitee icon on the Arkid login page\uff0cJump to Gitee website to complete OAUUTH2 certification\uff0cAnd bind to the user of Arkid Create Gitee application # Open the creation application page Click to create an application\uff0cFill in the form (name name\uff0cThe homepage URL and callback URL can be filled in freely\uff0cThe step back to the URL will be changed to ARKID automatically generated URL) Save client Id and client Secret Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL Update GITEE applications back to the URL\uff0cClick the login button # Re -set up Gitee application callback URL Click on the login page gitee icon Click the certification button Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Gitee Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#gitee-third-party-login-plug-in","text":"","title":"Gitee Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#features","text":"After configured the gitee plug -in\uff0cYou can click the gitee icon on the Arkid login page\uff0cJump to Gitee website to complete OAUUTH2 certification\uff0cAnd bind to the user of Arkid","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#create-gitee-application","text":"Open the creation application page Click to create an application\uff0cFill in the form (name name\uff0cThe homepage URL and callback URL can be filled in freely\uff0cThe step back to the URL will be changed to ARKID automatically generated URL) Save client Id and client Secret","title":"Create Gitee application"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#update-gitee-applications-back-to-the-urlclick-the-login-button","text":"Re -set up Gitee application callback URL Click on the login page gitee icon Click the certification button","title":"Update GITEE applications back to the URL\uff0cClick the login button"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_gitee/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/","text":"Miniprogram Third -party login plug -in # Features # After configuring the miniprogram plug -in\uff0cYou can click the login and binding method provided by the plug -in\uff0cVery convenient to use the applet user\uff0cBinding with ARKID users\u3002It can be very convenient to realize the secret login of WeChat applet. Configure the basic information of WeChat Mini Program # Log in to WeChat public platform\uff0cEnter the applet that needs configuration Save the app ID and app Secret Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0cClick to create Click the editor button\uff0cGet the login address\u3001Binding address\u3001Domain name of the login address Update the server domain name of WeChat Mini Program # Configuration server domain name How to use the login interface and binding interface # Login interface Request address: login url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary code code Developers call the method provided by the applet to get a code Request example: http://login url/?code=xxxxx Return parameter: parameter name Parameter Description Exemplary token token User token (only the user has already been bound to have this parameter) ext_id ext_id User ID tenant_id tenant_id Tenant ID bind bind Binding address Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" , \"data\" :{ \"token\" : \"\" , \"ext_id\" : \"o0ByU5cit-Pl3uxeXmsABV4xiRq8\" , \"tenant_id\" : \"4da114cee11544a0823bd372114425d0\" , \"bind\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_miniprogram/0d1183d2-46e5-409c-924c-438f722de2eb/bind\" } } or { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" , \"data\" :{ \"token\" : \"f4d8a6976111f9e3cc08d17bd16154a3dba9a2d5\" } } Binding interface Request address: bind url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization Token token Token obtained by logid user login Request parameter: parameter name Parameter Description Exemplary ext_id ext_id Binding ID obtained in the login interface Request example: http://bind url Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" } How to get the token of Arkid users # login_pageinterface Request address: /api/v1/tenant/{tenant_id}/login_page/ Way of requesting: GET Return sample: { \"data\" :{ \"login\" :{ \"name\" : \"login\" , \"forms\" :[ { \"label\" : \"Username password login\" , \"items\" :[ { \"value\" : null , \"type\" : \"text\" , \"placeholder\" : \"username\" , \"name\" : \"username\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"password\" , \"name\" : \"password\" , \"append\" : null , \"http\" : null }, { \"value\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" , \"type\" : \"hidden\" , \"placeholder\" : null , \"name\" : \"config_id\" , \"append\" : null , \"http\" : null } ], \"submit\" :{ \"prepend\" : null , \"title\" : \"Log in\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : null , \"redirect\" : null , \"http\" :{ \"url\" : \"/api/v1/tenant/tenant_id/auth/?event_tag=com.longgui.auth.factor.password.auth\" , \"method\" : \"post\" , \"params\" : null }, \"delay\" : null , \"agreement\" : null } } ], \"bottoms\" :[ { \"prepend\" : \"No account yet\uff0c\" , \"title\" : \"Sign up now\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"register\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" :{ \"title\" : null , \"buttons\" :[ { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://gitee.com/assets/favicon.ico\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_gitee/8fa7fcf2-d906-4da5-a6a8-1382b70863a5/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://p6-hera.byteimg.com/tos-cn-i-jbbdkfciu3/f3de430ed2b64f90a95fb8a393dfa6bd~tplv-jbbdkfciu3-image:0:0.image\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_feishu/a36d40d6-1374-4503-a8b9-84550d9da24b/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://img.onlinedown.net/download/202108/151913-611379f149740.jpg\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://aa.loopbing.top/api/v1/idp/com_longgui_external_idp_wechatwork/5d6b5935-15bb-46b2-a9f6-aa6329e64a9d/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://src.onlinedown.net/d/file/p/2019-08-06/2dc4d1b597725835d85259829db3fcff.jpg\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_wechatscan/5ac3dec7-44a1-4269-b450-6fe0fd0fe956/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null } ] } }, \"register\" :{ \"name\" : \"register\" , \"forms\" :[ { \"label\" : \"Username and password registration\" , \"items\" :[ { \"value\" : null , \"type\" : \"text\" , \"placeholder\" : \"username\" , \"name\" : \"username\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"password\" , \"name\" : \"password\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"Password Confirmation\" , \"name\" : \"checkpassword\" , \"append\" : null , \"http\" : null }, { \"value\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" , \"type\" : \"hidden\" , \"placeholder\" : null , \"name\" : \"config_id\" , \"append\" : null , \"http\" : null } ], \"submit\" :{ \"prepend\" : null , \"title\" : \"register\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : null , \"redirect\" : null , \"http\" :{ \"url\" : \"/api/v1/tenant/tenant_id/register/?event_tag=com.longgui.auth.factor.password.register\" , \"method\" : \"post\" , \"params\" : null }, \"delay\" : null , \"agreement\" : null } } ], \"bottoms\" :[ { \"prepend\" : \"Existing account\uff0c\" , \"title\" : \"log in immediately\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"login\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" : null }, \"password\" :{ \"name\" : \"password\" , \"forms\" :[ ], \"bottoms\" :[ { \"prepend\" : \"No account yet\uff0c\" , \"title\" : \"Sign up now\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"register\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : \"Existing account\uff0c\" , \"title\" : \"log in immediately\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"login\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" : null } }, \"tenant\" :{ \"id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"name\" : \"Platform tenant\" , \"slug\" : \"\" , \"icon\" : null } } Return instruction: We need to focus on the Items and submit fields of the 0 objects in the Forms in the Login and Register objects in Data\uff0cThe http address in submit is the request address\uff0cItems array is the request parameter Registered interface Request address: /api/v1/tenant/{tenant_id}/register/?event_tag=com.Dragon turtle.auth.factor.password.register Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username username password password password checkpassword checkpassword Repeat the password config_id config_id Configure ID in LOGIN_Page's items have been provided Request example: { \"username\" : \"abcd\" , \"password\" : \"abcd\" , \"checkpassword\" : \"abcd\" , \"config_id\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" } Return parameter: parameter name Parameter Description Exemplary user user User object id id User ID username username username token token User token Request example: { \"error\" : \"0\" , \"package\" : \"core\" , \"message\" : \"\" , \"data\" : { \"user\" : { \"id\" : \"3740d775-e267-49f7-b431-098ca6e65f55\" , \"username\" : \"dage\" }, \"token\" : \"3dde5f5272743b9c82d826be3c0b8c0df290c24b\" } } Login interface Request address: /api/v1/tenant/{tenant_id}/auth/?event_tag=com.Dragon turtle.auth.factor.password.auth Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username username password password password config_id config_id Configure ID in LOGIN_Page's items have been provided Request example: { \"username\" : \"abcd\" , \"password\" : \"abcd\" , \"config_id\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" } Return parameter: parameter name Parameter Description Exemplary user user User object id id User ID username username username token token User token Request example: { \"error\" : \"0\" , \"package\" : \"core\" , \"message\" : \"\" , \"data\" : { \"user\" : { \"id\" : \"3740d775-e267-49f7-b431-098ca6e65f55\" , \"username\" : \"dage\" }, \"token\" : \"3dde5f5272743b9c82d826be3c0b8c0df290c24b\" } }","title":"Miniprogram Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#miniprogram-third-party-login-plug-in","text":"","title":"Miniprogram Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#features","text":"After configuring the miniprogram plug -in\uff0cYou can click the login and binding method provided by the plug -in\uff0cVery convenient to use the applet user\uff0cBinding with ARKID users\u3002It can be very convenient to realize the secret login of WeChat applet.","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#configure-the-basic-information-of-wechat-mini-program","text":"Log in to WeChat public platform\uff0cEnter the applet that needs configuration Save the app ID and app Secret","title":"Configure the basic information of WeChat Mini Program"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0cClick to create Click the editor button\uff0cGet the login address\u3001Binding address\u3001Domain name of the login address","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#update-the-server-domain-name-of-wechat-mini-program","text":"Configuration server domain name","title":"Update the server domain name of WeChat Mini Program"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#how-to-use-the-login-interface-and-binding-interface","text":"Login interface Request address: login url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary code code Developers call the method provided by the applet to get a code Request example: http://login url/?code=xxxxx Return parameter: parameter name Parameter Description Exemplary token token User token (only the user has already been bound to have this parameter) ext_id ext_id User ID tenant_id tenant_id Tenant ID bind bind Binding address Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" , \"data\" :{ \"token\" : \"\" , \"ext_id\" : \"o0ByU5cit-Pl3uxeXmsABV4xiRq8\" , \"tenant_id\" : \"4da114cee11544a0823bd372114425d0\" , \"bind\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_miniprogram/0d1183d2-46e5-409c-924c-438f722de2eb/bind\" } } or { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" , \"data\" :{ \"token\" : \"f4d8a6976111f9e3cc08d17bd16154a3dba9a2d5\" } } Binding interface Request address: bind url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization Token token Token obtained by logid user login Request parameter: parameter name Parameter Description Exemplary ext_id ext_id Binding ID obtained in the login interface Request example: http://bind url Return sample: { \"error\" : \"0\" , \"package\" : \"com.longgui.external.idp.miniprogram\" }","title":"How to use the login interface and binding interface"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_miniprogram/#how-to-get-the-token-of-arkid-users","text":"login_pageinterface Request address: /api/v1/tenant/{tenant_id}/login_page/ Way of requesting: GET Return sample: { \"data\" :{ \"login\" :{ \"name\" : \"login\" , \"forms\" :[ { \"label\" : \"Username password login\" , \"items\" :[ { \"value\" : null , \"type\" : \"text\" , \"placeholder\" : \"username\" , \"name\" : \"username\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"password\" , \"name\" : \"password\" , \"append\" : null , \"http\" : null }, { \"value\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" , \"type\" : \"hidden\" , \"placeholder\" : null , \"name\" : \"config_id\" , \"append\" : null , \"http\" : null } ], \"submit\" :{ \"prepend\" : null , \"title\" : \"Log in\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : null , \"redirect\" : null , \"http\" :{ \"url\" : \"/api/v1/tenant/tenant_id/auth/?event_tag=com.longgui.auth.factor.password.auth\" , \"method\" : \"post\" , \"params\" : null }, \"delay\" : null , \"agreement\" : null } } ], \"bottoms\" :[ { \"prepend\" : \"No account yet\uff0c\" , \"title\" : \"Sign up now\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"register\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" :{ \"title\" : null , \"buttons\" :[ { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://gitee.com/assets/favicon.ico\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_gitee/8fa7fcf2-d906-4da5-a6a8-1382b70863a5/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://p6-hera.byteimg.com/tos-cn-i-jbbdkfciu3/f3de430ed2b64f90a95fb8a393dfa6bd~tplv-jbbdkfciu3-image:0:0.image\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_feishu/a36d40d6-1374-4503-a8b9-84550d9da24b/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://img.onlinedown.net/download/202108/151913-611379f149740.jpg\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://aa.loopbing.top/api/v1/idp/com_longgui_external_idp_wechatwork/5d6b5935-15bb-46b2-a9f6-aa6329e64a9d/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : null , \"title\" : null , \"tooltip\" : null , \"long\" : null , \"img\" : \"https://src.onlinedown.net/d/file/p/2019-08-06/2dc4d1b597725835d85259829db3fcff.jpg\" , \"gopage\" : null , \"redirect\" :{ \"url\" : \"http://localhost:8000/api/v1/idp/com_longgui_external_idp_wechatscan/5ac3dec7-44a1-4269-b450-6fe0fd0fe956/login\" , \"params\" : null }, \"http\" : null , \"delay\" : null , \"agreement\" : null } ] } }, \"register\" :{ \"name\" : \"register\" , \"forms\" :[ { \"label\" : \"Username and password registration\" , \"items\" :[ { \"value\" : null , \"type\" : \"text\" , \"placeholder\" : \"username\" , \"name\" : \"username\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"password\" , \"name\" : \"password\" , \"append\" : null , \"http\" : null }, { \"value\" : null , \"type\" : \"password\" , \"placeholder\" : \"Password Confirmation\" , \"name\" : \"checkpassword\" , \"append\" : null , \"http\" : null }, { \"value\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" , \"type\" : \"hidden\" , \"placeholder\" : null , \"name\" : \"config_id\" , \"append\" : null , \"http\" : null } ], \"submit\" :{ \"prepend\" : null , \"title\" : \"register\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : null , \"redirect\" : null , \"http\" :{ \"url\" : \"/api/v1/tenant/tenant_id/register/?event_tag=com.longgui.auth.factor.password.register\" , \"method\" : \"post\" , \"params\" : null }, \"delay\" : null , \"agreement\" : null } } ], \"bottoms\" :[ { \"prepend\" : \"Existing account\uff0c\" , \"title\" : \"log in immediately\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"login\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" : null }, \"password\" :{ \"name\" : \"password\" , \"forms\" :[ ], \"bottoms\" :[ { \"prepend\" : \"No account yet\uff0c\" , \"title\" : \"Sign up now\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"register\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null }, { \"prepend\" : \"Existing account\uff0c\" , \"title\" : \"log in immediately\" , \"tooltip\" : null , \"long\" : null , \"img\" : null , \"gopage\" : \"login\" , \"redirect\" : null , \"http\" : null , \"delay\" : null , \"agreement\" : null } ], \"extend\" : null } }, \"tenant\" :{ \"id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"name\" : \"Platform tenant\" , \"slug\" : \"\" , \"icon\" : null } } Return instruction: We need to focus on the Items and submit fields of the 0 objects in the Forms in the Login and Register objects in Data\uff0cThe http address in submit is the request address\uff0cItems array is the request parameter Registered interface Request address: /api/v1/tenant/{tenant_id}/register/?event_tag=com.Dragon turtle.auth.factor.password.register Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username username password password password checkpassword checkpassword Repeat the password config_id config_id Configure ID in LOGIN_Page's items have been provided Request example: { \"username\" : \"abcd\" , \"password\" : \"abcd\" , \"checkpassword\" : \"abcd\" , \"config_id\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" } Return parameter: parameter name Parameter Description Exemplary user user User object id id User ID username username username token token User token Request example: { \"error\" : \"0\" , \"package\" : \"core\" , \"message\" : \"\" , \"data\" : { \"user\" : { \"id\" : \"3740d775-e267-49f7-b431-098ca6e65f55\" , \"username\" : \"dage\" }, \"token\" : \"3dde5f5272743b9c82d826be3c0b8c0df290c24b\" } } Login interface Request address: /api/v1/tenant/{tenant_id}/auth/?event_tag=com.Dragon turtle.auth.factor.password.auth Way of requesting: POST Request parameter: parameter name Parameter Description Exemplary username username username password password password config_id config_id Configure ID in LOGIN_Page's items have been provided Request example: { \"username\" : \"abcd\" , \"password\" : \"abcd\" , \"config_id\" : \"70f8d39e-30cc-40de-8a70-ec6495c21e84\" } Return parameter: parameter name Parameter Description Exemplary user user User object id id User ID username username username token token User token Request example: { \"error\" : \"0\" , \"package\" : \"core\" , \"message\" : \"\" , \"data\" : { \"user\" : { \"id\" : \"3740d775-e267-49f7-b431-098ca6e65f55\" , \"username\" : \"dage\" }, \"token\" : \"3dde5f5272743b9c82d826be3c0b8c0df290c24b\" } }","title":"How to get the token of Arkid users"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/","text":"WechatScan Third -party login plug -in # Features # Configure the WeChat code scan code login plug -in\uff0cYou can click on the WeChat icon on the ARKID login page\uff0cJump to WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html) Create WeChat applications # Open the WeChat open platform\uff0cCreate website application Save Appid and AppSecret Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID Return domain name Update WeChat application rebound domain name\uff0cClick the login button # Log in WeChat Open Platform->Enter the web application created Click the WeChat icon button to the login page Scan code login Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"WechatScan Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#wechatscan-third-party-login-plug-in","text":"","title":"WechatScan Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#features","text":"Configure the WeChat code scan code login plug -in\uff0cYou can click on the WeChat icon on the ARKID login page\uff0cJump to WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html)","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#create-wechat-applications","text":"Open the WeChat open platform\uff0cCreate website application Save Appid and AppSecret","title":"Create WeChat applications"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID Return domain name","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#update-wechat-application-rebound-domain-nameclick-the-login-button","text":"Log in WeChat Open Platform->Enter the web application created Click the WeChat icon button to the login page Scan code login","title":"Update WeChat application rebound domain name\uff0cClick the login button"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatscan/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/","text":"WechatWork Third -party login plug -in # Features # After configuring the company's WeChat plug -in\uff0cYou can click on the corporate WeChat icon on the ARKID login page\uff0cJump to corporate WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developer.work.weixin.qq.com/document/path/91025) Create a corporate WeChat application # Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save secret Save corporate ID Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID Return domain name Update corporate WeChat application rebate URL\uff0cClick the login button # Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name\uff0cEnter the callback domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website Open the web link in corporate WeChat\uff0cClick on the company's WeChat icon button Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"WechatWork Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#wechatwork-third-party-login-plug-in","text":"","title":"WechatWork Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#features","text":"After configuring the company's WeChat plug -in\uff0cYou can click on the corporate WeChat icon on the ARKID login page\uff0cJump to corporate WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developer.work.weixin.qq.com/document/path/91025)","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#create-a-corporate-wechat-application","text":"Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save secret Save corporate ID","title":"Create a corporate WeChat application"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID Return domain name","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#update-corporate-wechat-application-rebate-urlclick-the-login-button","text":"Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name\uff0cEnter the callback domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website Open the web link in corporate WeChat\uff0cClick on the company's WeChat icon button","title":"Update corporate WeChat application rebate URL\uff0cClick the login button"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatwork/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/","text":"WechatWorkScan Third -party login plug -in # Features # After configuring the company's WeChat plug -in\uff0cYou can click on the corporate WeChat icon on the ARKID login page\uff0cJump to corporate WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developer.work.weixin.qq.com/document/path/91025) Create a corporate WeChat application # Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save Agent ID and secret Save corporate ID Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL Update corporate WeChat application rebate URL # Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name\uff0cEnter the callback domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website Click on the WeChat icon button of the login page company WeChat scan code login Unified binding and unbinding instructions # See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"WechatWorkScan Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#wechatworkscan-third-party-login-plug-in","text":"","title":"WechatWorkScan Third -party login plug -in"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#features","text":"After configuring the company's WeChat plug -in\uff0cYou can click on the corporate WeChat icon on the ARKID login page\uff0cJump to corporate WeChat to complete OAUTH2 certification\uff0cAnd bind to the user of Arkid Please refer to the docking details [Scan code authorization login] (https://developer.work.weixin.qq.com/document/path/91025)","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#create-a-corporate-wechat-application","text":"Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save Agent ID and secret Save corporate ID","title":"Create a corporate WeChat application"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#update-corporate-wechat-application-rebate-url","text":"Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name\uff0cEnter the callback domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website Click on the WeChat icon button of the login page company WeChat scan code login","title":"Update corporate WeChat application rebate URL"},{"location":"Other%20Plug%20-In/com_longgui_external_idp_wechatworkscan/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (/%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"Other%20Plug%20-In/com_longgui_language_en/","text":"Multi -language package plugin\uff1aEnglish # Configuration guide # Plug -in lease Language package data update Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind a Chinese language package plug -in card in the plug -in lease page\uff0cClick to rent The system provides language package data online update capabilities\uff0cPriority User update language package data > Language package plug -in data > System default language translation Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Language Package Management\u3011\uff0cEnter the language package page page Click on the editor button on the right side of the language bag\uff0cEnter the language package data details page Click the new button in the upper right corner\uff0cEnter the new translation page\uff0cThe original phrase here refers to the phrase to be translated in the system\uff0cTranslation sentences are translated words","title":"Multi -language package plugin\uff1aEnglish"},{"location":"Other%20Plug%20-In/com_longgui_language_en/#multi-language-package-pluginenglish","text":"","title":"Multi -language package plugin\uff1aEnglish"},{"location":"Other%20Plug%20-In/com_longgui_language_en/#configuration-guide","text":"Plug -in lease Language package data update Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind a Chinese language package plug -in card in the plug -in lease page\uff0cClick to rent The system provides language package data online update capabilities\uff0cPriority User update language package data > Language package plug -in data > System default language translation Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Language Package Management\u3011\uff0cEnter the language package page page Click on the editor button on the right side of the language bag\uff0cEnter the language package data details page Click the new button in the upper right corner\uff0cEnter the new translation page\uff0cThe original phrase here refers to the phrase to be translated in the system\uff0cTranslation sentences are translated words","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_message_artemis/","text":"Message middleware\uff1aArtemis # Features # Message data transmitted by the third -party software through Artemis as a middleware and displayed on the Arkid platform Example # Plug -in lease Set up a platform plug -in Send message description Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the message intermediate parts in the plug -in lease page\uff1aArtemis plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Platform plug -in\u3011\uff0cFind the message middleware\uff1aArtemis plug -in card\uff0cEdit configuration illustrate:In addition to the user name and password of the server address port, the configuration information\uff0cCrane name is a unified queue name of the platform\uff0cThat is, all tenants on the platform shared The message structure is as follows\uff1aNote that the ID in the user ID list requires third -party software to obtain the platform by the OIDC protocol { \"title\": \"Message title\", \"content\": \"Message content\", \"url\": \"Jump link\", \"users\": [\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"], #User ID list } python3+stompSend message code example import time import sys import json import stomp class MyListener(stomp.ConnectionListener): def on_error(self,message): print('received an error \"%s\"' % message) def on_message(self, message): print('received a message \"%s\"' % message) hosts = [('your host', 61616)] conn = stomp.Connection(host_and_ports=hosts) conn.set_listener('', MyListener()) conn.connect('artemis', 'artemis', wait=True, headers={\"client-id\":\"arkid\"}) data = { \"title\": \"Message title\", \"content\": \"Message content\", \"url\": \"Jump link\", \"users\": [\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"], #User ID list \"sender\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\" # Sender ID } conn.send(body=json.dumps(data), destination='your destination') time.sleep(2) conn.disconnect()","title":"Message middleware\uff1aArtemis"},{"location":"Other%20Plug%20-In/com_longgui_message_artemis/#message-middlewareartemis","text":"","title":"Message middleware\uff1aArtemis"},{"location":"Other%20Plug%20-In/com_longgui_message_artemis/#features","text":"Message data transmitted by the third -party software through Artemis as a middleware and displayed on the Arkid platform","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_message_artemis/#example","text":"Plug -in lease Set up a platform plug -in Send message description Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the message intermediate parts in the plug -in lease page\uff1aArtemis plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Platform plug -in\u3011\uff0cFind the message middleware\uff1aArtemis plug -in card\uff0cEdit configuration illustrate:In addition to the user name and password of the server address port, the configuration information\uff0cCrane name is a unified queue name of the platform\uff0cThat is, all tenants on the platform shared The message structure is as follows\uff1aNote that the ID in the user ID list requires third -party software to obtain the platform by the OIDC protocol { \"title\": \"Message title\", \"content\": \"Message content\", \"url\": \"Jump link\", \"users\": [\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"], #User ID list } python3+stompSend message code example import time import sys import json import stomp class MyListener(stomp.ConnectionListener): def on_error(self,message): print('received an error \"%s\"' % message) def on_message(self, message): print('received a message \"%s\"' % message) hosts = [('your host', 61616)] conn = stomp.Connection(host_and_ports=hosts) conn.set_listener('', MyListener()) conn.connect('artemis', 'artemis', wait=True, headers={\"client-id\":\"arkid\"}) data = { \"title\": \"Message title\", \"content\": \"Message content\", \"url\": \"Jump link\", \"users\": [\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"], #User ID list \"sender\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\" # Sender ID } conn.send(body=json.dumps(data), destination='your destination') time.sleep(2) conn.disconnect()","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/","text":"MultiOTPSecond factor certification # Features # By deploying Multiotp on the server side Server\uff0cUser Windows System Install MultiotPCREDENTIALPROVIDER, Implement the user's local login or log in to Windows through remote desktop\uff0c In addition to providing user passwords (local account passwords or AD account passwords in the domain environment)\uff0cStill need to provide OTP dynamic password\uff0cIn order to log in to Windows\u3002 Configuration guide # Install Multiotp Server # Download Multotp installation package Install WebService service Confirm that the service has been installed Download link\uff1ahttps://download.multiotp.net/ In Windows SEVER decompression compression\uff0cThe administrator executes the webservice in the Windows directory_Install script Use Chrome to open the Multiotp address\uff1ahttp://localhost:8112/ Windows ServerUsers who need to be synchronized on the upper configuration # Create safety group Safety group adds synchronization users Synchronize AD user to Multiotp # Configure the MultiOTP server and client certification password Configure Multiotp synchronization parameters and synchronize Check the user that has been synchronized Click the print button Binding mobile phone authentication software Mobile phone authentication software display dynamic code Open Powershell terminal, Enter the Windows directory under the MultiotP decompression directory to execute the following command .\\multiotp -config server-secret=secret2OTP Open Powershell terminal, Enter the Windows directory under the MultiotP decompression directory to execute the following command\uff0cPay attention to changing the address of AD\uff0cport\uff0cUsernames and password parameters .\\multiotp -config default-request-prefix-pin=0 .\\multiotp -config default-request-ldap-pwd=0 .\\multiotp -config ldap-server-type=1 .\\multiotp -config ldap-cn-identifier=\"sAMAccountName\" .\\multiotp -config ldap-group-cn-identifier=\"sAMAccountName\" .\\multiotp -config ldap-group-attribute=\"memberOf\" .\\multiotp -config ldap-ssl=0 .\\multiotp -config ldap-port=389 .\\multiotp -config ldap-domain-controllers=DC.dragon.com .\\multiotp -config ldap-base-dn=\"DC=dragon,DC=com\" .\\multiotp -config ldap-bind-dn=\"CN=Administrator,CN=Users,DC=dragon,DC=com\" .\\multiotp -config ldap-server-password=\"2wsx@WSX\" .\\multiotp -config ldap-in-group=\"2FAVPNUsers\" .\\multiotp -config ldap-network-timeout=10 .\\multiotp -config ldap-time-limit=30 .\\multiotp -config ldap-activated=1 .\\multiotp -debug -display-log -ldap-users-sync Use Microsoft Authenticator Or Google Authenticator scan QR code Dynamic code is updated every 30 seconds User computer installation MultiotPCREDENTIALPRovider # Open the download page Click to download the link Decompress installation Set Multiotp Server URL and password Click Next Configure local login and remote login whether a dynamic code requires Click to install Open https://download.multiotp.net/, Click Credential-provider link Fill in the URL and Secret of Multiotp\uff0cSecret and Multiotp configured above The server password remains the same Fill in the URL and Secret of Multiotp\uff0cSecret and Multiotp configured above The server password remains the same Restart the computer\uff0cVerify OTP dynamic code # Enter the user password Enter the mobile phone dynamic code","title":"MultiOTPSecond factor certification"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#multiotpsecond-factor-certification","text":"","title":"MultiOTPSecond factor certification"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#features","text":"By deploying Multiotp on the server side Server\uff0cUser Windows System Install MultiotPCREDENTIALPROVIDER, Implement the user's local login or log in to Windows through remote desktop\uff0c In addition to providing user passwords (local account passwords or AD account passwords in the domain environment)\uff0cStill need to provide OTP dynamic password\uff0cIn order to log in to Windows\u3002","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#configuration-guide","text":"","title":"Configuration guide"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#install-multiotp-server","text":"Download Multotp installation package Install WebService service Confirm that the service has been installed Download link\uff1ahttps://download.multiotp.net/ In Windows SEVER decompression compression\uff0cThe administrator executes the webservice in the Windows directory_Install script Use Chrome to open the Multiotp address\uff1ahttp://localhost:8112/","title":"Install Multiotp Server"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#windows-serverusers-who-need-to-be-synchronized-on-the-upper-configuration","text":"Create safety group Safety group adds synchronization users","title":"Windows ServerUsers who need to be synchronized on the upper configuration"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#synchronize-ad-user-to-multiotp","text":"Configure the MultiOTP server and client certification password Configure Multiotp synchronization parameters and synchronize Check the user that has been synchronized Click the print button Binding mobile phone authentication software Mobile phone authentication software display dynamic code Open Powershell terminal, Enter the Windows directory under the MultiotP decompression directory to execute the following command .\\multiotp -config server-secret=secret2OTP Open Powershell terminal, Enter the Windows directory under the MultiotP decompression directory to execute the following command\uff0cPay attention to changing the address of AD\uff0cport\uff0cUsernames and password parameters .\\multiotp -config default-request-prefix-pin=0 .\\multiotp -config default-request-ldap-pwd=0 .\\multiotp -config ldap-server-type=1 .\\multiotp -config ldap-cn-identifier=\"sAMAccountName\" .\\multiotp -config ldap-group-cn-identifier=\"sAMAccountName\" .\\multiotp -config ldap-group-attribute=\"memberOf\" .\\multiotp -config ldap-ssl=0 .\\multiotp -config ldap-port=389 .\\multiotp -config ldap-domain-controllers=DC.dragon.com .\\multiotp -config ldap-base-dn=\"DC=dragon,DC=com\" .\\multiotp -config ldap-bind-dn=\"CN=Administrator,CN=Users,DC=dragon,DC=com\" .\\multiotp -config ldap-server-password=\"2wsx@WSX\" .\\multiotp -config ldap-in-group=\"2FAVPNUsers\" .\\multiotp -config ldap-network-timeout=10 .\\multiotp -config ldap-time-limit=30 .\\multiotp -config ldap-activated=1 .\\multiotp -debug -display-log -ldap-users-sync Use Microsoft Authenticator Or Google Authenticator scan QR code Dynamic code is updated every 30 seconds","title":"Synchronize AD user to Multiotp"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#user-computer-installation-multiotpcredentialprovider","text":"Open the download page Click to download the link Decompress installation Set Multiotp Server URL and password Click Next Configure local login and remote login whether a dynamic code requires Click to install Open https://download.multiotp.net/, Click Credential-provider link Fill in the URL and Secret of Multiotp\uff0cSecret and Multiotp configured above The server password remains the same Fill in the URL and Secret of Multiotp\uff0cSecret and Multiotp configured above The server password remains the same","title":"User computer installation MultiotPCREDENTIALPRovider"},{"location":"Other%20Plug%20-In/com_longgui_multiotp/#restart-the-computerverify-otp-dynamic-code","text":"Enter the user password Enter the mobile phone dynamic code","title":"Restart the computer\uff0cVerify OTP dynamic code"},{"location":"Other%20Plug%20-In/com_longgui_other_app_subscribe/","text":"Application subscription management plug -in # Features # Application subscription management\uff0cControl desktop application display to facilitate users to distinguish between commonly used applications and uncommon applications Example # Plug -in lease Enable plug -in Subscription status modification Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the application subscription management plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/11/V8JPPJ.png) Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind an application subscription management plug -in card in the installed plug -in page\uff0cClick on the tenant configuration Enter through the menu of the avatar in the upper right corner\u3010Personal management\u3011->\u3010Application subscription management\u3011,The application that needs to be displayed on the desktop makes it the subscription status\uff0cApplication of the subscription status will not directly display on the desktop When subscribing to all\uff0cDesktop display all applications ![When all subscriptions] (https://S1.ax1x.com/2022/08/11/V8JGB6.md.png) ![Desktop display all applications] (https://S1.ax1x.com/2022/08/11/V8JYHF.md.png) Cancel a certain app subscription\uff0cThis application will disappear from the desktop ![Cancel a APP subscription] (https://S1.ax1x.com/2022/08/11/Scratch.md.png) ![This application will disappear from the desktop] (https://S1.ax1x.com/2022/08/11/v8vmrt.md.png)","title":"Application subscription management plug -in"},{"location":"Other%20Plug%20-In/com_longgui_other_app_subscribe/#application-subscription-management-plug-in","text":"","title":"Application subscription management plug -in"},{"location":"Other%20Plug%20-In/com_longgui_other_app_subscribe/#features","text":"Application subscription management\uff0cControl desktop application display to facilitate users to distinguish between commonly used applications and uncommon applications","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_other_app_subscribe/#example","text":"Plug -in lease Enable plug -in Subscription status modification Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the application subscription management plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/11/V8JPPJ.png) Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind an application subscription management plug -in card in the installed plug -in page\uff0cClick on the tenant configuration Enter through the menu of the avatar in the upper right corner\u3010Personal management\u3011->\u3010Application subscription management\u3011,The application that needs to be displayed on the desktop makes it the subscription status\uff0cApplication of the subscription status will not directly display on the desktop When subscribing to all\uff0cDesktop display all applications ![When all subscriptions] (https://S1.ax1x.com/2022/08/11/V8JGB6.md.png) ![Desktop display all applications] (https://S1.ax1x.com/2022/08/11/V8JYHF.md.png) Cancel a certain app subscription\uff0cThis application will disappear from the desktop ![Cancel a APP subscription] (https://S1.ax1x.com/2022/08/11/Scratch.md.png) ![This application will disappear from the desktop] (https://S1.ax1x.com/2022/08/11/v8vmrt.md.png)","title":"Example"},{"location":"Other%20Plug%20-In/com_longgui_register_notice/","text":"Privacy statement # Features # After configuring the privacy statement plug -in\uff0cThe content of a privacy statement on the user registration page will appear on the user registration page Plug -in configuration description # After leased plug -in\uff0cClick the rental of the tenant management\uff0cFind the plug -in Click the tenant configuration button\uff0cSet the title and content","title":"Privacy statement"},{"location":"Other%20Plug%20-In/com_longgui_register_notice/#privacy-statement","text":"","title":"Privacy statement"},{"location":"Other%20Plug%20-In/com_longgui_register_notice/#features","text":"After configuring the privacy statement plug -in\uff0cThe content of a privacy statement on the user registration page will appear on the user registration page","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_register_notice/#plug-in-configuration-description","text":"After leased plug -in\uff0cClick the rental of the tenant management\uff0cFind the plug -in Click the tenant configuration button\uff0cSet the title and content","title":"Plug -in configuration description"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_ad/","text":"AD User data synchronous plugin # Features # ServerThe mode implements the user and organization in AD or OpenLDAP through the standard SCIM interface ClientThe mode implements the user and organization in AD or OpenLDAP through the timing task The following is based on OpenLDAP to explain how to configure the data between Arkid Configure OpenLDAP synchronous data to ARKID # Installation plug -in Configure OpenLDAP as a data source server Configure Arkid as a data synchronization client View the source data in OpenLDAP Verification data has been synchronized to Arkid Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the AD user data synchronization card in the plug -in rental page\uff0cClick to rent Hint openldapAs a data source, only data of specific ObjectClass under the target organization DN\uff0cUser:inetOrgPerson\uff0cOrganize:organizationalUnit Configure from Arkid synchronous data to OpenLDAP # Installation plug -in Configure ARKID as a data synchronization source server Configure OpenLDAP as data synchronization client Configure OpenLDAP Client attribute mapping View the source data in Arkid Verification data has been synchronized to OpenLDAP Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the AD user data synchronization card in the plug -in rental page\uff0cClick to rent Hint openldapObjectClass created by the user is:inetOrgPerson\uff0cObjectClass of the organization is:organizationalUnit, The necessary attribute of the user is SN,cn\uff0cMake sure that there are two in the data mapping\uff0cBefore adding other attribute mapping","title":"AD User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_ad/#ad-user-data-synchronous-plugin","text":"","title":"AD User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_ad/#features","text":"ServerThe mode implements the user and organization in AD or OpenLDAP through the standard SCIM interface ClientThe mode implements the user and organization in AD or OpenLDAP through the timing task The following is based on OpenLDAP to explain how to configure the data between Arkid","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_ad/#configure-openldap-synchronous-data-to-arkid","text":"Installation plug -in Configure OpenLDAP as a data source server Configure Arkid as a data synchronization client View the source data in OpenLDAP Verification data has been synchronized to Arkid Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the AD user data synchronization card in the plug -in rental page\uff0cClick to rent Hint openldapAs a data source, only data of specific ObjectClass under the target organization DN\uff0cUser:inetOrgPerson\uff0cOrganize:organizationalUnit","title":"Configure OpenLDAP synchronous data to ARKID"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_ad/#configure-from-arkid-synchronous-data-to-openldap","text":"Installation plug -in Configure ARKID as a data synchronization source server Configure OpenLDAP as data synchronization client Configure OpenLDAP Client attribute mapping View the source data in Arkid Verification data has been synchronized to OpenLDAP Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the AD user data synchronization card in the plug -in rental page\uff0cClick to rent Hint openldapObjectClass created by the user is:inetOrgPerson\uff0cObjectClass of the organization is:organizationalUnit, The necessary attribute of the user is SN,cn\uff0cMake sure that there are two in the data mapping\uff0cBefore adding other attribute mapping","title":"Configure from Arkid synchronous data to OpenLDAP"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/","text":"Database user and organization data synchronous plug -in # Features # ServerThe mode implements the user and organization in the database server through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server, Synchronous to the client database This plugin only supports MySQL and SQLServer for the time being Configure two MYSQL database database synchronization # Create two databases and tables # Create a Server database that provides synchronous data\uff0cEstablish sync_users , sync_groups surface\uff0c And the intermediate table of the Groups of user sync_users_groups_rel , sync_users_groups_rel User in the middle table_ID key associated SYNC_users(id)\uff0c group_ID key associated SYNC_groups(id) Hint In this example, the relationship between the User and Group is the relationship between Manytomany, If the user belongs to only one group\uff0callowable sync_users Definition group in the table_id\uff0cOuter key associated SYNC_groups(id) Create a client database\uff0cUsed to synchronize the data provided by the server database to the Client database Notice Convenient for demonstration\uff0cThe table definition in the client database is the same as the Server database,The actual production environment may be different Configuration Mysql Source database # Open SCIM data synchronization page\uff0cClick to create Configuration form parameter Configure user attribute mapping Configuration tissue attribute mapping Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Targets must exist in user and organizational attribute mapping lists_ATTR is a mapping of ID, The ID of the user and group in the SCIM protocol here Configure from the source database synchronous data to the client database # Open SCIM data synchronization page, Click to create Configuration Mysql Synchronous client Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Source must exist in the user and organizational attribute mapping list_ATTR is a mapping of ID\uff0cUsed to match the data in the Server and Client database, Determine whether the data has been synchronized View server database table data # View source database Groups View source database users View source database users and groups relationship data View the client database table data # Check the client database Groups Check the client database users Check the relationship data of the CLIENT database users and groups","title":"Database user and organization data synchronous plug -in"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#database-user-and-organization-data-synchronous-plug-in","text":"","title":"Database user and organization data synchronous plug -in"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#features","text":"ServerThe mode implements the user and organization in the database server through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server, Synchronous to the client database This plugin only supports MySQL and SQLServer for the time being","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#configure-two-mysql-database-database-synchronization","text":"","title":"Configure two MYSQL database database synchronization"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#create-two-databases-and-tables","text":"Create a Server database that provides synchronous data\uff0cEstablish sync_users , sync_groups surface\uff0c And the intermediate table of the Groups of user sync_users_groups_rel , sync_users_groups_rel User in the middle table_ID key associated SYNC_users(id)\uff0c group_ID key associated SYNC_groups(id) Hint In this example, the relationship between the User and Group is the relationship between Manytomany, If the user belongs to only one group\uff0callowable sync_users Definition group in the table_id\uff0cOuter key associated SYNC_groups(id) Create a client database\uff0cUsed to synchronize the data provided by the server database to the Client database Notice Convenient for demonstration\uff0cThe table definition in the client database is the same as the Server database,The actual production environment may be different","title":"Create two databases and tables"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#configuration-mysql-source-database","text":"Open SCIM data synchronization page\uff0cClick to create Configuration form parameter Configure user attribute mapping Configuration tissue attribute mapping Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Targets must exist in user and organizational attribute mapping lists_ATTR is a mapping of ID, The ID of the user and group in the SCIM protocol here","title":"Configuration Mysql Source database"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#configure-from-the-source-database-synchronous-data-to-the-client-database","text":"Open SCIM data synchronization page, Click to create Configuration Mysql Synchronous client Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Source must exist in the user and organizational attribute mapping list_ATTR is a mapping of ID\uff0cUsed to match the data in the Server and Client database, Determine whether the data has been synchronized","title":"Configure from the source database synchronous data to the client database"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#view-server-database-table-data","text":"View source database Groups View source database users View source database users and groups relationship data","title":"View server database table data"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_database/#view-the-client-database-table-data","text":"Check the client database Groups Check the client database users Check the relationship data of the CLIENT database users and groups","title":"View the client database table data"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/","text":"DingDing User data synchronous plugin # Features # ServerThe mode implements users and organizations that can obtain dingding through standard SCIM interfaces ClientThe mode is implemented. Users and organizations in Server, Sync to dingding DingDing Server # First become a nail developer # For details, please refer to [becoming a nail developer] (https://open.dingtalk.com/document/org/become-a-dingtalk-developer) Please refer to the link to the configuration nail application [Realize the third -party website] (HTTPS://open.dingtalk.com/document/orgapp-server/tutorial-obtaining-user-personal-information) Login nail developer background\uff0cCreate and configure the application # Click to create an application Fill in the form parameter Save the app Key and app Secret Configure development management information Add personal rights Add communication records (1) Add communication records (2) Add obtaining vouchers permissions Configure the dingding server # Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups DingDing Client # Configure dingding client # Click the identity data source>SCIM data synchronization>Click to create Here is the AppKey and AppSecret of Dingding\uff0cIntroducing the user's mobile phone number requires the only one in the enterprise\uff0cAll users must have a department\uff0cUsers without a department cannot synchronize","title":"DingDing User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#dingding-user-data-synchronous-plugin","text":"","title":"DingDing User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#features","text":"ServerThe mode implements users and organizations that can obtain dingding through standard SCIM interfaces ClientThe mode is implemented. Users and organizations in Server, Sync to dingding","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#dingding-server","text":"","title":"DingDing Server"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#first-become-a-nail-developer","text":"For details, please refer to [becoming a nail developer] (https://open.dingtalk.com/document/org/become-a-dingtalk-developer) Please refer to the link to the configuration nail application [Realize the third -party website] (HTTPS://open.dingtalk.com/document/orgapp-server/tutorial-obtaining-user-personal-information)","title":"First become a nail developer"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#login-nail-developer-backgroundcreate-and-configure-the-application","text":"Click to create an application Fill in the form parameter Save the app Key and app Secret Configure development management information Add personal rights Add communication records (1) Add communication records (2) Add obtaining vouchers permissions","title":"Login nail developer background\uff0cCreate and configure the application"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#configure-the-dingding-server","text":"Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups","title":"Configure the dingding server"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#dingding-client","text":"","title":"DingDing Client"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_dingding/#configure-dingding-client","text":"Click the identity data source>SCIM data synchronization>Click to create Here is the AppKey and AppSecret of Dingding\uff0cIntroducing the user's mobile phone number requires the only one in the enterprise\uff0cAll users must have a department\uff0cUsers without a department cannot synchronize","title":"Configure dingding client"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/","text":"FeiShu User data synchronous plugin # Features # ServerThe mode implements users and organizations that can obtain Feishug through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server, Synchronous to feishu FeiShu Server # Create Feishu application # Open the creation application page Click to create an enterprise self -building application\uff0cFill in the form After the creation is completed\uff0cClick Edit\uff0cClick permission management\uff0cAdd permissions (1) Add permissions (2) Cut the voucher and basic information page Save the app ID and app Secret Configure the flying book service # Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups FeiShu Client # Configure Feishu client # Click the identity data source>SCIM data synchronization>Click to create","title":"FeiShu User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#feishu-user-data-synchronous-plugin","text":"","title":"FeiShu User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#features","text":"ServerThe mode implements users and organizations that can obtain Feishug through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server, Synchronous to feishu","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#feishu-server","text":"","title":"FeiShu Server"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#create-feishu-application","text":"Open the creation application page Click to create an enterprise self -building application\uff0cFill in the form After the creation is completed\uff0cClick Edit\uff0cClick permission management\uff0cAdd permissions (1) Add permissions (2) Cut the voucher and basic information page Save the app ID and app Secret","title":"Create Feishu application"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#configure-the-flying-book-service","text":"Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups","title":"Configure the flying book service"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#feishu-client","text":"","title":"FeiShu Client"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_feishu/#configure-feishu-client","text":"Click the identity data source>SCIM data synchronization>Click to create","title":"Configure Feishu client"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/","text":"SQL Server User data synchronous plugin # Features # ServerThe pattern implements the SQL through the standard SCIM interface Users and organizations in the Server database ClientThe mode is implemented. Users and organizations in Server, Synchronous to SQL In Server database Configure two SQL Synchronous database between the Server database # Create two databases and tables # Create a Server database that provides synchronous data\uff0cEstablish users , groups surface\uff0c And the intermediate table of the Groups of user users_groups , users_groups User in the middle table_ID key associated Users (ID)\uff0c group_ID key associated Groups (ID) Hint In this example, the relationship between the User and Group is the relationship between Manytomany, If the user belongs to only one group\uff0callowable users Definition group in the table_id\uff0cGROUPS (ID) Create a client database\uff0cUsed to synchronize the data provided by the server database to the Client database Notice Convenient for demonstration\uff0cThe table definition in the client database is the same as the Server database,The actual production environment may be different Configure SQL Server Source database # Open SCIM data synchronization page\uff0cClick to create Configuration form parameter Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Targets must exist in user and organizational attribute mapping lists_ATTR is a mapping of ID, The ID of the user and group in the SCIM protocol here Configure from the source database synchronous data to the client database # Open SCIM data synchronization page, Click to create Configure SQL Server synchronization client Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Source must exist in the user and organizational attribute mapping list_ATTR is a mapping of ID\uff0cUsed to match the data in the Server and Client database, Determine whether the data has been synchronized View server database table data # View source database Groups View source database users View source database users_groups View the client database table data # Check the client database Groups Check the client database users Check the client database users_groups","title":"SQL Server User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#sql-server-user-data-synchronous-plugin","text":"","title":"SQL Server User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#features","text":"ServerThe pattern implements the SQL through the standard SCIM interface Users and organizations in the Server database ClientThe mode is implemented. Users and organizations in Server, Synchronous to SQL In Server database","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#configure-two-sql-synchronous-database-between-the-server-database","text":"","title":"Configure two SQL Synchronous database between the Server database"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#create-two-databases-and-tables","text":"Create a Server database that provides synchronous data\uff0cEstablish users , groups surface\uff0c And the intermediate table of the Groups of user users_groups , users_groups User in the middle table_ID key associated Users (ID)\uff0c group_ID key associated Groups (ID) Hint In this example, the relationship between the User and Group is the relationship between Manytomany, If the user belongs to only one group\uff0callowable users Definition group in the table_id\uff0cGROUPS (ID) Create a client database\uff0cUsed to synchronize the data provided by the server database to the Client database Notice Convenient for demonstration\uff0cThe table definition in the client database is the same as the Server database,The actual production environment may be different","title":"Create two databases and tables"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#configure-sql-server-source-database","text":"Open SCIM data synchronization page\uff0cClick to create Configuration form parameter Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Targets must exist in user and organizational attribute mapping lists_ATTR is a mapping of ID, The ID of the user and group in the SCIM protocol here","title":"Configure SQL Server Source database"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#configure-from-the-source-database-synchronous-data-to-the-client-database","text":"Open SCIM data synchronization page, Click to create Configure SQL Server synchronization client Hint If the user and group are more paired\uff0cNeed to be filled in User table group outer key field If the user and group are more to the relationship\uff0cNeed to be filled in Users and organizations are more to multi -relationship tables \uff0c User Organic Relationship Table User outer key field \uff0c User Organic Relationship Form Group outer key field groupThe fields associated between superiors need to be set up Organization table Parent outer key field Source must exist in the user and organizational attribute mapping list_ATTR is a mapping of ID\uff0cUsed to match the data in the Server and Client database, Determine whether the data has been synchronized","title":"Configure from the source database synchronous data to the client database"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#view-server-database-table-data","text":"View source database Groups View source database users View source database users_groups","title":"View server database table data"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_mssql/#view-the-client-database-table-data","text":"Check the client database Groups Check the client database users Check the client database users_groups","title":"View the client database table data"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/","text":"FeiShu User data synchronous plugin # Features # ServerThe model implements users and organizations that can obtain corporate WeChat through standard SCIM interfaces ClientThe mode is implemented. Users and organizations in Server, Synchronous to corporate WeChat WeChatWork Server # Create a wechatwork application # Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save secret (corresponding parameter Corpsecret) Save the enterprise ID (corresponding parameter Corpid) Update corporate WeChat trusted domain name # Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website Open the company's WeChat address book synchronization function # Log in Enterprise Management Backstage->Enter the management tool->Clicked Synchronous address book synchronization Configuration IP The server IP can be obtained by using the terminal ping website Save secret (corresponding parameter Syncsecret) Configure the company's WeChat service terminal # Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups WeChatWork Client # The client configured weChatwork # Click the identity data source>SCIM data synchronization>Click to create","title":"FeiShu User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#feishu-user-data-synchronous-plugin","text":"","title":"FeiShu User data synchronous plugin"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#features","text":"ServerThe model implements users and organizations that can obtain corporate WeChat through standard SCIM interfaces ClientThe mode is implemented. Users and organizations in Server, Synchronous to corporate WeChat","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#wechatwork-server","text":"","title":"WeChatWork Server"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#create-a-wechatwork-application","text":"Open the corporate WeChat management background\uff0cCreate an application Fill in the form Save secret (corresponding parameter Corpsecret) Save the enterprise ID (corresponding parameter Corpid)","title":"Create a wechatwork application"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#update-corporate-wechat-trusted-domain-name","text":"Log in Enterprise Management Backstage->Self -building application that needs to be opened->Clicked Web authority and js-SDK Set the trusted domain name Click the credible IP Configuration IP The server IP can be obtained by using the terminal ping website","title":"Update corporate WeChat trusted domain name"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#open-the-companys-wechat-address-book-synchronization-function","text":"Log in Enterprise Management Backstage->Enter the management tool->Clicked Synchronous address book synchronization Configuration IP The server IP can be obtained by using the terminal ping website Save secret (corresponding parameter Syncsecret)","title":"Open the company's WeChat address book synchronization function"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#configure-the-companys-wechat-service-terminal","text":"Click the identity data source>SCIM data synchronization>Click to create View the generated users and groups","title":"Configure the company's WeChat service terminal"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#wechatwork-client","text":"","title":"WeChatWork Client"},{"location":"Other%20Plug%20-In/com_longgui_scim_sync_wechatwork/#the-client-configured-wechatwork","text":"Click the identity data source>SCIM data synchronization>Click to create","title":"The client configured weChatwork"},{"location":"Other%20Plug%20-In/com_longgui_system_doc/","text":"ArkID Acceptance document plugin # Features # The plug -in provides users with document needs\uff0cAfter buying the plug -in\uff0cYou can download a compressed package of a acceptance document\u3002 Preview of the compressed package content is as follows: Steps # Find the acceptance document plugin\uff0cAnd click on the tenant configuration Open\uff0cWhether to use a button\uff0cAnd click to confirm Practitioners who re -enter the acceptance documentation\uff0cclick to download [ ](https://x.imgtu.com/i/Bbnd4b","title":"ArkID Acceptance document plugin"},{"location":"Other%20Plug%20-In/com_longgui_system_doc/#arkid-acceptance-document-plugin","text":"","title":"ArkID Acceptance document plugin"},{"location":"Other%20Plug%20-In/com_longgui_system_doc/#features","text":"The plug -in provides users with document needs\uff0cAfter buying the plug -in\uff0cYou can download a compressed package of a acceptance document\u3002 Preview of the compressed package content is as follows:","title":"Features"},{"location":"Other%20Plug%20-In/com_longgui_system_doc/#steps","text":"Find the acceptance document plugin\uff0cAnd click on the tenant configuration Open\uff0cWhether to use a button\uff0cAnd click to confirm Practitioners who re -enter the acceptance documentation\uff0cclick to download [ ](https://x.imgtu.com/i/Bbnd4b","title":"Steps"},{"location":"System%20Plug%20-In/","text":"System plug -in # OIDC&OAuth2Certification agreement Default account life cycle management Default approval system Mobile phone verification code authentication factors Password authentication factors Graphic verification code authentication factor Certification rules: Limited number of certification failure Sample plugin GithubThird -party login service Chinese language package ArkIDUser data synchronization Alibaba Cloud SMS Local file storage Bootswatchtheme","title":"System plug -in"},{"location":"System%20Plug%20-In/#system-plug-in","text":"OIDC&OAuth2Certification agreement Default account life cycle management Default approval system Mobile phone verification code authentication factors Password authentication factors Graphic verification code authentication factor Certification rules: Limited number of certification failure Sample plugin GithubThird -party login service Chinese language package ArkIDUser data synchronization Alibaba Cloud SMS Local file storage Bootswatchtheme","title":"System plug -in"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/","text":"Default life cycle plug -in # Features # Set the user expiration time\uff0cThe timing task will regularly compare the user's expiration time and the current time\uff0cIf the current time is greater than the user expiration time\uff0cThe user is disabled Configure the life cycle timing task # Open the account life cycle page Configure timing task form parameters Clicked Edit life cycle timing task Button Among them, timing running time grammar reference linux Crontab Command grammar\uff0cThe following figure is an example\uff1aRun once every day at 8 o'clock\uff0cIf it fails, try it again every 30 seconds at intervals Configure user expiration time # Click to create button Click Config Configure users and expiration time After the configuration is complete\uff0cClick to create button Implementation # Time tasks compare the user's expiration time and current time\uff0cIf the user has expired\uff0cThen set the user attribute is_Active is false\uff0cThe user will be prohibited from logging in to ARKID Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.account_life.AccountLifeExtension Abstract method implementation: # periodic_task Code # extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension ( AccountLifeExtension ) # Source code in extension_root/com_longgui_account_life_arkid/__init__.py class AccountLifeArkIDExtension ( AccountLifeExtension ): def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline () create_tenant_config ( self , tenant , config , name , type ) # \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) periodic_task ( self , event , ** kwargs ) # \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_account_life_arkid/__init__.py def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline () update_tenant_config ( self , id , config , name , type ) # \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig","title":"Default life cycle plug -in"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#default-life-cycle-plug-in","text":"","title":"Default life cycle plug -in"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#features","text":"Set the user expiration time\uff0cThe timing task will regularly compare the user's expiration time and the current time\uff0cIf the current time is greater than the user expiration time\uff0cThe user is disabled","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#configure-the-life-cycle-timing-task","text":"Open the account life cycle page Configure timing task form parameters Clicked Edit life cycle timing task Button Among them, timing running time grammar reference linux Crontab Command grammar\uff0cThe following figure is an example\uff1aRun once every day at 8 o'clock\uff0cIf it fails, try it again every 30 seconds at intervals","title":"Configure the life cycle timing task"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#configure-user-expiration-time","text":"Click to create button Click Config Configure users and expiration time After the configuration is complete\uff0cClick to create button","title":"Configure user expiration time"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#implementation","text":"Time tasks compare the user's expiration time and current time\uff0cIf the user has expired\uff0cThen set the user attribute is_Active is false\uff0cThe user will be prohibited from logging in to ARKID Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.account_life.AccountLifeExtension","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#abstract-method-implementation","text":"periodic_task","title":"Abstract method implementation:"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension","text":"Source code in extension_root/com_longgui_account_life_arkid/__init__.py class AccountLifeArkIDExtension ( AccountLifeExtension ): def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" ) def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline ()","title":"AccountLifeArkIDExtension"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.create_tenant_config","text":"\u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def create_tenant_config ( self , tenant , config , name , type ): \"\"\" \u521b\u5efa\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" config_created = TenantExtensionConfig () config_created . tenant = tenant config_created . extension = Extension . active_objects . get ( package = self . package ) config_created . config = json . loads ( config . json ()) config_created . name = name config_created . type = type config_created . save () return config_created","title":"create_tenant_config()"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def load ( self ): super () . load () self . register_front_pages ( select_user_page ) self . register_account_life_schema ( UserExpirationListSchema , \"user_expiration\" )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.periodic_task","text":"\u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Parameters: Name Type Description Default event arkid.core.event.Event \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_account_life_arkid/__init__.py def periodic_task ( self , event , ** kwargs ): \"\"\" \u904d\u5386\u6240\u6709\u63d2\u4ef6\u914d\u7f6e\uff0c\u5982\u679c\u914d\u7f6e\u4e2d\u7528\u6237\u5bf9\u5e94\u7684\u8fc7\u671f\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u7981\u7528\u7528\u6237 Args: event (arkid.core.event.Event): \u751f\u547d\u5468\u671f\u5b9a\u65f6\u4efb\u52a1\u4e8b\u4ef6 \"\"\" logger . info ( \"Doing account life arkid priodic task...\" ) configs = self . get_tenant_configs ( event . tenant ) for cfg in configs : for item in cfg . config : user_id = item . get ( 'user' ) . get ( 'id' ) user = User . objects . get ( id = user_id ) expiration_time = timezone . datetime . strptime ( item . get ( 'expiration_time' ), '%Y-%m- %d T%H:%M:%S' ) logger . info ( f \"expiration_time: { expiration_time } /now: { datetime . now () } \" ) if expiration_time <= datetime . now (): user . offline ()","title":"periodic_task()"},{"location":"System%20Plug%20-In/com_longgui_account_life_arkid/#extension_root.com_longgui_account_life_arkid.AccountLifeArkIDExtension.update_tenant_config","text":"\u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 Source code in extension_root/com_longgui_account_life_arkid/__init__.py def update_tenant_config ( self , id , config , name , type ): \"\"\" \u66f4\u65b0\u751f\u547d\u5468\u671f\u914d\u7f6e\uff0c\u624b\u5de5\u89e3\u51b3expiration_time\u7c7b\u578b\u4e3adatetime\u4e0d\u80fdjson\u5e8f\u5217\u5316\u7684\u95ee\u9898 \"\"\" tenantextensionconfig = TenantExtensionConfig . valid_objects . filter ( id = id ) . first () tenantextensionconfig . config = json . loads ( config . json ()) tenantextensionconfig . name = name tenantextensionconfig . type = type tenantextensionconfig . save () return tenantextensionconfig","title":"update_tenant_config()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/","text":"Source code # extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension ( AppProtocolExtension ) # Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py class OAuth2ServerExtension ( AppProtocolExtension ): def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () def load_urls ( self ): self . register_routers ( urls , True ) def load_auth_view ( self ): # \u52a0\u8f7d\u8ba4\u8bc1view auth_view = AuthorizationView . as_view () auth_path = r \"app/(?P<app_id>[\\w-]+)/oauth/authorize/$\" url_name = \"authorize\" type = [ 'OIDC' , 'OAuth2' ] self . register_enter_view ( auth_view , auth_path , url_name , type ) def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization create_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) delete_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () update_app ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) update_app_data ( self , event , config , is_create ) # \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True update_url_data ( self , tenant_id , config , obj ) # \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"Source code"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#source-code","text":"","title":"Source code"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension","text":"Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py class OAuth2ServerExtension ( AppProtocolExtension ): def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load () def load_urls ( self ): self . register_routers ( urls , True ) def load_auth_view ( self ): # \u52a0\u8f7d\u8ba4\u8bc1view auth_view = AuthorizationView . as_view () auth_path = r \"app/(?P<app_id>[\\w-]+)/oauth/authorize/$\" url_name = \"authorize\" type = [ 'OIDC' , 'OAuth2' ] self . register_enter_view ( auth_view , auth_path , url_name , type ) def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True ) def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False ) def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"OAuth2ServerExtension"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.create_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u521b\u5efa\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def create_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , True )","title":"create_app()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.delete_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u5220\u9664\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def delete_app ( self , event , ** kwargs ): Application . objects . filter ( uuid = event . data . id ) . delete () return True","title":"delete_app()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def load ( self ): # \u52a0\u8f7durl\u5730\u5740 self . load_urls () # \u52a0\u8f7d\u76f8\u5e94\u7684view self . load_auth_view () # \u52a0\u8f7d\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6 if not settings . IS_CENTRAL_ARKID : self . register_app_protocol_schema ( OIDCConfigSchema , 'OIDC' ) self . register_app_protocol_schema ( Oauth2ConfigSchema , 'OAuth2' ) super () . load ()","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_app","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u4fee\u6539\u5e94\u7528 Parameters: Name Type Description Default event \u4e8b\u4ef6\u53c2\u6570 required kwargs \u5176\u5b83\u65b9\u6cd5\u53c2\u6570 {} Returns: Type Description bool \u662f\u5426\u6210\u529f\u6267\u884c Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app ( self , event , ** kwargs ): config = event . data [ \"config\" ] return self . update_app_data ( event , config , False )","title":"update_app()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_app_data","text":"\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_app_data ( self , event , config , is_create ): ''' \u4fee\u6539\u5e94\u7528\u7a0b\u5e8f ''' app = event . data [ \"app\" ] tenant = event . tenant client_type = config [ \"client_type\" ] redirect_uris = config [ \"redirect_uris\" ] grant_type = config [ \"grant_type\" ] skip_authorization = config [ \"skip_authorization\" ] app_type = event . data . get ( \"app_type\" ) algorithm = config . get ( \"algorithm\" , None ) obj , iscreated = Application . objects . get_or_create ( uuid = app . id ) obj . name = app . name obj . client_type = client_type obj . redirect_uris = redirect_uris obj . skip_authorization = skip_authorization obj . authorization_grant_type = grant_type if algorithm and app_type == 'OIDC' : obj . algorithm = algorithm obj . save () # \u66f4\u65b0\u5730\u5740\u4fe1\u606f self . update_url_data ( tenant . id , config , obj ) return True","title":"update_app_data()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/#extension_root.com_longgui_app_protocol_oidc.OAuth2ServerExtension.update_url_data","text":"\u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f Source code in extension_root/com_longgui_app_protocol_oidc/__init__.py def update_url_data ( self , tenant_id , config , obj ): ''' \u66f4\u65b0\u914d\u7f6e\u4e2d\u7684url\u4fe1\u606f ''' host = get_app_config () . get_frontend_host () namespace = f 'api: { self . pname } _tenant' config [ \"userinfo\" ] = host + reverse ( namespace + \":oauth-user-info\" , args = [ tenant_id ]) config [ \"authorize\" ] = host + reverse ( namespace + \":authorize\" , args = [ tenant_id , obj . uuid ]) config [ \"token\" ] = host + reverse ( namespace + \":token\" , args = [ tenant_id ]) config [ \"logout\" ] = host + reverse ( namespace + \":oauth-user-logout\" , args = [ tenant_id ]) config [ \"issuer_url\" ] = \" {} /api/v1/tenant/ {} /app/ {} \" . format ( host , tenant_id , obj . uuid ) config [ \"client_id\" ] = obj . client_id config [ \"client_secret\" ] = obj . client_secret config [ \"skip_authorization\" ] = obj . skip_authorization","title":"update_url_data()"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/Case/","text":"Code example # FastAPI # from fastapi import FastAPI from starlette.responses import RedirectResponse import requests import json app = FastAPI () client_id = 'KHvanrQlNIBMZj9owre9ZZ6oc8AjWNdPHYUO2rwH' client_secret = 'ywZCKjSzxiWfgiaoEYAmloQ0greaLxLtTv6TnOyRtsgjvR7xAiTwpY0H5A46ZSSYz3x5laxHXQSlpjamnih3aQlYqS7Eq6oiSXsjiGNXnnf750i8WbbWAVAZdEaiivas' auth_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/app/10e82a7d-b7fd-45e0-976b-885859066508/oauth/authorize/' redirect_uri = 'http://127.0.0.1:8001/redirect' get_token_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/oauth/token/' get_userinfo_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/oauth/userinfo/' @app . get ( \"/auth\" ) def oidc_auth (): response = RedirectResponse ( url = auth_url + '?client_id=' + client_id + '&redirect_uri=' + redirect_uri + '&response_type=code&scope=userinfo' ) return response @app . get ( \"/redirect\" ) def oidc_redirect ( code : str ): auth = requests . auth . HTTPBasicAuth ( client_id , client_secret ) response = requests . post ( url = get_token_url , auth = auth , data = { 'code' : code , 'grant_type' : 'authorization_code' } ) response = json . loads ( response . content ) access_token = response [ \"access_token\" ] return requests . get ( url = get_userinfo_url , headers = { 'Authorization' : 'Bearer ' + access_token } ) . content Java # import javax.servlet.* ; import javax.servlet.http.* ; import javax.servlet.annotation.WebServlet ; import java.io.IOException ; @WebServlet ( name = \"OidcServlet\" , value = \"/OidcServlet\" ) public class OidcLoginServlet extends HttpServlet { public final static String clientId = \"Y0nyNqIBsNBqYlW5ebGTRvgeNO6B0zZxvmFSCKWP\" ; public final static String clientSecret = \"LZHoJu7yZ5XnKR2dff4WlnD3BWcXTol2QBQX2IwboZUJYdVKmjvvEfRe002XK4nu1ujYZMdo3X4ow9CKiyVRLFRMoNEufhAeE0OgK5tVtRPRvVYAvKlIjE4QSaw6bRSB\" ; public final static String authUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/0b97eb6a-ee67-4e64-b59d-f4b49f3546ed/oauth/authorize/\" ; public final static String redirectUri = \"http://127.0.0.1:8080/redirect\" ; public final static String getTokenUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/oauth/token/\" ; public final static String getUserinfoUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/oauth/userinfo/\" ; /** * Authorize * @param request * @param response * @throws ServletException * @throws IOException */ @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { StringBuilder sb = new StringBuilder (); sb . append ( authUrl ); sb . append ( \"?client_id=\" ); sb . append ( clientId ); sb . append ( \"&redirect_uri=\" ); sb . append ( redirectUri ); sb . append ( \"&response_type=code\" ); sb . append ( \"&scope=userinfo\" ); response . sendRedirect ( sb . toString ()); } } import com.alibaba.fastjson.JSON ; import com.alibaba.fastjson.JSONObject ; import org.apache.http.Consts ; import org.apache.http.HttpEntity ; import org.apache.http.HttpHeaders ; import org.apache.http.client.methods.HttpGet ; import org.apache.http.client.methods.HttpPost ; import org.apache.http.entity.ContentType ; import org.apache.http.entity.mime.MultipartEntityBuilder ; import org.apache.http.entity.mime.content.StringBody ; import org.apache.http.impl.client.BasicResponseHandler ; import org.apache.http.impl.client.CloseableHttpClient ; import org.apache.http.impl.client.HttpClientBuilder ; import javax.servlet.* ; import javax.servlet.http.* ; import javax.servlet.annotation.* ; import java.io.IOException ; import java.nio.charset.StandardCharsets ; import org.apache.commons.codec.binary.Base64 ; import java.util.HashMap ; import java.util.Map ; @WebServlet ( name = \"OidcRedirectServlet\" , value = \"/OidcRedirectServlet\" ) public class OidcRedirectServlet extends HttpServlet { /** * Authorize * @param request * @param response * @throws ServletException * @throws IOException */ @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String code = request . getParameter ( \"code\" ); // Get AccessStokeen JSONObject accessTokenResult = requestAccessToken ( code ); // { // \"access_token\":\"f9i0Jy0J7IDLHnZWbW3vMUSYI80fmw\", // \"expires_in\":36000, // \"token_type\":\"Bearer\", // \"scope\":\"userinfo\", // \"refresh_token\":\"gJclZjxoeRuq170HqgbDl6u3JdATcQ\" // } if ( accessTokenResult != null ){ //Get UserInfo JSONObject userInfoResult = requestUserInfo ( accessTokenResult . getString ( \"access_token\" )); // { // \"id\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"name\":\"admin\", // \"sub\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"sub_id\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"preferred_username\":\"admin\", // \"groups\":[\"tenant_admin\"], // \"tenant_id\":\"4da114ce-e115-44a0-823b-d372114425d0\", // \"tenant_slug\":\"\" // } } else { System . out . println ( \"Did not get access_token\" ); } } /** * Get AccessStokeen * @param code Authorization code * @return JsonObject */ private JSONObject requestAccessToken ( String code ){ Map < String , String > params = new HashMap <> (); params . put ( \"code\" , code ); params . put ( \"grant_type\" , \"authorization_code\" ); //Create a request object HttpPost httpPost = new HttpPost ( OidcLoginServlet . getTokenUrl ); // Create Auth authentication object String auth = OidcLoginServlet . clientId + \":\" + OidcLoginServlet . clientSecret ; byte [] encodedAuth = Base64 . encodeBase64 ( auth . getBytes ( StandardCharsets . UTF_8 )); String authHeader = \"Basic \" + new String ( encodedAuth ); //Create HTTPClient object CloseableHttpClient httpClient = HttpClientBuilder . create (). build (); try { // Put the verification information in Header httpPost . setHeader ( HttpHeaders . AUTHORIZATION , authHeader ); //Create a request header BasicResponseHandler handler = new BasicResponseHandler (); //Set the request format MultipartEntityBuilder builder = MultipartEntityBuilder . create (); if ( params != null ) { for ( String key : params . keySet ()) { builder . addPart ( key , new StringBody ( params . get ( key ), ContentType . create ( \"text/plain\" , Consts . UTF_8 ))); } } HttpEntity reqEntity = builder . build (); httpPost . setEntity ( reqEntity ); // Execute a request String result = httpClient . execute ( httpPost , handler ); JSONObject jsonObj = JSON . parseObject ( result ); return jsonObj ; } catch ( Exception e ) { System . out . println ( e ); } finally { //Release connection try { httpClient . close (); } catch ( Exception e ) { } } return null ; } /** * Get user information * @param accessToken Request token * @return JsonObject */ private JSONObject requestUserInfo ( String accessToken ){ //Create a request object HttpGet httpGet = new HttpGet ( OidcLoginServlet . getUserinfoUrl ); //Create HTTPClient object CloseableHttpClient httpClient = HttpClientBuilder . create (). build (); try { //Create a request header BasicResponseHandler handler = new BasicResponseHandler (); //Set the request header httpGet . setHeader ( HttpHeaders . AUTHORIZATION , \"Bearer \" + accessToken ); // Execute a request String result = httpClient . execute ( httpGet , handler ); System . out . println ( result ); JSONObject jsonObj = JSON . parseObject ( result ); return jsonObj ; } catch ( Exception e ) { System . out . println ( e ); } finally { //Release connection try { httpClient . close (); } catch ( Exception e ) { } } return null ; } } .NET # public partial class AutoLogin_Qywx3 : System . Web . UI . Page { string clientId = \"----------------------------------\" ; //Create a new application\uff0cProvide the following information string clientSecret = \"---------------------\" ; string myurl = \"--------------------------; string URL_Authorize = \"--------------------oauth/authorize/\" ; string URL_Token = \"---------------------------/oauth/token/\" ; string URL_Userinfo = \"------------------------/oauth/userinfo/\" ; //User information address protected void Page_Load ( object sender , EventArgs e ) { string code = Request . QueryString [ \"code\" ]; if ( string . IsNullOrEmpty ( code )) { //Code Code string return_url = Server . UrlEncode ( myurl ); string url = \"\" ; url = URL_Authorize + \"?client_id=\" + clientId + \"&redirect_uri=\" + return_url + \"&response_type=code&scope=userinfo\" ; Response . Redirect ( url ); return ; } else { string json = sendMessage ( URL_Token , code ); DataContractJsonSerializer serializer = new DataContractJsonSerializer ( typeof ( AccessToken )); var mStream = new MemoryStream ( Encoding . Default . GetBytes ( json )); AccessToken token = ( AccessToken ) serializer . ReadObject ( mStream ); string access_token = token . access_token ; string url = \"----------------/oauth/userinfo/\" ; //User information address string R = SendGetHttpRequest ( url , access_token ); Response . Write ( R ); return ; } } public string SendGetHttpRequest ( string url , string requestData ) { WebRequest request = ( WebRequest ) HttpWebRequest . Create ( url ); request . Method = \"Get\" ; request . Headers [ \"Authorization\" ] = \"Bearer \" + requestData ; string result = string . Empty ; using ( WebResponse response = request . GetResponse ()) { if ( response != null ) { using ( Stream stream = response . GetResponseStream ()) { using ( StreamReader reader = new StreamReader ( stream , Encoding . UTF8 )) { result = reader . ReadToEnd (); } } } } return result ; } public string sendMessage ( string strUrl , string code ) { ServicePointManager . Expect100Continue = true ; ServicePointManager . SecurityProtocol = SecurityProtocolType . Tls12 | SecurityProtocolType . Tls11 | SecurityProtocolType . Tls ; ServicePointManager . ServerCertificateValidationCallback = ( sender , certificate , chain , errors ) => true ; //1.Set the message header HttpWebRequest request = ( HttpWebRequest ) WebRequest . Create ( strUrl ); request . Method = \"Post\" ; string a = clientId + \":\" + clientSecret ; var b = Encoding . UTF8 . GetBytes ( a ); var base64 = Convert . ToBase64String ( b ); request . Headers . Add ( \"Authorization\" , \"Basic \" + base64 ); request . UserAgent = \"Apifox/1.0.0 (https://www.apifox.cn)\" ; request . ContentType = \"application/x-www-form-urlencoded\" ; request . Accept = \"*/*\" ; request . Host = \"-------\" ; //ssoDomain name and port request . AllowAutoRedirect = true ; request . Headers . Add ( \"accept-encoding\" , \"gzip, deflate, br\" ); string param = \"grant_type=authorization_code&code=\" + HttpUtility . UrlEncode ( code ); byte [] byteData = Encoding . ASCII . GetBytes ( param ); request . ContentLength = byteData . Length ; using ( Stream reqStream = request . GetRequestStream ()) { reqStream . Write ( byteData , 0 , byteData . Length ); } //ResponseAnswer flow obtain data string strResponse = \"\" ; using ( HttpWebResponse res = ( HttpWebResponse ) request . GetResponse ()) { using ( Stream resStream = res . GetResponseStream ()) { using ( StreamReader sr = new StreamReader ( resStream , Encoding . UTF8 )) //UTF8 { strResponse = sr . ReadToEnd (); } } // res.Close(); } return strResponse ; } }","title":"Code example"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/Case/#code-example","text":"","title":"Code example"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/Case/#fastapi","text":"from fastapi import FastAPI from starlette.responses import RedirectResponse import requests import json app = FastAPI () client_id = 'KHvanrQlNIBMZj9owre9ZZ6oc8AjWNdPHYUO2rwH' client_secret = 'ywZCKjSzxiWfgiaoEYAmloQ0greaLxLtTv6TnOyRtsgjvR7xAiTwpY0H5A46ZSSYz3x5laxHXQSlpjamnih3aQlYqS7Eq6oiSXsjiGNXnnf750i8WbbWAVAZdEaiivas' auth_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/app/10e82a7d-b7fd-45e0-976b-885859066508/oauth/authorize/' redirect_uri = 'http://127.0.0.1:8001/redirect' get_token_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/oauth/token/' get_userinfo_url = 'http://localhost:9528/api/v1/tenant/bf3511e2-07b3-459f-829e-17a349602531/oauth/userinfo/' @app . get ( \"/auth\" ) def oidc_auth (): response = RedirectResponse ( url = auth_url + '?client_id=' + client_id + '&redirect_uri=' + redirect_uri + '&response_type=code&scope=userinfo' ) return response @app . get ( \"/redirect\" ) def oidc_redirect ( code : str ): auth = requests . auth . HTTPBasicAuth ( client_id , client_secret ) response = requests . post ( url = get_token_url , auth = auth , data = { 'code' : code , 'grant_type' : 'authorization_code' } ) response = json . loads ( response . content ) access_token = response [ \"access_token\" ] return requests . get ( url = get_userinfo_url , headers = { 'Authorization' : 'Bearer ' + access_token } ) . content","title":"FastAPI"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/Case/#java","text":"import javax.servlet.* ; import javax.servlet.http.* ; import javax.servlet.annotation.WebServlet ; import java.io.IOException ; @WebServlet ( name = \"OidcServlet\" , value = \"/OidcServlet\" ) public class OidcLoginServlet extends HttpServlet { public final static String clientId = \"Y0nyNqIBsNBqYlW5ebGTRvgeNO6B0zZxvmFSCKWP\" ; public final static String clientSecret = \"LZHoJu7yZ5XnKR2dff4WlnD3BWcXTol2QBQX2IwboZUJYdVKmjvvEfRe002XK4nu1ujYZMdo3X4ow9CKiyVRLFRMoNEufhAeE0OgK5tVtRPRvVYAvKlIjE4QSaw6bRSB\" ; public final static String authUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/app/0b97eb6a-ee67-4e64-b59d-f4b49f3546ed/oauth/authorize/\" ; public final static String redirectUri = \"http://127.0.0.1:8080/redirect\" ; public final static String getTokenUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/oauth/token/\" ; public final static String getUserinfoUrl = \"http://localhost:9528/api/v1/tenant/4da114ce-e115-44a0-823b-d372114425d0/oauth/userinfo/\" ; /** * Authorize * @param request * @param response * @throws ServletException * @throws IOException */ @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { StringBuilder sb = new StringBuilder (); sb . append ( authUrl ); sb . append ( \"?client_id=\" ); sb . append ( clientId ); sb . append ( \"&redirect_uri=\" ); sb . append ( redirectUri ); sb . append ( \"&response_type=code\" ); sb . append ( \"&scope=userinfo\" ); response . sendRedirect ( sb . toString ()); } } import com.alibaba.fastjson.JSON ; import com.alibaba.fastjson.JSONObject ; import org.apache.http.Consts ; import org.apache.http.HttpEntity ; import org.apache.http.HttpHeaders ; import org.apache.http.client.methods.HttpGet ; import org.apache.http.client.methods.HttpPost ; import org.apache.http.entity.ContentType ; import org.apache.http.entity.mime.MultipartEntityBuilder ; import org.apache.http.entity.mime.content.StringBody ; import org.apache.http.impl.client.BasicResponseHandler ; import org.apache.http.impl.client.CloseableHttpClient ; import org.apache.http.impl.client.HttpClientBuilder ; import javax.servlet.* ; import javax.servlet.http.* ; import javax.servlet.annotation.* ; import java.io.IOException ; import java.nio.charset.StandardCharsets ; import org.apache.commons.codec.binary.Base64 ; import java.util.HashMap ; import java.util.Map ; @WebServlet ( name = \"OidcRedirectServlet\" , value = \"/OidcRedirectServlet\" ) public class OidcRedirectServlet extends HttpServlet { /** * Authorize * @param request * @param response * @throws ServletException * @throws IOException */ @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String code = request . getParameter ( \"code\" ); // Get AccessStokeen JSONObject accessTokenResult = requestAccessToken ( code ); // { // \"access_token\":\"f9i0Jy0J7IDLHnZWbW3vMUSYI80fmw\", // \"expires_in\":36000, // \"token_type\":\"Bearer\", // \"scope\":\"userinfo\", // \"refresh_token\":\"gJclZjxoeRuq170HqgbDl6u3JdATcQ\" // } if ( accessTokenResult != null ){ //Get UserInfo JSONObject userInfoResult = requestUserInfo ( accessTokenResult . getString ( \"access_token\" )); // { // \"id\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"name\":\"admin\", // \"sub\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"sub_id\":\"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\", // \"preferred_username\":\"admin\", // \"groups\":[\"tenant_admin\"], // \"tenant_id\":\"4da114ce-e115-44a0-823b-d372114425d0\", // \"tenant_slug\":\"\" // } } else { System . out . println ( \"Did not get access_token\" ); } } /** * Get AccessStokeen * @param code Authorization code * @return JsonObject */ private JSONObject requestAccessToken ( String code ){ Map < String , String > params = new HashMap <> (); params . put ( \"code\" , code ); params . put ( \"grant_type\" , \"authorization_code\" ); //Create a request object HttpPost httpPost = new HttpPost ( OidcLoginServlet . getTokenUrl ); // Create Auth authentication object String auth = OidcLoginServlet . clientId + \":\" + OidcLoginServlet . clientSecret ; byte [] encodedAuth = Base64 . encodeBase64 ( auth . getBytes ( StandardCharsets . UTF_8 )); String authHeader = \"Basic \" + new String ( encodedAuth ); //Create HTTPClient object CloseableHttpClient httpClient = HttpClientBuilder . create (). build (); try { // Put the verification information in Header httpPost . setHeader ( HttpHeaders . AUTHORIZATION , authHeader ); //Create a request header BasicResponseHandler handler = new BasicResponseHandler (); //Set the request format MultipartEntityBuilder builder = MultipartEntityBuilder . create (); if ( params != null ) { for ( String key : params . keySet ()) { builder . addPart ( key , new StringBody ( params . get ( key ), ContentType . create ( \"text/plain\" , Consts . UTF_8 ))); } } HttpEntity reqEntity = builder . build (); httpPost . setEntity ( reqEntity ); // Execute a request String result = httpClient . execute ( httpPost , handler ); JSONObject jsonObj = JSON . parseObject ( result ); return jsonObj ; } catch ( Exception e ) { System . out . println ( e ); } finally { //Release connection try { httpClient . close (); } catch ( Exception e ) { } } return null ; } /** * Get user information * @param accessToken Request token * @return JsonObject */ private JSONObject requestUserInfo ( String accessToken ){ //Create a request object HttpGet httpGet = new HttpGet ( OidcLoginServlet . getUserinfoUrl ); //Create HTTPClient object CloseableHttpClient httpClient = HttpClientBuilder . create (). build (); try { //Create a request header BasicResponseHandler handler = new BasicResponseHandler (); //Set the request header httpGet . setHeader ( HttpHeaders . AUTHORIZATION , \"Bearer \" + accessToken ); // Execute a request String result = httpClient . execute ( httpGet , handler ); System . out . println ( result ); JSONObject jsonObj = JSON . parseObject ( result ); return jsonObj ; } catch ( Exception e ) { System . out . println ( e ); } finally { //Release connection try { httpClient . close (); } catch ( Exception e ) { } } return null ; } }","title":"Java"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/Case/#net","text":"public partial class AutoLogin_Qywx3 : System . Web . UI . Page { string clientId = \"----------------------------------\" ; //Create a new application\uff0cProvide the following information string clientSecret = \"---------------------\" ; string myurl = \"--------------------------; string URL_Authorize = \"--------------------oauth/authorize/\" ; string URL_Token = \"---------------------------/oauth/token/\" ; string URL_Userinfo = \"------------------------/oauth/userinfo/\" ; //User information address protected void Page_Load ( object sender , EventArgs e ) { string code = Request . QueryString [ \"code\" ]; if ( string . IsNullOrEmpty ( code )) { //Code Code string return_url = Server . UrlEncode ( myurl ); string url = \"\" ; url = URL_Authorize + \"?client_id=\" + clientId + \"&redirect_uri=\" + return_url + \"&response_type=code&scope=userinfo\" ; Response . Redirect ( url ); return ; } else { string json = sendMessage ( URL_Token , code ); DataContractJsonSerializer serializer = new DataContractJsonSerializer ( typeof ( AccessToken )); var mStream = new MemoryStream ( Encoding . Default . GetBytes ( json )); AccessToken token = ( AccessToken ) serializer . ReadObject ( mStream ); string access_token = token . access_token ; string url = \"----------------/oauth/userinfo/\" ; //User information address string R = SendGetHttpRequest ( url , access_token ); Response . Write ( R ); return ; } } public string SendGetHttpRequest ( string url , string requestData ) { WebRequest request = ( WebRequest ) HttpWebRequest . Create ( url ); request . Method = \"Get\" ; request . Headers [ \"Authorization\" ] = \"Bearer \" + requestData ; string result = string . Empty ; using ( WebResponse response = request . GetResponse ()) { if ( response != null ) { using ( Stream stream = response . GetResponseStream ()) { using ( StreamReader reader = new StreamReader ( stream , Encoding . UTF8 )) { result = reader . ReadToEnd (); } } } } return result ; } public string sendMessage ( string strUrl , string code ) { ServicePointManager . Expect100Continue = true ; ServicePointManager . SecurityProtocol = SecurityProtocolType . Tls12 | SecurityProtocolType . Tls11 | SecurityProtocolType . Tls ; ServicePointManager . ServerCertificateValidationCallback = ( sender , certificate , chain , errors ) => true ; //1.Set the message header HttpWebRequest request = ( HttpWebRequest ) WebRequest . Create ( strUrl ); request . Method = \"Post\" ; string a = clientId + \":\" + clientSecret ; var b = Encoding . UTF8 . GetBytes ( a ); var base64 = Convert . ToBase64String ( b ); request . Headers . Add ( \"Authorization\" , \"Basic \" + base64 ); request . UserAgent = \"Apifox/1.0.0 (https://www.apifox.cn)\" ; request . ContentType = \"application/x-www-form-urlencoded\" ; request . Accept = \"*/*\" ; request . Host = \"-------\" ; //ssoDomain name and port request . AllowAutoRedirect = true ; request . Headers . Add ( \"accept-encoding\" , \"gzip, deflate, br\" ); string param = \"grant_type=authorization_code&code=\" + HttpUtility . UrlEncode ( code ); byte [] byteData = Encoding . ASCII . GetBytes ( param ); request . ContentLength = byteData . Length ; using ( Stream reqStream = request . GetRequestStream ()) { reqStream . Write ( byteData , 0 , byteData . Length ); } //ResponseAnswer flow obtain data string strResponse = \"\" ; using ( HttpWebResponse res = ( HttpWebResponse ) request . GetResponse ()) { using ( Stream resStream = res . GetResponseStream ()) { using ( StreamReader sr = new StreamReader ( resStream , Encoding . UTF8 )) //UTF8 { strResponse = sr . ReadToEnd (); } } // res.Close(); } return strResponse ; } }","title":".NET"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/","text":"OAuth2 # OAuth2Is an authorized open agreement Four authorization modes # The client must be authorized by the user\uff08authorization grant\uff09\uff0cOnly to get token\uff08access token\uff09\u3002 rfc 6749 Definition of four authorization methods\u3002 Authorization code mode\uff08authorization code\uff09 Simplified mode\uff08implicit\uff09 Password\uff08password\uff09 Client mode\uff08client credentials\uff09 Authorization code mode\uff08authorization code\uff09 # Authorization code mode\uff08authorization code\uff09It is the most complete function\u3001The strictest process\u3001The most authorized mode of use\u3002It is characterized by the background server of the client\uff0cand\"service provider\"The authentication server interacts\u3002 Since this is a process -based process\uff0cThe client must be capable and resource owner's USER-agent\uff08Usually web browser\uff09Interact\uff0cAnd have the ability to receive the redirection request from the authorized server\u3002 Its steps are as follows\uff1a \uff08A\uff09User access client\uff0cThe latter will guide the former -oriented authentication server (ARKID)\u3002 \uff08B\uff09Users choose whether to give client authorization\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user to the client in advance\"Reset to URI\"\uff08redirection URI\uff09\uff0cAt the same time, an authorization code is attached\u3002 \uff08D\uff09The client receives the authorization code\uff0cEarlier\"Reset to URI\"\uff0cApply to the certification server (ARKID)\u3002This step is done on the server of the client's background\uff0cNo visible to users\u3002 \uff08E\uff09Authentication server (ARKID) checks the authorization code and redirect to the URI\uff0cAfter confirmation\uff0cSend access to the client\uff08access token\uff09And update token\uff08refresh token\uff09\u3002 Simplified mode\uff08implicit\uff09 # Simplified mode\uff08implicit grant type\uff09Server without third -party applications\uff0cApply directly to the certification server to apply to the certification server in the browser\uff0cSkip\"Authorization code\"This step\uff0c\u3002All steps are completed in the browser\uff0cThe token is visible to the visitors\u3002 Its steps are as follows\uff1a \uff08A\uff09The client will guide the user -oriented authentication server (ARKID)\u3002 \uff08B\uff09The user decides whether to authorize the client\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user -oriented client\"Reset to URI\"\uff0cAnd in the Hash part of the URI, the access token is included\u3002 \uff08D\uff09The browser sends a request to the resource server\uff0cIt does not include the hash value received in the previous step\u3002 \uff08E\uff09Resource server returns a web page\uff0cThe code contains can get the token in the hash value\u3002 \uff08F\uff09The browser executes the script obtained in the previous step\uff0cExtract\u3002 \uff08G\uff09The browser sends the token to the client\u3002 Password\uff08password\uff09 # Password\uff08Resource Owner Password Credentials Grant\uff09middle\uff0cUsers provide their own username and password to the client\u3002Use this information on the client\uff0cTowards\"Service provider\"Be authorized\u3002 In this mode\uff0cUsers must give their passwords to the client\uff0cBut the client must not store the password\u3002Risk\uff0cTherefore, it is only applicable to other authorization methods\uff0cAnd it must be a highly trusted application of users\u3002 Its steps are as follows\uff1a \uff08A\uff09Users provide user names and passwords to the client\u3002 \uff08B\uff09The client sends the username and password to the certification server\uff0cAsk the latter to token\u3002 \uff08C\uff09Authentic server (ARKID) confirmed that it is correct\uff0cProvide access to the client\u3002 Client mode\uff08client credentials\uff09 # Client mode\uff08Client Credentials Grant\uff09Refers to the client in its own name\uff0cInstead of the name of the user\uff0cTowards\"Service provider (ARKID)\"Certify\u3002Strictly speaking\uff0cThe client mode does not belong to the problem that the OAUTH framework is to solve\u3002In this mode\uff0cUsers register directly to the client\uff0cThe client is in its own name\"Service provider (ARKID)\"Provide services\u3002 Its steps are as follows\uff1a \uff08A\uff09The client conducts identity authentication to the certification server\uff0cAnd ask a access token\u3002 \uff08B\uff09After the authentication server is confirmed, it is correct\uff0cProvide access to the client\u3002 Client type # according to OAuth 2.0 specification\uff0cApplications can be divided into confidential or public\u3002The main difference is whether the application can hold the credentials safely\uff08For example client ID and secret\uff09\u3002This will affect the type verification type that the application can use\u3002 confidential\uff08confidential\uff09 public\uff08public\uff09 confidential\uff08confidential\uff09 # Confidential applications can save secret in a safe way\uff0cWill not expose it to unauthorized\u3002They need a trusted back -end server to store Secret\u3002You can use HS256 encryption and RS256 encryption public\uff08public\uff09 # Public applications cannot safely hold Secret\uff0cCan only use RS256 encryption\u3002 Add OAUTH2 application # Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002 How to hide the license page # If the hidden authorization page switch is turned on\uff0cIt will not allow users to choose whether to authorize\uff0cThe user has logged in and directly authorized successfully\uff0cEnter the redirection page provided Use OAUTH2 Application # Understand the meaning of the page field field # English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address Get Authorization Code # Request address: authorize url Way of requesting: GET( Redirect ) Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Optional ( openid userinfo) If you pass openid\uff0cGet token more ID will_token Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176 Get ACCESS Token # Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"cFcWq78HH9MKVQOFJgGPl6RFtESAc2\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"oRHcgoGYsL5h1UimT4rWcg93lcTyjN\" } Get user information # Request address: userinfo url Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary Authorization Bearer access_token Bearer cFcWq78HH9MKVQOFJgGPl6RFtESAc2 Return parameter: parameter name Parameter Description Exemplary id User ID name user name sub User ID sub_id User ID preferred_username username groups User group tenant_id Tenant ID tenant_slug Practitioner Slug Return sample: { \"id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"name\" : \"admin\" , \"sub\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"sub_id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"preferred_username\" : \"admin\" , \"groups\" : [ ], \"tenant_id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"tenant_slug\" : \"\" } Refresh token # This step is a option.\uff0cYou can use this interface to replace the new token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization This token is client_id and client_secret Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary refresh_token Update token grant_type Fill in Refresh_token Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"51s34LPxhhKlUTP5r5mHevGW7ussXC\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"68trmzGvLmmbjACnHFGgzoCl5LBOrJ\" }","title":"OAuth2"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#oauth2","text":"OAuth2Is an authorized open agreement","title":"OAuth2"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#four-authorization-modes","text":"The client must be authorized by the user\uff08authorization grant\uff09\uff0cOnly to get token\uff08access token\uff09\u3002 rfc 6749 Definition of four authorization methods\u3002 Authorization code mode\uff08authorization code\uff09 Simplified mode\uff08implicit\uff09 Password\uff08password\uff09 Client mode\uff08client credentials\uff09","title":"Four authorization modes"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#authorization-code-modeauthorization-code","text":"Authorization code mode\uff08authorization code\uff09It is the most complete function\u3001The strictest process\u3001The most authorized mode of use\u3002It is characterized by the background server of the client\uff0cand\"service provider\"The authentication server interacts\u3002 Since this is a process -based process\uff0cThe client must be capable and resource owner's USER-agent\uff08Usually web browser\uff09Interact\uff0cAnd have the ability to receive the redirection request from the authorized server\u3002 Its steps are as follows\uff1a \uff08A\uff09User access client\uff0cThe latter will guide the former -oriented authentication server (ARKID)\u3002 \uff08B\uff09Users choose whether to give client authorization\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user to the client in advance\"Reset to URI\"\uff08redirection URI\uff09\uff0cAt the same time, an authorization code is attached\u3002 \uff08D\uff09The client receives the authorization code\uff0cEarlier\"Reset to URI\"\uff0cApply to the certification server (ARKID)\u3002This step is done on the server of the client's background\uff0cNo visible to users\u3002 \uff08E\uff09Authentication server (ARKID) checks the authorization code and redirect to the URI\uff0cAfter confirmation\uff0cSend access to the client\uff08access token\uff09And update token\uff08refresh token\uff09\u3002","title":"Authorization code mode\uff08authorization code\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#simplified-modeimplicit","text":"Simplified mode\uff08implicit grant type\uff09Server without third -party applications\uff0cApply directly to the certification server to apply to the certification server in the browser\uff0cSkip\"Authorization code\"This step\uff0c\u3002All steps are completed in the browser\uff0cThe token is visible to the visitors\u3002 Its steps are as follows\uff1a \uff08A\uff09The client will guide the user -oriented authentication server (ARKID)\u3002 \uff08B\uff09The user decides whether to authorize the client\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user -oriented client\"Reset to URI\"\uff0cAnd in the Hash part of the URI, the access token is included\u3002 \uff08D\uff09The browser sends a request to the resource server\uff0cIt does not include the hash value received in the previous step\u3002 \uff08E\uff09Resource server returns a web page\uff0cThe code contains can get the token in the hash value\u3002 \uff08F\uff09The browser executes the script obtained in the previous step\uff0cExtract\u3002 \uff08G\uff09The browser sends the token to the client\u3002","title":"Simplified mode\uff08implicit\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#passwordpassword","text":"Password\uff08Resource Owner Password Credentials Grant\uff09middle\uff0cUsers provide their own username and password to the client\u3002Use this information on the client\uff0cTowards\"Service provider\"Be authorized\u3002 In this mode\uff0cUsers must give their passwords to the client\uff0cBut the client must not store the password\u3002Risk\uff0cTherefore, it is only applicable to other authorization methods\uff0cAnd it must be a highly trusted application of users\u3002 Its steps are as follows\uff1a \uff08A\uff09Users provide user names and passwords to the client\u3002 \uff08B\uff09The client sends the username and password to the certification server\uff0cAsk the latter to token\u3002 \uff08C\uff09Authentic server (ARKID) confirmed that it is correct\uff0cProvide access to the client\u3002","title":"Password\uff08password\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#client-modeclient-credentials","text":"Client mode\uff08Client Credentials Grant\uff09Refers to the client in its own name\uff0cInstead of the name of the user\uff0cTowards\"Service provider (ARKID)\"Certify\u3002Strictly speaking\uff0cThe client mode does not belong to the problem that the OAUTH framework is to solve\u3002In this mode\uff0cUsers register directly to the client\uff0cThe client is in its own name\"Service provider (ARKID)\"Provide services\u3002 Its steps are as follows\uff1a \uff08A\uff09The client conducts identity authentication to the certification server\uff0cAnd ask a access token\u3002 \uff08B\uff09After the authentication server is confirmed, it is correct\uff0cProvide access to the client\u3002","title":"Client mode\uff08client credentials\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#client-type","text":"according to OAuth 2.0 specification\uff0cApplications can be divided into confidential or public\u3002The main difference is whether the application can hold the credentials safely\uff08For example client ID and secret\uff09\u3002This will affect the type verification type that the application can use\u3002 confidential\uff08confidential\uff09 public\uff08public\uff09","title":"Client type"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#confidentialconfidential","text":"Confidential applications can save secret in a safe way\uff0cWill not expose it to unauthorized\u3002They need a trusted back -end server to store Secret\u3002You can use HS256 encryption and RS256 encryption","title":"confidential\uff08confidential\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#publicpublic","text":"Public applications cannot safely hold Secret\uff0cCan only use RS256 encryption\u3002","title":"public\uff08public\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#add-oauth2-application","text":"Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002","title":"Add OAUTH2 application"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#how-to-hide-the-license-page","text":"If the hidden authorization page switch is turned on\uff0cIt will not allow users to choose whether to authorize\uff0cThe user has logged in and directly authorized successfully\uff0cEnter the redirection page provided","title":"How to hide the license page"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#use-oauth2-application","text":"","title":"Use OAUTH2 Application"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#understand-the-meaning-of-the-page-field-field","text":"English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address","title":"Understand the meaning of the page field field"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#get-authorization-code","text":"Request address: authorize url Way of requesting: GET( Redirect ) Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Optional ( openid userinfo) If you pass openid\uff0cGet token more ID will_token Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176","title":"Get Authorization Code"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#get-access-token","text":"Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"cFcWq78HH9MKVQOFJgGPl6RFtESAc2\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"oRHcgoGYsL5h1UimT4rWcg93lcTyjN\" }","title":"Get ACCESS Token"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#get-user-information","text":"Request address: userinfo url Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary Authorization Bearer access_token Bearer cFcWq78HH9MKVQOFJgGPl6RFtESAc2 Return parameter: parameter name Parameter Description Exemplary id User ID name user name sub User ID sub_id User ID preferred_username username groups User group tenant_id Tenant ID tenant_slug Practitioner Slug Return sample: { \"id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"name\" : \"admin\" , \"sub\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"sub_id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"preferred_username\" : \"admin\" , \"groups\" : [ ], \"tenant_id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"tenant_slug\" : \"\" }","title":"Get user information"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OAuth2/#refresh-token","text":"This step is a option.\uff0cYou can use this interface to replace the new token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization This token is client_id and client_secret Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary refresh_token Update token grant_type Fill in Refresh_token Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"51s34LPxhhKlUTP5r5mHevGW7ussXC\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"68trmzGvLmmbjACnHFGgzoCl5LBOrJ\" }","title":"Refresh token"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/","text":"OIDC # OIDCIt is a new authentication authorization agreement based on OAUTH2 and Openid integration Four authorization modes # The client must be authorized by the user\uff08authorization grant\uff09\uff0cOnly to get token\uff08access token\uff09\u3002 rfc 6749 Definition of four authorization methods\u3002 Authorization code mode\uff08authorization code\uff09 Simplified mode\uff08implicit\uff09 Password\uff08password\uff09 Client mode\uff08client credentials\uff09 Authorization code mode\uff08authorization code\uff09 # Authorization code mode\uff08authorization code\uff09It is the most complete function\u3001The strictest process\u3001The most authorized mode of use\u3002It is characterized by the background server of the client\uff0cand\"service provider\"The authentication server interacts\u3002 Since this is a process -based process\uff0cThe client must be capable and resource owner's USER-agent\uff08Usually web browser\uff09Interact\uff0cAnd have the ability to receive the redirection request from the authorized server\u3002 Its steps are as follows\uff1a \uff08A\uff09User access client\uff0cThe latter will guide the former -oriented authentication server (ARKID)\u3002 \uff08B\uff09Users choose whether to give client authorization\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user to the client in advance\"Reset to URI\"\uff08redirection URI\uff09\uff0cAt the same time, an authorization code is attached\u3002 \uff08D\uff09The client receives the authorization code\uff0cEarlier\"Reset to URI\"\uff0cApply to the certification server (ARKID)\u3002This step is done on the server of the client's background\uff0cNo visible to users\u3002 \uff08E\uff09Authentication server (ARKID) checks the authorization code and redirect to the URI\uff0cAfter confirmation\uff0cSend access to the client\uff08access token\uff09And update token\uff08refresh token\uff09\u3002 Simplified mode\uff08implicit\uff09 # Simplified mode\uff08implicit grant type\uff09Server without third -party applications\uff0cApply directly to the certification server to apply to the certification server in the browser\uff0cSkip\"Authorization code\"This step\uff0c\u3002All steps are completed in the browser\uff0cThe token is visible to the visitors\u3002 Its steps are as follows\uff1a \uff08A\uff09The client will guide the user -oriented authentication server (ARKID)\u3002 \uff08B\uff09The user decides whether to authorize the client\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user -oriented client\"Reset to URI\"\uff0cAnd in the Hash part of the URI, the access token is included\u3002 \uff08D\uff09The browser sends a request to the resource server\uff0cIt does not include the hash value received in the previous step\u3002 \uff08E\uff09Resource server returns a web page\uff0cThe code contains can get the token in the hash value\u3002 \uff08F\uff09The browser executes the script obtained in the previous step\uff0cExtract\u3002 \uff08G\uff09The browser sends the token to the client\u3002 Password\uff08password\uff09 # Password\uff08Resource Owner Password Credentials Grant\uff09middle\uff0cUsers provide their own username and password to the client\u3002Use this information on the client\uff0cTowards\"Service provider\"Be authorized\u3002 In this mode\uff0cUsers must give their passwords to the client\uff0cBut the client must not store the password\u3002Risk\uff0cTherefore, it is only applicable to other authorization methods\uff0cAnd it must be a highly trusted application of users\u3002 Its steps are as follows\uff1a \uff08A\uff09Users provide user names and passwords to the client\u3002 \uff08B\uff09The client sends the username and password to the certification server\uff0cAsk the latter to token\u3002 \uff08C\uff09Authentic server (ARKID) confirmed that it is correct\uff0cProvide access to the client\u3002 Client mode\uff08client credentials\uff09 # Client mode\uff08Client Credentials Grant\uff09Refers to the client in its own name\uff0cInstead of the name of the user\uff0cTowards\"Service provider (ARKID)\"Certify\u3002Strictly speaking\uff0cThe client mode does not belong to the problem that the OAUTH framework is to solve\u3002In this mode\uff0cUsers register directly to the client\uff0cThe client is in its own name\"Service provider (ARKID)\"Provide services\u3002 Its steps are as follows\uff1a \uff08A\uff09The client conducts identity authentication to the certification server\uff0cAnd ask a access token\u3002 \uff08B\uff09After the authentication server is confirmed, it is correct\uff0cProvide access to the client\u3002 Client type # according to OAuth 2.0 specification\uff0cApplications can be divided into confidential or public\u3002The main difference is whether the application can hold the credentials safely\uff08For example client ID and secret\uff09\u3002This will affect the type verification type that the application can use\u3002 confidential\uff08confidential\uff09 public\uff08public\uff09 confidential\uff08confidential\uff09 # Confidential applications can save secret in a safe way\uff0cWill not expose it to unauthorized\u3002They need a trusted back -end server to store Secret\u3002You can use HS256 encryption and RS256 encryption public\uff08public\uff09 # Public applications cannot safely hold Secret\uff0cCan only use RS256 encryption\u3002 Add OIDC application # Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002 How to hide the license page # If the hidden authorization page switch is turned on\uff0cIt will not allow users to choose whether to authorize\uff0cThe user has logged in and directly authorized successfully\uff0cEnter the redirection page provided OIDC application # Understand the meaning of the page field field # English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address Get Authorization Code # Request address: authorize url Way of requesting: GET( Redirect ) Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Optional ( openid userinfo) If you pass openid\uff0cGet token more ID will_token Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176 Get ACCESS Token # Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"cFcWq78HH9MKVQOFJgGPl6RFtESAc2\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"oRHcgoGYsL5h1UimT4rWcg93lcTyjN\" } Get user information # Request address: userinfo url Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary Authorization Bearer access_token Bearer cFcWq78HH9MKVQOFJgGPl6RFtESAc2 Return parameter: parameter name Parameter Description Exemplary id User ID name user name sub User ID sub_id User ID preferred_username username groups User group tenant_id Tenant ID tenant_slug Practitioner Slug Return sample: { \"id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"name\" : \"admin\" , \"sub\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"sub_id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"preferred_username\" : \"admin\" , \"groups\" : [ ], \"tenant_id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"tenant_slug\" : \"\" } Refresh token # This step is a option.\uff0cYou can use this interface to replace the new token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization This token is client_id and client_secret Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary refresh_token Update token grant_type Fill in Refresh_token Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"51s34LPxhhKlUTP5r5mHevGW7ussXC\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"68trmzGvLmmbjACnHFGgzoCl5LBOrJ\" } Exit OIDC # This step is optional\uff0cYou can exit user login\uff0cAnd jump to the specified address Request address: logout url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary id_token_hint id_token post_logout_redirect_uri The address of the jump after the login (optional) Return parameter: parameter name Parameter Description Exemplary error_code error code error_msg Error message Return sample: { \"error_code\" : 0 , \"error_msg\" : \"logout success\" }","title":"OIDC"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#oidc","text":"OIDCIt is a new authentication authorization agreement based on OAUTH2 and Openid integration","title":"OIDC"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#four-authorization-modes","text":"The client must be authorized by the user\uff08authorization grant\uff09\uff0cOnly to get token\uff08access token\uff09\u3002 rfc 6749 Definition of four authorization methods\u3002 Authorization code mode\uff08authorization code\uff09 Simplified mode\uff08implicit\uff09 Password\uff08password\uff09 Client mode\uff08client credentials\uff09","title":"Four authorization modes"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#authorization-code-modeauthorization-code","text":"Authorization code mode\uff08authorization code\uff09It is the most complete function\u3001The strictest process\u3001The most authorized mode of use\u3002It is characterized by the background server of the client\uff0cand\"service provider\"The authentication server interacts\u3002 Since this is a process -based process\uff0cThe client must be capable and resource owner's USER-agent\uff08Usually web browser\uff09Interact\uff0cAnd have the ability to receive the redirection request from the authorized server\u3002 Its steps are as follows\uff1a \uff08A\uff09User access client\uff0cThe latter will guide the former -oriented authentication server (ARKID)\u3002 \uff08B\uff09Users choose whether to give client authorization\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user to the client in advance\"Reset to URI\"\uff08redirection URI\uff09\uff0cAt the same time, an authorization code is attached\u3002 \uff08D\uff09The client receives the authorization code\uff0cEarlier\"Reset to URI\"\uff0cApply to the certification server (ARKID)\u3002This step is done on the server of the client's background\uff0cNo visible to users\u3002 \uff08E\uff09Authentication server (ARKID) checks the authorization code and redirect to the URI\uff0cAfter confirmation\uff0cSend access to the client\uff08access token\uff09And update token\uff08refresh token\uff09\u3002","title":"Authorization code mode\uff08authorization code\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#simplified-modeimplicit","text":"Simplified mode\uff08implicit grant type\uff09Server without third -party applications\uff0cApply directly to the certification server to apply to the certification server in the browser\uff0cSkip\"Authorization code\"This step\uff0c\u3002All steps are completed in the browser\uff0cThe token is visible to the visitors\u3002 Its steps are as follows\uff1a \uff08A\uff09The client will guide the user -oriented authentication server (ARKID)\u3002 \uff08B\uff09The user decides whether to authorize the client\u3002 \uff08C\uff09Suppose users authorize\uff0cCertification server (ARKID) specifies the user -oriented client\"Reset to URI\"\uff0cAnd in the Hash part of the URI, the access token is included\u3002 \uff08D\uff09The browser sends a request to the resource server\uff0cIt does not include the hash value received in the previous step\u3002 \uff08E\uff09Resource server returns a web page\uff0cThe code contains can get the token in the hash value\u3002 \uff08F\uff09The browser executes the script obtained in the previous step\uff0cExtract\u3002 \uff08G\uff09The browser sends the token to the client\u3002","title":"Simplified mode\uff08implicit\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#passwordpassword","text":"Password\uff08Resource Owner Password Credentials Grant\uff09middle\uff0cUsers provide their own username and password to the client\u3002Use this information on the client\uff0cTowards\"Service provider\"Be authorized\u3002 In this mode\uff0cUsers must give their passwords to the client\uff0cBut the client must not store the password\u3002Risk\uff0cTherefore, it is only applicable to other authorization methods\uff0cAnd it must be a highly trusted application of users\u3002 Its steps are as follows\uff1a \uff08A\uff09Users provide user names and passwords to the client\u3002 \uff08B\uff09The client sends the username and password to the certification server\uff0cAsk the latter to token\u3002 \uff08C\uff09Authentic server (ARKID) confirmed that it is correct\uff0cProvide access to the client\u3002","title":"Password\uff08password\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#client-modeclient-credentials","text":"Client mode\uff08Client Credentials Grant\uff09Refers to the client in its own name\uff0cInstead of the name of the user\uff0cTowards\"Service provider (ARKID)\"Certify\u3002Strictly speaking\uff0cThe client mode does not belong to the problem that the OAUTH framework is to solve\u3002In this mode\uff0cUsers register directly to the client\uff0cThe client is in its own name\"Service provider (ARKID)\"Provide services\u3002 Its steps are as follows\uff1a \uff08A\uff09The client conducts identity authentication to the certification server\uff0cAnd ask a access token\u3002 \uff08B\uff09After the authentication server is confirmed, it is correct\uff0cProvide access to the client\u3002","title":"Client mode\uff08client credentials\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#client-type","text":"according to OAuth 2.0 specification\uff0cApplications can be divided into confidential or public\u3002The main difference is whether the application can hold the credentials safely\uff08For example client ID and secret\uff09\u3002This will affect the type verification type that the application can use\u3002 confidential\uff08confidential\uff09 public\uff08public\uff09","title":"Client type"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#confidentialconfidential","text":"Confidential applications can save secret in a safe way\uff0cWill not expose it to unauthorized\u3002They need a trusted back -end server to store Secret\u3002You can use HS256 encryption and RS256 encryption","title":"confidential\uff08confidential\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#publicpublic","text":"Public applications cannot safely hold Secret\uff0cCan only use RS256 encryption\u3002","title":"public\uff08public\uff09"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#add-oidc-application","text":"Open the application list Click to create\uff0cFill in the form Click the protocol configuration Fill in configuration Click the protocol configuration again After clicking to confirm\uff0cDialog box closed\uff0cYou can see the application you created\u3002 Application type selection as OIDC\uff0cFill in the parameter\uff0cComplete You can view all related parameters of the protocol\u3002","title":"Add OIDC application"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#how-to-hide-the-license-page","text":"If the hidden authorization page switch is turned on\uff0cIt will not allow users to choose whether to authorize\uff0cThe user has logged in and directly authorized successfully\uff0cEnter the redirection page provided","title":"How to hide the license page"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#oidc-application","text":"","title":"OIDC application"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#understand-the-meaning-of-the-page-field-field","text":"English parameter name Corresponding page surface field redirect url Callback address client_id Client ID client_token Client key authorize url Authorized URL get token url Get ACCESS_Token address userinfo url User information address logout url Exit login address","title":"Understand the meaning of the page field field"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#get-authorization-code","text":"Request address: authorize url Way of requesting: GET( Redirect ) Request parameter: parameter name Parameter Description Exemplary client_id client_id redirect_uri redirect url response_type Fill in Code code scope Optional ( openid userinfo) If you pass openid\uff0cGet token more ID will_token Request example: http://authorize url/?client_id=xxxxx&redirect_uri=xxxxx&response_type=code&scope=userinfo Return parameter: parameter name Parameter Description Exemplary code Authorization code Return sample: http://redirect_uri?code=As a savings, the seventh seven&token=Sadaa 4840, and I will be 04 with a 4 -wing 1 bastard 1 b 176","title":"Get Authorization Code"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#get-access-token","text":"Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization tokenFormat client_id:client_secret Use base64 encoding Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary code Authorization code grant_type Fill in Authorization_code Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"cFcWq78HH9MKVQOFJgGPl6RFtESAc2\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"oRHcgoGYsL5h1UimT4rWcg93lcTyjN\" }","title":"Get ACCESS Token"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#get-user-information","text":"Request address: userinfo url Way of requesting: GET Request head parameter: parameter name Parameter Description Exemplary Authorization Bearer access_token Bearer cFcWq78HH9MKVQOFJgGPl6RFtESAc2 Return parameter: parameter name Parameter Description Exemplary id User ID name user name sub User ID sub_id User ID preferred_username username groups User group tenant_id Tenant ID tenant_slug Practitioner Slug Return sample: { \"id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"name\" : \"admin\" , \"sub\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"sub_id\" : \"faf5aae6-3cdf-4595-8b4a-3a06b31117c8\" , \"preferred_username\" : \"admin\" , \"groups\" : [ ], \"tenant_id\" : \"4da114ce-e115-44a0-823b-d372114425d0\" , \"tenant_slug\" : \"\" }","title":"Get user information"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#refresh-token","text":"This step is a option.\uff0cYou can use this interface to replace the new token Request address: get token url Way of requesting: POST Request head parameter: parameter name Parameter Description Exemplary Authorization This token is client_id and client_secret Basic Token Content-Type Fill in MULTIPART/form-data Request parameter: parameter name Parameter Description Exemplary refresh_token Update token grant_type Fill in Refresh_token Request example: Return parameter: parameter name Parameter Description Exemplary access_token Token expires_in Expiration token_type Bearer scope userinfo openid refresh_token Token to token Return sample: { \"access_token\" : \"51s34LPxhhKlUTP5r5mHevGW7ussXC\" , \"expires_in\" : 36000 , \"token_type\" : \"Bearer\" , \"scope\" : \"userinfo\" , \"refresh_token\" : \"68trmzGvLmmbjACnHFGgzoCl5LBOrJ\" }","title":"Refresh token"},{"location":"System%20Plug%20-In/com_longgui_app_protocol_oidc/OIDC/#exit-oidc","text":"This step is optional\uff0cYou can exit user login\uff0cAnd jump to the specified address Request address: logout url Way of requesting: GET Request parameter: parameter name Parameter Description Exemplary id_token_hint id_token post_logout_redirect_uri The address of the jump after the login (optional) Return parameter: parameter name Parameter Description Exemplary error_code error code error_msg Error message Return sample: { \"error_code\" : 0 , \"error_msg\" : \"logout success\" }","title":"Exit OIDC"},{"location":"System%20Plug%20-In/com_longgui_app_proxy_nginx/","text":"Application URL proxy plug -in # Features # When creating an application, you can set an application access URL as the internal address (such as\uff1ahttp://192.168.1.100:8000), The URL of the desktop access application will be automatically changed to http(s)://{Application ID}.{frontend_host}, Then click this link\uff0cWill be jumped by the Nginx agent to the internal URL of the application Configuration method # Create proxy URL application Notice URLFormat satisfaction http://xxxx, Can't be https Confirm that the desktop application URL changes Notice After creating a proxy URL application\uff0cWill automatically generate nginx configuration files\uff0cAfter deploying Arkid\uff0cNginx will jump to the internal address according to the content of the configuration file\uff0cConfiguration file content is as follows\uff1a","title":"Application URL proxy plug -in"},{"location":"System%20Plug%20-In/com_longgui_app_proxy_nginx/#application-url-proxy-plug-in","text":"","title":"Application URL proxy plug -in"},{"location":"System%20Plug%20-In/com_longgui_app_proxy_nginx/#features","text":"When creating an application, you can set an application access URL as the internal address (such as\uff1ahttp://192.168.1.100:8000), The URL of the desktop access application will be automatically changed to http(s)://{Application ID}.{frontend_host}, Then click this link\uff0cWill be jumped by the Nginx agent to the internal URL of the application","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_app_proxy_nginx/#configuration-method","text":"Create proxy URL application Notice URLFormat satisfaction http://xxxx, Can't be https Confirm that the desktop application URL changes Notice After creating a proxy URL application\uff0cWill automatically generate nginx configuration files\uff0cAfter deploying Arkid\uff0cNginx will jump to the internal address according to the content of the configuration file\uff0cConfiguration file content is as follows\uff1a","title":"Configuration method"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/","text":"Default approval system plug -in # Features # After the default approval system plug -in installation\uff0cWill be at Approval management Add below the menu Default request processing page\uff0cUsed to handle approval requests assigned to the current approval system Create approval action # Open the approval action page\uff0cClick to create button Fill in form parameters Generate approval request # Open the account life cycle\uff0cClick to create button Configuration form parameter\uff0cClick to create button Since the previous step has been configured for approval action for creating a life cycle configuration\uff0cSo the request should return 403 Check the approval request # Open Approval management->Approval request page Open profile picture->Approval request page Process approval request # Open Approval management->Default request processing page\uff0c Click to pass the button Open Audited bookmark\uff0c Confirmation status has changed Open Account life cycle page\uff0c Confirm that the request to be reviewed is re -executed Implementation # exist approve_requests_page Add Default request processing page Default request processing Call on the page /approve_requests/{{request_id}}/pass/ Agree with approval request Default request processing Call on the page /approve_requests/{{request_id}}/deny/ Reject approval request accomplish pass_approve_request Abstract method Agree with approval request accomplish deny_approve_request Abstract method Reject approval request Since this plug -in does not need to send the approval request to a third party, there is no abstract method of covering Create_approve_request See ARKID.core.extension.approve_system.ApproveSystemExtension Abstract method implementation: # pass_approve_request deny_approve_request create_approve_request Code # extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension ( ApproveSystemExtension ) # Source code in extension_root/com_longgui_approve_system_arkid/__init__.py class ApproveSystemArkIDExtension ( ApproveSystemExtension ): def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) @operation ( List [ ApproveRequestListItemOut ], roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_tenant_approve_requests ( self , request , tenant_id : str , is_approved : str = '' ): package = 'com.longgui.approve.system.arkid' requests = ApproveRequest . valid_objects . filter ( tenant = request . tenant , action__extension__package = package ) if is_approved == 'true' : requests = requests . exclude ( status = \"wait\" ) elif is_approved == 'false' : requests = requests . filter ( status = \"wait\" ) return requests def create_approve_request ( self , event , ** kwargs ): pass def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' ) def deny_approve_request ( self , request , approve_request ): pass create_approve_request ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def create_approve_request ( self , event , ** kwargs ): pass deny_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def deny_approve_request ( self , request , approve_request ): pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) pass_approve_request ( self , request , approve_request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' )","title":"Default approval system plug -in"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#default-approval-system-plug-in","text":"","title":"Default approval system plug -in"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#features","text":"After the default approval system plug -in installation\uff0cWill be at Approval management Add below the menu Default request processing page\uff0cUsed to handle approval requests assigned to the current approval system","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#create-approval-action","text":"Open the approval action page\uff0cClick to create button Fill in form parameters","title":"Create approval action"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#generate-approval-request","text":"Open the account life cycle\uff0cClick to create button Configuration form parameter\uff0cClick to create button Since the previous step has been configured for approval action for creating a life cycle configuration\uff0cSo the request should return 403","title":"Generate approval request"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#check-the-approval-request","text":"Open Approval management->Approval request page Open profile picture->Approval request page","title":"Check the approval request"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#process-approval-request","text":"Open Approval management->Default request processing page\uff0c Click to pass the button Open Audited bookmark\uff0c Confirmation status has changed Open Account life cycle page\uff0c Confirm that the request to be reviewed is re -executed","title":"Process approval request"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#implementation","text":"exist approve_requests_page Add Default request processing page Default request processing Call on the page /approve_requests/{{request_id}}/pass/ Agree with approval request Default request processing Call on the page /approve_requests/{{request_id}}/deny/ Reject approval request accomplish pass_approve_request Abstract method Agree with approval request accomplish deny_approve_request Abstract method Reject approval request Since this plug -in does not need to send the approval request to a third party, there is no abstract method of covering Create_approve_request See ARKID.core.extension.approve_system.ApproveSystemExtension","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#abstract-method-implementation","text":"pass_approve_request deny_approve_request create_approve_request","title":"Abstract method implementation:"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension","text":"Source code in extension_root/com_longgui_approve_system_arkid/__init__.py class ApproveSystemArkIDExtension ( ApproveSystemExtension ): def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router ) @operation ( List [ ApproveRequestListItemOut ], roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_tenant_approve_requests ( self , request , tenant_id : str , is_approved : str = '' ): package = 'com.longgui.approve.system.arkid' requests = ApproveRequest . valid_objects . filter ( tenant = request . tenant , action__extension__package = package ) if is_approved == 'true' : requests = requests . exclude ( status = \"wait\" ) elif is_approved == 'false' : requests = requests . filter ( status = \"wait\" ) return requests def create_approve_request ( self , event , ** kwargs ): pass def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' ) def deny_approve_request ( self , request , approve_request ): pass","title":"ApproveSystemArkIDExtension"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.create_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default event arkid.core.event.Event \u521b\u5efa\u5ba1\u6279\u8bf7\u6c42\u4e8b\u4ef6 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def create_approve_request ( self , event , ** kwargs ): pass","title":"create_approve_request()"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.deny_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u62d2\u7edd\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def deny_approve_request ( self , request , approve_request ): pass","title":"deny_approve_request()"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def load ( self ): super () . load () self . register_api ( f '/approve_requests/' , 'GET' , self . list_tenant_approve_requests , response = List [ ApproveRequestListItemOut ], tenant_path = True , ) self . register_approve_system_schema ( ApproveSystemArkIDConfigSchema , 'approve_system_arkid' ) self . register_front_pages ([ router_page , waiting_page , approved_page ]) self . register_front_routers ( router , approve_manage_router )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_approve_system_arkid/#extension_root.com_longgui_approve_system_arkid.ApproveSystemArkIDExtension.pass_approve_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request django.http.HttpRequest HTTP \u8bf7\u6c42 required approve_request arkid.core.models.ApproveRequest \u9700\u8981\u540c\u610f\u7684\u5ba1\u6279\u8bf7\u6c42 required Source code in extension_root/com_longgui_approve_system_arkid/__init__.py def pass_approve_request ( self , request , approve_request ): response = restore_approve_request ( approve_request ) logger . info ( f 'Restore approve request with result: { response } ' )","title":"pass_approve_request()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/","text":"Graphic verification code authentication factor # Features # Expand the user certification voucher form\uff0cInsert the graphics verification code and implement the relevant verification function Notice\uff1aGraphic verification code authentication factors do not have certification/register/Modify the password and other functions\uff0cOnly expand the voucher elements of other authentication factors general user\uff1a exist \u201cLog in\u201d Page implementation to the specified form insert the graph verification code Configuration guide # Plug -in lease Tenant configuration Certification factor configuration Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the graphical verification code authentication factor plug -in card in the plug -in lease page\uff0cClick to rent After the lease is completed\uff0cEnter the lease list\uff0cFind the graphical verification code authentication factor plug -in card\uff0cClick on the tenant configuration\uff0cConfigure related data Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"authcode\"\uff0c No need to configure related parameters\uff0cThe configuration is completed Implementation # general user\uff1aCaptcha\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Graphic verification code authentication factors plugin C->>A: Loading plug -in A->>C: Register and monitor the event Authrule_FIX_LOGIN_PAGE,AUTHRULE_CHECK_AUTH_DATA D->>C: Visit Registration/Log in/Reset password page C->>A: Effects authrule_FIX_LOGIN_Page event A->>C: Response event,Register/Log in/Reset the password page injection element C->>D: Rendering/Log in/Reset password page D->>C: Enter certification voucher\uff0cInitiate certification requests C->>A: Triggering certification voucher check event Authrule_CHECK_AUTH_DATA A->>C: Response event\uff0cComplete certification vouchers inspection\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf you complete the reset password operation or not complete the registration/Login operation, it prompts an error Abstract method implementation # load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page Code # extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension ( AuthFactorExtension ) # \u56fe\u5f62\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py class AuthCodeAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u56fe\u5f62\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" self . create_extension_config_schema () self . create_extension_settings_schema () self . register_extension_api () super () . load () # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if self . get_settings ( tenant ): settings = { \"width\" : 180 , \"height\" : 60 , \"auth_code_length\" : 4 } self . update_or_create_settings ( tenant , settings , True , False ) if not self . get_tenant_configs ( tenant ): config = { \"login_enabled\" : False , \"register_enabled\" : False , \"reset_password_enabled\" : False } self . create_tenant_config ( tenant , config , \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"authcode\" ) def authenticate ( self , event , ** kwargs ): pass @transaction . atomic () def register ( self , event , ** kwargs ): pass def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): pass def fix_login_page ( self , event , ** kwargs ): items = [ { \"type\" : \"text\" , \"name\" : \"authcode\" , \"append\" :{ \"type\" : \"image\" , \"http\" : { \"url\" : self . generate_code_path , \"method\" : \"get\" , }, }, \"placeholder\" : _ ( \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" ) }, { \"type\" : \"hidden\" , \"name\" : \"authcode_key\" , }, ] for login_pages , ext in event . data [ \"login_pages\" ]: if login_pages and isinstance ( login_pages , dict ): for config_id , login_page in login_pages . items (): if config_id == uuid . UUID ( event . data [ \"main_auth_factor_id\" ]) . hex : for form in login_page [ self . LOGIN ][ \"forms\" ]: form [ \"items\" ] . extend ( items ) def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) authcode = data . get ( 'authcode' ) authcode_key = data . get ( 'authcode_key' ) if not self . check_authcode ( event . tenant , authcode , authcode_key ): settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( event . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) rs = self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) rs [ \"data\" ] = { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } return False , rs return True , None def create_register_page ( self , event , config , config_data ): pass def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def create_auth_manage_page ( self ): pass def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" AuthCodeAuthFactorSchema = create_extension_schema ( 'AuthCodeAuthFactorSchema' , __file__ , [ ( 'login_enabled' , bool , Field ( default = False , title = _ ( 'login_enabled' , '\u542f\u7528\u767b\u5f55' ), readonly = True ) ), ( 'register_enabled' , bool , Field ( default = False , title = _ ( 'register_enabled' , '\u542f\u7528\u6ce8\u518c' ), readonly = True ) ), ( 'reset_password_enabled' , bool , Field ( default = False , title = _ ( 'reset_password_enabled' , '\u542f\u7528\u91cd\u7f6e\u5bc6\u7801' ), readonly = True ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( AuthCodeAuthFactorSchema , 'authcode' ) def create_extension_settings_schema ( self ): \"\"\"\u521b\u5efa\u79df\u6237\u914d\u7f6eschama \"\"\" AuthCodeAuthFactorSettingsSchema = create_extension_schema ( 'AuthCodeAuthFactorSettingsSchema' , __file__ , [ ( 'width' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u5bbd\u5ea6\" ), default = 180 )), ( 'height' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u9ad8\u5ea6\" ), default = 60 )), ( 'auth_code_length' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u957f\u5ea6\" ), default = 4 )), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ] ) self . register_settings_schema ( AuthCodeAuthFactorSettingsSchema ) def get_random_char ( self , auth_code_length = 4 ) -> str : \"\"\"\u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Args: auth_code_length (int, optional): \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. Returns: str: \u968f\u673a\u5b57\u7b26\u4e32 \"\"\" chr_all = string . ascii_letters + string . digits str_random = '' . join ( random . sample ( chr_all , auth_code_length )) return str_random def get_random_color ( self , low , high ): \"\"\"\u83b7\u53d6\u968f\u673a\u989c\u8272 Args: low (int): \u4e0b\u9650 high (int): \u4e0a\u9650 Returns: tuple(int,int,int): RGB \"\"\" return ( random . randint ( low , high ), random . randint ( low , high ), random . randint ( low , high ), ) def get_authcode_picture ( self , auth_code_length = 4 , width = 180 , height = 60 ): \"\"\"\u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Args: auth_code_length (int, optional): \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. width (int, optional): \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. height (int, optional): \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. Returns: tuple(str,str,image): \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 \"\"\" # \u521b\u5efa\u7a7a\u767d\u753b\u5e03 image = Image . new ( 'RGB' , ( width , height ), self . get_random_color ( 20 , 100 )) # \u9a8c\u8bc1\u7801\u7684\u5b57\u4f53 font = ImageFont . truetype ( os . path . join ( os . path . dirname ( os . path . abspath ( __file__ ) ), 'assets/stxinwei.ttf' ), 40 ) # \u521b\u5efa\u753b\u7b14 draw = ImageDraw . Draw ( image ) # \u83b7\u53d6\u9a8c\u8bc1\u7801 char_4 = self . get_random_char ( auth_code_length ) # \u5411\u753b\u5e03\u4e0a\u586b\u5199\u9a8c\u8bc1\u7801 for i in range ( auth_code_length ): draw . text ( ( 40 * i + 10 , 0 ), char_4 [ i ], font = font , fill = self . get_random_color ( 100 , 200 ), ) # \u7ed8\u5236\u5e72\u6270\u70b9 for x in range ( random . randint ( 200 , 600 )): x = random . randint ( 1 , width - 1 ) y = random . randint ( 1 , height - 1 ) draw . point (( x , y ), fill = self . get_random_color ( 50 , 150 )) # \u6a21\u7cca\u5904\u7406 image = image . filter ( ImageFilter . BLUR ) key = self . generate_key () buf = BytesIO () # \u5c06\u56fe\u7247\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u6587\u4ef6\u7c7b\u578b\u4e3apng image . save ( buf , 'png' ) byte_data = buf . getvalue () base64_str = base64 . b64encode ( byte_data ) return key , char_4 , base64_str def generate_key ( self ): \"\"\"\u751f\u6210\u968f\u673akey Returns: str: \u968f\u673akey \"\"\" key = ' {} ' . format ( uuid . uuid4 () . hex ) return key @operation ( GenrateAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def get_authcode ( self , request , tenant_id : str ): \"\"\" \u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" tenant = Tenant . active_objects . get ( id = tenant_id ) settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( request . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) return { \"data\" : { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } } @operation ( CheckAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def check_auth_code ( self , request , tenant_id : str , data : CheckAuthCodeIn ): \"\"\" \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" if self . check_authcode ( request . tenant , data . authcode , data . authcode_key ): return self . success () else : return self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) def check_authcode ( self , tenant , authcode , authcode_key ): \"\"\"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" return authcode_key and cache . get ( tenant , authcode_key ) . lower () == authcode . lower () def register_extension_api ( self ): \"\"\"\u6ce8\u518c\u63d2\u4ef6API \"\"\" self . generate_code_path = self . register_api ( '/auth_code/' , 'GET' , self . get_authcode , tenant_path = True , auth = None , response = GenrateAuthCodeOut , ) self . check_code_path = self . register_api ( '/auth_code/' , 'POST' , self . check_auth_code , tenant_path = True , auth = None , response = CheckAuthCodeOut , ) authenticate ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def authenticate ( self , event , ** kwargs ): pass check_auth_code ( self , request , tenant_id , data ) # \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py @operation ( CheckAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def check_auth_code ( self , request , tenant_id : str , data : CheckAuthCodeIn ): \"\"\" \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" if self . check_authcode ( request . tenant , data . authcode , data . authcode_key ): return self . success () else : return self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) authcode = data . get ( 'authcode' ) authcode_key = data . get ( 'authcode_key' ) if not self . check_authcode ( event . tenant , authcode , authcode_key ): settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( event . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) rs = self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) rs [ \"data\" ] = { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } return False , rs return True , None check_authcode ( self , tenant , authcode , authcode_key ) # \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def check_authcode ( self , tenant , authcode , authcode_key ): \"\"\"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" return authcode_key and cache . get ( tenant , authcode_key ) . lower () == authcode . lower () create_auth_manage_page ( self ) # \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_auth_manage_page ( self ): pass create_extension_config_schema ( self ) # \u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" AuthCodeAuthFactorSchema = create_extension_schema ( 'AuthCodeAuthFactorSchema' , __file__ , [ ( 'login_enabled' , bool , Field ( default = False , title = _ ( 'login_enabled' , '\u542f\u7528\u767b\u5f55' ), readonly = True ) ), ( 'register_enabled' , bool , Field ( default = False , title = _ ( 'register_enabled' , '\u542f\u7528\u6ce8\u518c' ), readonly = True ) ), ( 'reset_password_enabled' , bool , Field ( default = False , title = _ ( 'reset_password_enabled' , '\u542f\u7528\u91cd\u7f6e\u5bc6\u7801' ), readonly = True ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( AuthCodeAuthFactorSchema , 'authcode' ) create_extension_settings_schema ( self ) # \u521b\u5efa\u79df\u6237\u914d\u7f6eschama Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_extension_settings_schema ( self ): \"\"\"\u521b\u5efa\u79df\u6237\u914d\u7f6eschama \"\"\" AuthCodeAuthFactorSettingsSchema = create_extension_schema ( 'AuthCodeAuthFactorSettingsSchema' , __file__ , [ ( 'width' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u5bbd\u5ea6\" ), default = 180 )), ( 'height' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u9ad8\u5ea6\" ), default = 60 )), ( 'auth_code_length' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u957f\u5ea6\" ), default = 4 )), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ] ) self . register_settings_schema ( AuthCodeAuthFactorSettingsSchema ) create_login_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_login_page ( self , event , config , config_data ): pass create_other_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_other_page ( self , event , config , config_data ): pass create_password_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_password_page ( self , event , config , config_data ): pass create_register_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_register_page ( self , event , config , config_data ): pass fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def fix_login_page ( self , event , ** kwargs ): items = [ { \"type\" : \"text\" , \"name\" : \"authcode\" , \"append\" :{ \"type\" : \"image\" , \"http\" : { \"url\" : self . generate_code_path , \"method\" : \"get\" , }, }, \"placeholder\" : _ ( \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" ) }, { \"type\" : \"hidden\" , \"name\" : \"authcode_key\" , }, ] for login_pages , ext in event . data [ \"login_pages\" ]: if login_pages and isinstance ( login_pages , dict ): for config_id , login_page in login_pages . items (): if config_id == uuid . UUID ( event . data [ \"main_auth_factor_id\" ]) . hex : for form in login_page [ self . LOGIN ][ \"forms\" ]: form [ \"items\" ] . extend ( items ) generate_key ( self ) # \u751f\u6210\u968f\u673akey Returns: Type Description str \u968f\u673akey Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def generate_key ( self ): \"\"\"\u751f\u6210\u968f\u673akey Returns: str: \u968f\u673akey \"\"\" key = ' {} ' . format ( uuid . uuid4 () . hex ) return key get_authcode ( self , request , tenant_id ) # \u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py @operation ( GenrateAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def get_authcode ( self , request , tenant_id : str ): \"\"\" \u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" tenant = Tenant . active_objects . get ( id = tenant_id ) settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( request . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) return { \"data\" : { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } } get_authcode_picture ( self , auth_code_length = 4 , width = 180 , height = 60 ) # \u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Parameters: Name Type Description Default auth_code_length int \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. 4 width int \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. 180 height int \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. 60 Returns: Type Description tuple(str,str,image) \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_authcode_picture ( self , auth_code_length = 4 , width = 180 , height = 60 ): \"\"\"\u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Args: auth_code_length (int, optional): \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. width (int, optional): \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. height (int, optional): \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. Returns: tuple(str,str,image): \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 \"\"\" # \u521b\u5efa\u7a7a\u767d\u753b\u5e03 image = Image . new ( 'RGB' , ( width , height ), self . get_random_color ( 20 , 100 )) # \u9a8c\u8bc1\u7801\u7684\u5b57\u4f53 font = ImageFont . truetype ( os . path . join ( os . path . dirname ( os . path . abspath ( __file__ ) ), 'assets/stxinwei.ttf' ), 40 ) # \u521b\u5efa\u753b\u7b14 draw = ImageDraw . Draw ( image ) # \u83b7\u53d6\u9a8c\u8bc1\u7801 char_4 = self . get_random_char ( auth_code_length ) # \u5411\u753b\u5e03\u4e0a\u586b\u5199\u9a8c\u8bc1\u7801 for i in range ( auth_code_length ): draw . text ( ( 40 * i + 10 , 0 ), char_4 [ i ], font = font , fill = self . get_random_color ( 100 , 200 ), ) # \u7ed8\u5236\u5e72\u6270\u70b9 for x in range ( random . randint ( 200 , 600 )): x = random . randint ( 1 , width - 1 ) y = random . randint ( 1 , height - 1 ) draw . point (( x , y ), fill = self . get_random_color ( 50 , 150 )) # \u6a21\u7cca\u5904\u7406 image = image . filter ( ImageFilter . BLUR ) key = self . generate_key () buf = BytesIO () # \u5c06\u56fe\u7247\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u6587\u4ef6\u7c7b\u578b\u4e3apng image . save ( buf , 'png' ) byte_data = buf . getvalue () base64_str = base64 . b64encode ( byte_data ) return key , char_4 , base64_str get_random_char ( self , auth_code_length = 4 ) # \u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Parameters: Name Type Description Default auth_code_length int \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. 4 Returns: Type Description str \u968f\u673a\u5b57\u7b26\u4e32 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_random_char ( self , auth_code_length = 4 ) -> str : \"\"\"\u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Args: auth_code_length (int, optional): \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. Returns: str: \u968f\u673a\u5b57\u7b26\u4e32 \"\"\" chr_all = string . ascii_letters + string . digits str_random = '' . join ( random . sample ( chr_all , auth_code_length )) return str_random get_random_color ( self , low , high ) # \u83b7\u53d6\u968f\u673a\u989c\u8272 Parameters: Name Type Description Default low int \u4e0b\u9650 required high int \u4e0a\u9650 required Returns: Type Description tuple(int,int,int) RGB Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_random_color ( self , low , high ): \"\"\"\u83b7\u53d6\u968f\u673a\u989c\u8272 Args: low (int): \u4e0b\u9650 high (int): \u4e0a\u9650 Returns: tuple(int,int,int): RGB \"\"\" return ( random . randint ( low , high ), random . randint ( low , high ), random . randint ( low , high ), ) load ( self ) # \u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" self . create_extension_config_schema () self . create_extension_settings_schema () self . register_extension_api () super () . load () # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if self . get_settings ( tenant ): settings = { \"width\" : 180 , \"height\" : 60 , \"auth_code_length\" : 4 } self . update_or_create_settings ( tenant , settings , True , False ) if not self . get_tenant_configs ( tenant ): config = { \"login_enabled\" : False , \"register_enabled\" : False , \"reset_password_enabled\" : False } self . create_tenant_config ( tenant , config , \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"authcode\" ) register_extension_api ( self ) # \u6ce8\u518c\u63d2\u4ef6API Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def register_extension_api ( self ): \"\"\"\u6ce8\u518c\u63d2\u4ef6API \"\"\" self . generate_code_path = self . register_api ( '/auth_code/' , 'GET' , self . get_authcode , tenant_path = True , auth = None , response = GenrateAuthCodeOut , ) self . check_code_path = self . register_api ( '/auth_code/' , 'POST' , self . check_auth_code , tenant_path = True , auth = None , response = CheckAuthCodeOut , ) reset_password ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def reset_password ( self , event , ** kwargs ): pass","title":"Graphic verification code authentication factor"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#graphic-verification-code-authentication-factor","text":"","title":"Graphic verification code authentication factor"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#features","text":"Expand the user certification voucher form\uff0cInsert the graphics verification code and implement the relevant verification function Notice\uff1aGraphic verification code authentication factors do not have certification/register/Modify the password and other functions\uff0cOnly expand the voucher elements of other authentication factors general user\uff1a exist \u201cLog in\u201d Page implementation to the specified form insert the graph verification code","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#configuration-guide","text":"Plug -in lease Tenant configuration Certification factor configuration Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the graphical verification code authentication factor plug -in card in the plug -in lease page\uff0cClick to rent After the lease is completed\uff0cEnter the lease list\uff0cFind the graphical verification code authentication factor plug -in card\uff0cClick on the tenant configuration\uff0cConfigure related data Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"authcode\"\uff0c No need to configure related parameters\uff0cThe configuration is completed","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#implementation","text":"general user\uff1aCaptcha\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Graphic verification code authentication factors plugin C->>A: Loading plug -in A->>C: Register and monitor the event Authrule_FIX_LOGIN_PAGE,AUTHRULE_CHECK_AUTH_DATA D->>C: Visit Registration/Log in/Reset password page C->>A: Effects authrule_FIX_LOGIN_Page event A->>C: Response event,Register/Log in/Reset the password page injection element C->>D: Rendering/Log in/Reset password page D->>C: Enter certification voucher\uff0cInitiate certification requests C->>A: Triggering certification voucher check event Authrule_CHECK_AUTH_DATA A->>C: Response event\uff0cComplete certification vouchers inspection\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf you complete the reset password operation or not complete the registration/Login operation, it prompts an error","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#abstract-method-implementation","text":"load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension","text":"\u56fe\u5f62\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py class AuthCodeAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u56fe\u5f62\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" self . create_extension_config_schema () self . create_extension_settings_schema () self . register_extension_api () super () . load () # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if self . get_settings ( tenant ): settings = { \"width\" : 180 , \"height\" : 60 , \"auth_code_length\" : 4 } self . update_or_create_settings ( tenant , settings , True , False ) if not self . get_tenant_configs ( tenant ): config = { \"login_enabled\" : False , \"register_enabled\" : False , \"reset_password_enabled\" : False } self . create_tenant_config ( tenant , config , \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"authcode\" ) def authenticate ( self , event , ** kwargs ): pass @transaction . atomic () def register ( self , event , ** kwargs ): pass def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): pass def fix_login_page ( self , event , ** kwargs ): items = [ { \"type\" : \"text\" , \"name\" : \"authcode\" , \"append\" :{ \"type\" : \"image\" , \"http\" : { \"url\" : self . generate_code_path , \"method\" : \"get\" , }, }, \"placeholder\" : _ ( \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" ) }, { \"type\" : \"hidden\" , \"name\" : \"authcode_key\" , }, ] for login_pages , ext in event . data [ \"login_pages\" ]: if login_pages and isinstance ( login_pages , dict ): for config_id , login_page in login_pages . items (): if config_id == uuid . UUID ( event . data [ \"main_auth_factor_id\" ]) . hex : for form in login_page [ self . LOGIN ][ \"forms\" ]: form [ \"items\" ] . extend ( items ) def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) authcode = data . get ( 'authcode' ) authcode_key = data . get ( 'authcode_key' ) if not self . check_authcode ( event . tenant , authcode , authcode_key ): settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( event . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) rs = self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) rs [ \"data\" ] = { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } return False , rs return True , None def create_register_page ( self , event , config , config_data ): pass def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def create_auth_manage_page ( self ): pass def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" AuthCodeAuthFactorSchema = create_extension_schema ( 'AuthCodeAuthFactorSchema' , __file__ , [ ( 'login_enabled' , bool , Field ( default = False , title = _ ( 'login_enabled' , '\u542f\u7528\u767b\u5f55' ), readonly = True ) ), ( 'register_enabled' , bool , Field ( default = False , title = _ ( 'register_enabled' , '\u542f\u7528\u6ce8\u518c' ), readonly = True ) ), ( 'reset_password_enabled' , bool , Field ( default = False , title = _ ( 'reset_password_enabled' , '\u542f\u7528\u91cd\u7f6e\u5bc6\u7801' ), readonly = True ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( AuthCodeAuthFactorSchema , 'authcode' ) def create_extension_settings_schema ( self ): \"\"\"\u521b\u5efa\u79df\u6237\u914d\u7f6eschama \"\"\" AuthCodeAuthFactorSettingsSchema = create_extension_schema ( 'AuthCodeAuthFactorSettingsSchema' , __file__ , [ ( 'width' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u5bbd\u5ea6\" ), default = 180 )), ( 'height' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u9ad8\u5ea6\" ), default = 60 )), ( 'auth_code_length' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u957f\u5ea6\" ), default = 4 )), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ] ) self . register_settings_schema ( AuthCodeAuthFactorSettingsSchema ) def get_random_char ( self , auth_code_length = 4 ) -> str : \"\"\"\u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Args: auth_code_length (int, optional): \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. Returns: str: \u968f\u673a\u5b57\u7b26\u4e32 \"\"\" chr_all = string . ascii_letters + string . digits str_random = '' . join ( random . sample ( chr_all , auth_code_length )) return str_random def get_random_color ( self , low , high ): \"\"\"\u83b7\u53d6\u968f\u673a\u989c\u8272 Args: low (int): \u4e0b\u9650 high (int): \u4e0a\u9650 Returns: tuple(int,int,int): RGB \"\"\" return ( random . randint ( low , high ), random . randint ( low , high ), random . randint ( low , high ), ) def get_authcode_picture ( self , auth_code_length = 4 , width = 180 , height = 60 ): \"\"\"\u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Args: auth_code_length (int, optional): \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. width (int, optional): \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. height (int, optional): \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. Returns: tuple(str,str,image): \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 \"\"\" # \u521b\u5efa\u7a7a\u767d\u753b\u5e03 image = Image . new ( 'RGB' , ( width , height ), self . get_random_color ( 20 , 100 )) # \u9a8c\u8bc1\u7801\u7684\u5b57\u4f53 font = ImageFont . truetype ( os . path . join ( os . path . dirname ( os . path . abspath ( __file__ ) ), 'assets/stxinwei.ttf' ), 40 ) # \u521b\u5efa\u753b\u7b14 draw = ImageDraw . Draw ( image ) # \u83b7\u53d6\u9a8c\u8bc1\u7801 char_4 = self . get_random_char ( auth_code_length ) # \u5411\u753b\u5e03\u4e0a\u586b\u5199\u9a8c\u8bc1\u7801 for i in range ( auth_code_length ): draw . text ( ( 40 * i + 10 , 0 ), char_4 [ i ], font = font , fill = self . get_random_color ( 100 , 200 ), ) # \u7ed8\u5236\u5e72\u6270\u70b9 for x in range ( random . randint ( 200 , 600 )): x = random . randint ( 1 , width - 1 ) y = random . randint ( 1 , height - 1 ) draw . point (( x , y ), fill = self . get_random_color ( 50 , 150 )) # \u6a21\u7cca\u5904\u7406 image = image . filter ( ImageFilter . BLUR ) key = self . generate_key () buf = BytesIO () # \u5c06\u56fe\u7247\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u6587\u4ef6\u7c7b\u578b\u4e3apng image . save ( buf , 'png' ) byte_data = buf . getvalue () base64_str = base64 . b64encode ( byte_data ) return key , char_4 , base64_str def generate_key ( self ): \"\"\"\u751f\u6210\u968f\u673akey Returns: str: \u968f\u673akey \"\"\" key = ' {} ' . format ( uuid . uuid4 () . hex ) return key @operation ( GenrateAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def get_authcode ( self , request , tenant_id : str ): \"\"\" \u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" tenant = Tenant . active_objects . get ( id = tenant_id ) settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( request . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) return { \"data\" : { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } } @operation ( CheckAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def check_auth_code ( self , request , tenant_id : str , data : CheckAuthCodeIn ): \"\"\" \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" if self . check_authcode ( request . tenant , data . authcode , data . authcode_key ): return self . success () else : return self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) def check_authcode ( self , tenant , authcode , authcode_key ): \"\"\"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" return authcode_key and cache . get ( tenant , authcode_key ) . lower () == authcode . lower () def register_extension_api ( self ): \"\"\"\u6ce8\u518c\u63d2\u4ef6API \"\"\" self . generate_code_path = self . register_api ( '/auth_code/' , 'GET' , self . get_authcode , tenant_path = True , auth = None , response = GenrateAuthCodeOut , ) self . check_code_path = self . register_api ( '/auth_code/' , 'POST' , self . check_auth_code , tenant_path = True , auth = None , response = CheckAuthCodeOut , )","title":"AuthCodeAuthFactorExtension"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.authenticate","text":"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def authenticate ( self , event , ** kwargs ): pass","title":"authenticate()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.check_auth_code","text":"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py @operation ( CheckAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def check_auth_code ( self , request , tenant_id : str , data : CheckAuthCodeIn ): \"\"\" \u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" if self . check_authcode ( request . tenant , data . authcode , data . authcode_key ): return self . success () else : return self . error ( ErrorCode . AUTHCODE_NOT_MATCH )","title":"check_auth_code()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def check_auth_data ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Args: event: \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) authcode = data . get ( 'authcode' ) authcode_key = data . get ( 'authcode_key' ) if not self . check_authcode ( event . tenant , authcode , authcode_key ): settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( event . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) rs = self . error ( ErrorCode . AUTHCODE_NOT_MATCH ) rs [ \"data\" ] = { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } return False , rs return True , None","title":"check_auth_data()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.check_authcode","text":"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def check_authcode ( self , tenant , authcode , authcode_key ): \"\"\"\u6821\u9a8c\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" return authcode_key and cache . get ( tenant , authcode_key ) . lower () == authcode . lower ()","title":"check_authcode()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_auth_manage_page","text":"\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_auth_manage_page ( self ): pass","title":"create_auth_manage_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_extension_config_schema","text":"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" AuthCodeAuthFactorSchema = create_extension_schema ( 'AuthCodeAuthFactorSchema' , __file__ , [ ( 'login_enabled' , bool , Field ( default = False , title = _ ( 'login_enabled' , '\u542f\u7528\u767b\u5f55' ), readonly = True ) ), ( 'register_enabled' , bool , Field ( default = False , title = _ ( 'register_enabled' , '\u542f\u7528\u6ce8\u518c' ), readonly = True ) ), ( 'reset_password_enabled' , bool , Field ( default = False , title = _ ( 'reset_password_enabled' , '\u542f\u7528\u91cd\u7f6e\u5bc6\u7801' ), readonly = True ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( AuthCodeAuthFactorSchema , 'authcode' )","title":"create_extension_config_schema()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_extension_settings_schema","text":"\u521b\u5efa\u79df\u6237\u914d\u7f6eschama Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_extension_settings_schema ( self ): \"\"\"\u521b\u5efa\u79df\u6237\u914d\u7f6eschama \"\"\" AuthCodeAuthFactorSettingsSchema = create_extension_schema ( 'AuthCodeAuthFactorSettingsSchema' , __file__ , [ ( 'width' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u5bbd\u5ea6\" ), default = 180 )), ( 'height' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u56fe\u7247\u9ad8\u5ea6\" ), default = 60 )), ( 'auth_code_length' , int , Field ( title = _ ( \"\u9a8c\u8bc1\u7801\u957f\u5ea6\" ), default = 4 )), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ] ) self . register_settings_schema ( AuthCodeAuthFactorSettingsSchema )","title":"create_extension_settings_schema()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_login_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_login_page ( self , event , config , config_data ): pass","title":"create_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_other_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_other_page ( self , event , config , config_data ): pass","title":"create_other_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_password_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_password_page ( self , event , config , config_data ): pass","title":"create_password_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.create_register_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def create_register_page ( self , event , config , config_data ): pass","title":"create_register_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def fix_login_page ( self , event , ** kwargs ): items = [ { \"type\" : \"text\" , \"name\" : \"authcode\" , \"append\" :{ \"type\" : \"image\" , \"http\" : { \"url\" : self . generate_code_path , \"method\" : \"get\" , }, }, \"placeholder\" : _ ( \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" ) }, { \"type\" : \"hidden\" , \"name\" : \"authcode_key\" , }, ] for login_pages , ext in event . data [ \"login_pages\" ]: if login_pages and isinstance ( login_pages , dict ): for config_id , login_page in login_pages . items (): if config_id == uuid . UUID ( event . data [ \"main_auth_factor_id\" ]) . hex : for form in login_page [ self . LOGIN ][ \"forms\" ]: form [ \"items\" ] . extend ( items )","title":"fix_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.generate_key","text":"\u751f\u6210\u968f\u673akey Returns: Type Description str \u968f\u673akey Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def generate_key ( self ): \"\"\"\u751f\u6210\u968f\u673akey Returns: str: \u968f\u673akey \"\"\" key = ' {} ' . format ( uuid . uuid4 () . hex ) return key","title":"generate_key()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.get_authcode","text":"\u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py @operation ( GenrateAuthCodeOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def get_authcode ( self , request , tenant_id : str ): \"\"\" \u83b7\u53d6\u56fe\u5f62\u9a8c\u8bc1\u7801 \"\"\" tenant = Tenant . active_objects . get ( id = tenant_id ) settings = self . get_settings ( tenant ) key , code , image = self . get_authcode_picture ( settings . settings . get ( \"auth_code_length\" , 4 ), settings . settings . get ( \"width\" , 180 ), settings . settings . get ( \"height\" , 60 ) ) cache . set ( request . tenant , key , code , expired = settings . settings . get ( \"expired\" , 10 ) * 60 ) return { \"data\" : { \"image\" : str ( image , 'utf8' ), \"authcode_key\" : key } }","title":"get_authcode()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.get_authcode_picture","text":"\u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Parameters: Name Type Description Default auth_code_length int \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. 4 width int \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. 180 height int \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. 60 Returns: Type Description tuple(str,str,image) \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_authcode_picture ( self , auth_code_length = 4 , width = 180 , height = 60 ): \"\"\"\u5236\u4f5c\u9a8c\u8bc1\u7801\u56fe\u7247 Args: auth_code_length (int, optional): \u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. width (int, optional): \u56fe\u5f62\u5bbd\u5ea6. Defaults to 180. height (int, optional): \u56fe\u5f62\u9ad8\u5ea6. Defaults to 60. Returns: tuple(str,str,image): \u7f13\u5b58key,\u56fe\u5f62\u9a8c\u8bc1\u7801,\u56fe\u7247 \"\"\" # \u521b\u5efa\u7a7a\u767d\u753b\u5e03 image = Image . new ( 'RGB' , ( width , height ), self . get_random_color ( 20 , 100 )) # \u9a8c\u8bc1\u7801\u7684\u5b57\u4f53 font = ImageFont . truetype ( os . path . join ( os . path . dirname ( os . path . abspath ( __file__ ) ), 'assets/stxinwei.ttf' ), 40 ) # \u521b\u5efa\u753b\u7b14 draw = ImageDraw . Draw ( image ) # \u83b7\u53d6\u9a8c\u8bc1\u7801 char_4 = self . get_random_char ( auth_code_length ) # \u5411\u753b\u5e03\u4e0a\u586b\u5199\u9a8c\u8bc1\u7801 for i in range ( auth_code_length ): draw . text ( ( 40 * i + 10 , 0 ), char_4 [ i ], font = font , fill = self . get_random_color ( 100 , 200 ), ) # \u7ed8\u5236\u5e72\u6270\u70b9 for x in range ( random . randint ( 200 , 600 )): x = random . randint ( 1 , width - 1 ) y = random . randint ( 1 , height - 1 ) draw . point (( x , y ), fill = self . get_random_color ( 50 , 150 )) # \u6a21\u7cca\u5904\u7406 image = image . filter ( ImageFilter . BLUR ) key = self . generate_key () buf = BytesIO () # \u5c06\u56fe\u7247\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u6587\u4ef6\u7c7b\u578b\u4e3apng image . save ( buf , 'png' ) byte_data = buf . getvalue () base64_str = base64 . b64encode ( byte_data ) return key , char_4 , base64_str","title":"get_authcode_picture()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.get_random_char","text":"\u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Parameters: Name Type Description Default auth_code_length int \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. 4 Returns: Type Description str \u968f\u673a\u5b57\u7b26\u4e32 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_random_char ( self , auth_code_length = 4 ) -> str : \"\"\"\u83b7\u53d6\u968f\u673a\u5b57\u7b26\u7ec4\u5408 Args: auth_code_length (int, optional): \u56fe\u5f62\u9a8c\u8bc1\u7801\u957f\u5ea6. Defaults to 4. Returns: str: \u968f\u673a\u5b57\u7b26\u4e32 \"\"\" chr_all = string . ascii_letters + string . digits str_random = '' . join ( random . sample ( chr_all , auth_code_length )) return str_random","title":"get_random_char()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.get_random_color","text":"\u83b7\u53d6\u968f\u673a\u989c\u8272 Parameters: Name Type Description Default low int \u4e0b\u9650 required high int \u4e0a\u9650 required Returns: Type Description tuple(int,int,int) RGB Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def get_random_color ( self , low , high ): \"\"\"\u83b7\u53d6\u968f\u673a\u989c\u8272 Args: low (int): \u4e0b\u9650 high (int): \u4e0a\u9650 Returns: tuple(int,int,int): RGB \"\"\" return ( random . randint ( low , high ), random . randint ( low , high ), random . randint ( low , high ), )","title":"get_random_color()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.load","text":"\u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" self . create_extension_config_schema () self . create_extension_settings_schema () self . register_extension_api () super () . load () # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if self . get_settings ( tenant ): settings = { \"width\" : 180 , \"height\" : 60 , \"auth_code_length\" : 4 } self . update_or_create_settings ( tenant , settings , True , False ) if not self . get_tenant_configs ( tenant ): config = { \"login_enabled\" : False , \"register_enabled\" : False , \"reset_password_enabled\" : False } self . create_tenant_config ( tenant , config , \"\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"authcode\" )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.register_extension_api","text":"\u6ce8\u518c\u63d2\u4ef6API Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def register_extension_api ( self ): \"\"\"\u6ce8\u518c\u63d2\u4ef6API \"\"\" self . generate_code_path = self . register_api ( '/auth_code/' , 'GET' , self . get_authcode , tenant_path = True , auth = None , response = GenrateAuthCodeOut , ) self . check_code_path = self . register_api ( '/auth_code/' , 'POST' , self . check_auth_code , tenant_path = True , auth = None , response = CheckAuthCodeOut , )","title":"register_extension_api()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_authcode/#extension_root.com_longgui_auth_factor_authcode.AuthCodeAuthFactorExtension.reset_password","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_authcode/__init__.py def reset_password ( self , event , ** kwargs ): pass","title":"reset_password()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/","text":"Mobile phone verification code authentication factors # Features # User table extension mobile phone number field\uff0cAllows users to certify through the mobile phone number and verification code\uff0cregister\uff0cReset the password and replace the mobile phone number\u3002 general user\uff1a exist \u201cregister\u201d Page implementation mobile phone number+Verification code user registration exist \u201cLog in\u201d Page implementation mobile phone number+Verification code user login exist \u201cchange password\u201d Page implementation mobile phone number+The password changes at the verification code method exist \u201cmine - Certification management\u201c Add the function of resetting the mobile phone number Tenant administrator exist\u201dUser Management - user list\u201cIn the editor page adds mobile phone number editing function precondition # Need to be used with SMS plug -in\uff0cThe system has default to provide Alibaba Cloud SMS plug -in\uff0cIf you need to view the configuration method, please move the Alibaba Cloud SMS plug -in documentation\u3002 Configuration guide # Plug -in lease Certification factor configuration login interface Registration interface Password modification interface Replace the mobile phone number interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the mobile phone verification code authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"mobile\",Select a suitable configuration SMS plug -in when runtime.\uff0cThe configuration is completed Enter from the user avatar menu\u3010Certification management\u3011interface,Select the mobile phone number tab page Implementation # general user\uff1amobile phone number+Verification code user registration/Log in/reset Password\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin participant B as SMS plugin C->>A: Loading plug -in A->>C: Register and monitor the related events of the mobile phone verification code\uff08register/Log in/Reset password, etc.\uff09 C->>B: Loading plug -in B->>C: SMS event D->>C: Visit Registration/Log in/Reset password page C->>A: Send Create_LOGIN_PAGE_AUTH_Factor event A->>C: Response event\uff0cAssemble/Log in/Reset the password page element C->>D: Rendering/Log in/Reset password page D->>A: Enter the mobile phone number\uff0cClicked\u3010send messages\u3011Button\uff0cAccess SMS sending interface A->>B: Generate SMS verification code\uff0cSend and_SMS event B->>A: Response event\uff0cSend a text message A->>D: Return to SMS sending results D->>C: Enter the relevant information\uff0cClicked\u3010register/Log in/reset Password\u3011Button C->>A: Register/Log in/Reset password event A->>C: Response event\uff0cComplete registration/Log in/Reset password process\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf you complete the reset password operation or not complete the registration/Login operation, it prompts an error general user\uff1aReset the mobile phone number\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin participant B as SMS plugin C->>A: Loading plug -in A->>C: Towards\u201cmine - Certification management\u201c Add a reset mobile phone number element to the page\uff0cRegister to reset the mobile phone number interface from the core C->>B: Loading plug -in B->>C: SMS event D->>C: access\u201cmine - Certification management\u201c Reset the mobile phone number function in the page D->>A: Enter the mobile phone number\uff0cClicked\u3010send messages\u3011Button\uff0cAccess SMS sending interface A->>B: Generate SMS verification code\uff0cSend and_SMS event B->>A: Response event\uff0cSend a text message A->>D: Return to SMS sending results D->>C: Enter the verification code information\uff0cClicked\u3010confirm\u3011Button C->>A: Access reset mobile phone number interface A->>C: Response interface\uff0cCheck the input parameter\uff0cReturn result C->>D: test result\uff0cAnd prompt whether to complete the change Administrator user\uff1a Replace the user's mobile phone number sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin C->>A: Loading plug -in A->>C: Towards\u201cuser list-Edit user\u201dPage injection of mobile phone number elements D->>C: Administrator login\uff0cVisiting User List page\uff0cEdit the user's mobile phone number and save C->>D: Write data to database Abstract method implementation # load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page Code # extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension ( AuthFactorExtension ) # \u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py class MobileAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () @operation ( MineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def mine_mobile ( self , request , tenant_id : str ): user = request . user user_expand = User . expand_objects . filter ( id = user . id ) . first () config = self . get_tenant_configs ( request . tenant ) . first () if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) return self . success ( data = { \"current_mobile\" : user_expand . get ( \"mobile\" , None ), \"mobile\" : \"\" , \"code\" : \"\" , \"config_id\" : config . id . hex , }, ) authenticate ( self , event , ** kwargs ) # \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_auth_data ( self , event , ** kwargs ): pass check_mobile_exists ( self , mobile , tenant ) # \u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default mobile str \u624b\u673a\u53f7 required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None check_username_exists ( self , username , tenant ) # \u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default username str \u7528\u6237\u540d required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None create_auth_manage_page ( self ) # \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages create_extension_config_schema ( self ) # \u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) create_login_page ( self , event , config , config_data ) # \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) create_other_page ( self , event , config , config_data ) # \u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass create_password_page ( self , event , config , config_data ) # \u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) create_register_page ( self , event , config , config_data ) # \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def fix_login_page ( self , event , ** kwargs ): pass load ( self ) # \u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) register ( self , event , ** kwargs ) # \u6ce8\u518c\u7528\u6237 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user reset_password ( self , event , ** kwargs ) # \u91cd\u7f6e\u5bc6\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) send_sms_code ( self , request , tenant_id , config_id , data ) # \u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) update_mine_mobile ( self , request , tenant_id , data ) # \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () extension_root.com_longgui_auth_factor_mobile.sms # check_sms_code ( tenant , mobile , code ) # \u9a8c\u8bc1\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def check_sms_code ( tenant , mobile , code ): \"\"\" \u9a8c\u8bc1\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" c_code = cache . get ( tenant , gen_sms_code_key ( mobile )) return c_code == code create_sms_code ( tenant , phone_number , uth_code_length = 6 , expired = None ) # \u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u5e76\u5b58\u50a8\u81f3\u7f13\u5b58 Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def create_sms_code ( tenant , phone_number , uth_code_length = 6 , expired : Optional [ int ] = None ): \"\"\"\u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u5e76\u5b58\u50a8\u81f3\u7f13\u5b58 \"\"\" code = gen_sms_code ( uth_code_length ) cache . set ( tenant , gen_sms_code_key ( phone_number ), code , expired = expired ) return code gen_sms_code_key ( mobile ) # \u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u7684key Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def gen_sms_code_key ( mobile ): ''' \u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u7684key ''' return f 'sms: { mobile } '","title":"Mobile phone verification code authentication factors"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#mobile-phone-verification-code-authentication-factors","text":"","title":"Mobile phone verification code authentication factors"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#features","text":"User table extension mobile phone number field\uff0cAllows users to certify through the mobile phone number and verification code\uff0cregister\uff0cReset the password and replace the mobile phone number\u3002 general user\uff1a exist \u201cregister\u201d Page implementation mobile phone number+Verification code user registration exist \u201cLog in\u201d Page implementation mobile phone number+Verification code user login exist \u201cchange password\u201d Page implementation mobile phone number+The password changes at the verification code method exist \u201cmine - Certification management\u201c Add the function of resetting the mobile phone number Tenant administrator exist\u201dUser Management - user list\u201cIn the editor page adds mobile phone number editing function","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#precondition","text":"Need to be used with SMS plug -in\uff0cThe system has default to provide Alibaba Cloud SMS plug -in\uff0cIf you need to view the configuration method, please move the Alibaba Cloud SMS plug -in documentation\u3002","title":"precondition"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#configuration-guide","text":"Plug -in lease Certification factor configuration login interface Registration interface Password modification interface Replace the mobile phone number interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the mobile phone verification code authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"mobile\",Select a suitable configuration SMS plug -in when runtime.\uff0cThe configuration is completed Enter from the user avatar menu\u3010Certification management\u3011interface,Select the mobile phone number tab page","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#implementation","text":"general user\uff1amobile phone number+Verification code user registration/Log in/reset Password\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin participant B as SMS plugin C->>A: Loading plug -in A->>C: Register and monitor the related events of the mobile phone verification code\uff08register/Log in/Reset password, etc.\uff09 C->>B: Loading plug -in B->>C: SMS event D->>C: Visit Registration/Log in/Reset password page C->>A: Send Create_LOGIN_PAGE_AUTH_Factor event A->>C: Response event\uff0cAssemble/Log in/Reset the password page element C->>D: Rendering/Log in/Reset password page D->>A: Enter the mobile phone number\uff0cClicked\u3010send messages\u3011Button\uff0cAccess SMS sending interface A->>B: Generate SMS verification code\uff0cSend and_SMS event B->>A: Response event\uff0cSend a text message A->>D: Return to SMS sending results D->>C: Enter the relevant information\uff0cClicked\u3010register/Log in/reset Password\u3011Button C->>A: Register/Log in/Reset password event A->>C: Response event\uff0cComplete registration/Log in/Reset password process\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf you complete the reset password operation or not complete the registration/Login operation, it prompts an error general user\uff1aReset the mobile phone number\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin participant B as SMS plugin C->>A: Loading plug -in A->>C: Towards\u201cmine - Certification management\u201c Add a reset mobile phone number element to the page\uff0cRegister to reset the mobile phone number interface from the core C->>B: Loading plug -in B->>C: SMS event D->>C: access\u201cmine - Certification management\u201c Reset the mobile phone number function in the page D->>A: Enter the mobile phone number\uff0cClicked\u3010send messages\u3011Button\uff0cAccess SMS sending interface A->>B: Generate SMS verification code\uff0cSend and_SMS event B->>A: Response event\uff0cSend a text message A->>D: Return to SMS sending results D->>C: Enter the verification code information\uff0cClicked\u3010confirm\u3011Button C->>A: Access reset mobile phone number interface A->>C: Response interface\uff0cCheck the input parameter\uff0cReturn result C->>D: test result\uff0cAnd prompt whether to complete the change Administrator user\uff1a Replace the user's mobile phone number sequenceDiagram participant D as user participant C as Platform core participant A as Mobile phone verification code authentication factors plugin C->>A: Loading plug -in A->>C: Towards\u201cuser list-Edit user\u201dPage injection of mobile phone number elements D->>C: Administrator login\uff0cVisiting User List page\uff0cEdit the user's mobile phone number and save C->>D: Write data to database","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#abstract-method-implementation","text":"load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension","text":"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py class MobileAuthFactorExtension ( AuthFactorExtension ): \"\"\"\u624b\u673a\u77ed\u4fe1\u9a8c\u8bc1\u7801\u8ba4\u8bc1\u56e0\u7d20\u63d2\u4ef6 \"\"\" def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code ) def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg )) @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR ) def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data ) def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' ) @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED ) @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success () @operation ( MineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def mine_mobile ( self , request , tenant_id : str ): user = request . user user_expand = User . expand_objects . filter ( id = user . id ) . first () config = self . get_tenant_configs ( request . tenant ) . first () if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) return self . success ( data = { \"current_mobile\" : user_expand . get ( \"mobile\" , None ), \"mobile\" : \"\" , \"code\" : \"\" , \"config_id\" : config . id . hex , }, )","title":"MobileAuthFactorExtension"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.authenticate","text":"\u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def authenticate ( self , event , ** kwargs ): \"\"\" \u8ba4\u8bc1 \u901a\u8fc7\u624b\u673a\u53f7\u7801\u67e5\u627e\u7528\u6237\u5e76\u6821\u9a8c\u77ed\u4fe1\u9a8c\u8bc1\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) if user : user = user [ 0 ] if check_sms_code ( tenant , mobile , sms_code ): user = User . active_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) else : msg = ErrorCode . SMS_CODE_MISMATCH else : msg = ErrorCode . MOBILE_NOT_EXISTS_ERROR return self . auth_failed ( event , data = self . error ( msg ))","title":"authenticate()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_auth_data ( self , event , ** kwargs ): pass","title":"check_auth_data()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_mobile_exists","text":"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default mobile str \u624b\u673a\u53f7 required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_mobile_exists ( self , mobile , tenant ): \"\"\"\u68c0\u67e5\u7535\u8bdd\u53f7\u7801\u662f\u5426\u5df2\u5b58\u5728 Args: mobile (str): \u624b\u673a\u53f7 tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): mobile\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" if not mobile : return False , ErrorCode . MOBILE_EMPTY # \u9700\u8981\u4e34\u65f6\u5b58\u50a8 temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) if User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) . count (): # if User.expand_objects.filter(tenant=tenant,mobile=mobile).count(): return False , ErrorCode . MOBILE_EXISTS_ERROR return True , None","title":"check_mobile_exists()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.check_username_exists","text":"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Parameters: Name Type Description Default username str \u7528\u6237\u540d required tenant Tenant \u79df\u6237 required Returns: Type Description (bool,ErrorCode) username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def check_username_exists ( self , username , tenant ): \"\"\"\u68c0\u67e5\u7528\u6237\u540d\u662f\u5426\u5df2\u5b58\u5728 Args: username (str): \u7528\u6237\u540d tenant (Tenant): \u79df\u6237 Returns: (bool,ErrorCode): username\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u5bf9\u5e94\u9519\u8bef \"\"\" # \u68c0\u67e5username\u662f\u5426\u4e3a\u7a7a if not username : return False , ErrorCode . USERNAME_EMPTY # \u68c0\u67e5username\u662f\u5426\u5df2\u5b58\u5728 if tenant . users . filter ( is_active = True , is_del = False ) . filter ( username = username ) . count (): # if User.expand_objects.filter(tenant=tenant,username=username).count(): return False , ErrorCode . USERNAME_EXISTS_ERROR return True , None","title":"check_username_exists()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_auth_manage_page","text":"\u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_auth_manage_page ( self ): \"\"\" \u521b\u5efa\u201c\u6211\u7684-\u8ba4\u8bc1\u7ba1\u7406\u201d\u4e2d\u7684\u66f4\u6362\u624b\u673a\u53f7\u7801\u9875\u9762 \"\"\" _pages = [] mine_mobile_path = self . register_api ( \"/mine_mobile/\" , \"GET\" , self . mine_mobile , tenant_path = True , auth = GlobalAuth (), response = MineMobileOut ) upodate_mine_mobile_path = self . register_api ( \"/mine_mobile/\" , 'POST' , self . update_mine_mobile , tenant_path = True , auth = GlobalAuth (), response = UpdateMineMobileOut ) name = '\u66f4\u6539\u624b\u673a\u53f7\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . DirectAction ( path = mine_mobile_path , method = actions . FrontActionMethod . GET , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = upodate_mine_mobile_path ), } ) _pages . append ( page ) return _pages","title":"create_auth_manage_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_extension_config_schema","text":"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6eschema\u63cf\u8ff0 \"\"\" select_sms_page = pages . TablePage ( select = True , name = _ ( \"\u6307\u5b9a\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6\" )) self . register_front_pages ( select_sms_page ) select_sms_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=sms' , method = actions . FrontActionMethod . GET ) ) MobileAuthFactorSchema = create_extension_schema ( 'MobileAuthFactorSchema' , __file__ , [ ( 'sms_config' , MobileAuthFactorConfigSchema , Field ( title = _ ( 'sms extension config' , '\u77ed\u4fe1\u63d2\u4ef6\u8fd0\u884c\u65f6' ), page = select_sms_page . tag , ), ), ( 'code_length' , int , Field ( title = _ ( 'code_length' , '\u9a8c\u8bc1\u7801\u957f\u5ea6' ), default = 6 ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 10 , ) ), ], BaseAuthFactorSchema , ) self . register_auth_factor_schema ( MobileAuthFactorSchema , 'mobile' )","title":"create_extension_config_schema()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_login_page","text":"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_login_page ( self , event , config , config_data ): \"\"\" \u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\u9875\u9762Schema\u63cf\u8ff0 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" , } ] self . add_page_form ( config , self . LOGIN , \"\u624b\u673a\u9a8c\u8bc1\u7801\u767b\u5f55\" , items , config_data )","title":"create_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_other_page","text":"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_other_page ( self , event , config , config_data ): \"\"\"\u521b\u5efa\u5176\u4ed6\u9875\u9762\uff08\u672c\u63d2\u4ef6\u65e0\u76f8\u5173\u9875\u9762\uff09 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" pass","title":"create_other_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_password_page","text":"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_password_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u91cd\u7f6e\u5bc6\u7801\u9875\u9762Schema\u63cf\u8ff0 \u901a\u8fc7\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\u65f6\u9700\u63d0\u4f9b\u624b\u673a\u53f7\u7801\u4ee5\u53ca\u5bf9\u5e94\u9a8c\u8bc1\u7801\uff0c\u540c\u65f6\u6b64\u5904\u6dfb\u52a0\u65b0\u5bc6\u7801\u786e\u8ba4\u673a\u5236 \u6ce8\u610f\uff1a\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\u9700\u8981\u542f\u7528\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\u63d2\u4ef6\u4ee5\u63d0\u4f9b\u5b8c\u6574\u652f\u6301 Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" } ] self . add_page_form ( config , self . RESET_PASSWORD , \"\u624b\u673a\u9a8c\u8bc1\u7801\u91cd\u7f6e\u5bc6\u7801\" , items , config_data )","title":"create_password_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.create_register_page","text":"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def create_register_page ( self , event , config , config_data ): \"\"\"\u751f\u6210\u624b\u673a\u9a8c\u8bc1\u7801\u7528\u6237\u6ce8\u518c\u9875\u9762Schema\u63cf\u8ff0 \u56e0\u672c\u63d2\u4ef6\u63d0\u4f9b\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u6b64\u5904\u9700\u7528\u6237\u6307\u5b9a\u8d26\u53f7\u7528\u6237\u540d Args: event (Event): \u4e8b\u4ef6 config (TenantExtensionConfig): \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e \"\"\" items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : \"\u7528\u6237\u540d\" }, { \"type\" : \"text\" , \"name\" : \"mobile\" , \"placeholder\" : \"\u624b\u673a\u53f7\u7801\" , \"append\" : { \"title\" : \"\u53d1\u9001\u9a8c\u8bc1\u7801\" , \"http\" : { \"url\" : self . url_send_sms_code , \"method\" : \"post\" , \"params\" : { \"mobile\" : \"mobile\" , \"areacode\" : \"86\" , }, }, \"delay\" : 60 } }, { \"type\" : \"text\" , \"name\" : \"sms_code\" , \"placeholder\" : \"\u9a8c\u8bc1\u7801\" } ] self . add_page_form ( config , self . REGISTER , \"\u624b\u673a\u9a8c\u8bc1\u7801\u6ce8\u518c\" , items , config_data )","title":"create_register_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def fix_login_page ( self , event , ** kwargs ): pass","title":"fix_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.load","text":"\u52a0\u8f7d\u63d2\u4ef6 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def load ( self ): \"\"\"\u52a0\u8f7d\u63d2\u4ef6 \"\"\" super () . load () self . create_extension_config_schema () self . register_extend_field ( UserMobile , \"mobile\" ) from api.v1.schema.auth import AuthIn from api.v1.schema.user import UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut from api.v1.schema.mine import ProfileSchemaOut self . register_extend_api ( AuthIn , UserCreateIn , UserItemOut , UserUpdateIn , UserListItemOut , mobile = ( Optional [ str ], Field ( title = _ ( \"\u7535\u8bdd\u53f7\u7801\" ))), # areacode=(str,Field(title=_(\"\u533a\u53f7\"))) ) self . register_extend_api ( ProfileSchemaOut , mobile = ( Optional [ str ], Field ( readonly = True )) ) # \u6ce8\u518c\u53d1\u9001\u77ed\u4fe1\u63a5\u53e3 self . url_send_sms_code = self . register_api ( '/config/ {config_id} /send_sms_code/' , 'POST' , self . send_sms_code , tenant_path = True , auth = None , response = SendSMSCodeOut , ) print ( self . url_send_sms_code )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.register","text":"\u6ce8\u518c\u7528\u6237 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @transaction . atomic () def register ( self , event , ** kwargs ): \"\"\" \u6ce8\u518c\u7528\u6237 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) username = data . get ( 'username' ) config = self . get_current_config ( event ) ret , message = self . check_mobile_exists ( mobile , tenant ) if not ret : return self . error ( message ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) ret , message = self . check_username_exists ( username , tenant ) if not ret : return self . error ( message ) user = User ( tenant = tenant ) user . mobile = mobile user . username = username user . save () tenant . users . add ( user ) tenant . save () return user","title":"register()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.reset_password","text":"\u91cd\u7f6e\u5bc6\u7801 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py def reset_password ( self , event , ** kwargs ): \"\"\" \u91cd\u7f6e\u5bc6\u7801 Args: event (Event): \u4e8b\u4ef6 \"\"\" tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) mobile = data . get ( 'mobile' ) sms_code = data . get ( 'sms_code' ) password = data . get ( 'password' ) checkpassword = data . get ( 'checkpassword' ) if password != checkpassword : return self . error ( ErrorCode . PASSWORD_IS_INCONSISTENT ) if not check_sms_code ( tenant , mobile , sms_code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) # user = User.expand_objects.filter(tenant=tenant,mobile=mobile) temp_users = tenant . users . all () user_ids = [] for temp_user in temp_users : user_ids . append ( temp_user . id ) user = User . expand_objects . filter ( is_active = True , is_del = False , id__in = user_ids , mobile = mobile ) if len ( user ) > 1 : logger . error ( f ' { mobile } \u5728\u6570\u636e\u5e93\u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . error ( ErrorCode . CONTACT_MANAGER ) if user : user = user [ 0 ] user . password = make_password ( password ) user . save () return self . success () return self . error ( ErrorCode . MOBILE_NOT_EXISTS_ERROR )","title":"reset_password()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.send_sms_code","text":"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( SendSMSCodeOut ) def send_sms_code ( self , request , tenant_id , config_id : str , data : SendSMSCodeIn ): \"\"\"\u53d1\u9001\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" tenant = request . tenant mobile = data . mobile config = self . get_config_by_id ( config_id ) if not config : return self . error ( ErrorCode . CONFIG_IS_NOT_EXISTS ) if not mobile or mobile == \"mobile\" : return self . error ( ErrorCode . MOBILE_EMPTY ) code = create_sms_code ( tenant , mobile , config . config . get ( 'code_length' , 6 ), config . config . get ( \"expired\" , 10 ) * 60 ) responses = dispatch_event ( Event ( tag = SEND_SMS , tenant = tenant , request = request , data = { \"config_id\" : config . config [ \"sms_config\" ][ \"id\" ], \"mobile\" : data . mobile , \"code\" : code , \"areacode\" : data . areacode , \"username\" : request . user . username if request . user else \"\" }, packages = config . config [ \"sms_config\" ][ \"package\" ] ) ) if not responses : return self . error ( ErrorCode . SMS_EXTENSION_NOT_EXISTS ) useless , ( data , extension ) = responses [ 0 ] if data : return self . success () else : return self . error ( ErrorCode . SMS_SEND_FAILED )","title":"send_sms_code()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.MobileAuthFactorExtension.update_mine_mobile","text":"\u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/__init__.py @operation ( UpdateMineMobileOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_mobile ( self , request , tenant_id : str , data : UpdateMineMobileIn ): \"\"\" \u666e\u901a\u7528\u6237\uff1a\u66f4\u65b0\u624b\u673a\u53f7\u7801 \"\"\" mobile = data . mobile ret , message = self . check_mobile_exists ( mobile , request . tenant ) if not ret : return self . error ( message ) if not check_sms_code ( request . tenant , mobile , data . code ): return self . error ( ErrorCode . SMS_CODE_MISMATCH ) user = request . user user . mobile = data . mobile user . save () return self . success ()","title":"update_mine_mobile()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.sms","text":"","title":"sms"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.sms.check_sms_code","text":"\u9a8c\u8bc1\u77ed\u4fe1\u9a8c\u8bc1\u7801 Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def check_sms_code ( tenant , mobile , code ): \"\"\" \u9a8c\u8bc1\u77ed\u4fe1\u9a8c\u8bc1\u7801 \"\"\" c_code = cache . get ( tenant , gen_sms_code_key ( mobile )) return c_code == code","title":"check_sms_code()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.sms.create_sms_code","text":"\u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u5e76\u5b58\u50a8\u81f3\u7f13\u5b58 Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def create_sms_code ( tenant , phone_number , uth_code_length = 6 , expired : Optional [ int ] = None ): \"\"\"\u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u5e76\u5b58\u50a8\u81f3\u7f13\u5b58 \"\"\" code = gen_sms_code ( uth_code_length ) cache . set ( tenant , gen_sms_code_key ( phone_number ), code , expired = expired ) return code","title":"create_sms_code()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_mobile/#extension_root.com_longgui_auth_factor_mobile.sms.gen_sms_code_key","text":"\u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u7684key Source code in extension_root/com_longgui_auth_factor_mobile/sms.py def gen_sms_code_key ( mobile ): ''' \u751f\u6210\u77ed\u4fe1\u9a8c\u8bc1\u7801\u7684key ''' return f 'sms: { mobile } '","title":"gen_sms_code_key()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/","text":"Password authentication factors # Features # User table extension password field\uff0cAllow users to certify through the user name and password\uff0cregister\u3002 general user\uff1a exist \u201cmine - Certification management\u201c The function of adding a reset password exist \u201cregister\u201d Page implementation user name and password registration exist \u201cLog in\u201d Page implementation user name password login Tenant administrator exist\u201dUser Management - user list\u201cThe function of adding a reset password Configuration guide # Configuration guide # Plug -in lease Certification factor configuration login interface Registration interface Change the password interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the password authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"password\",Fill in related information\uff0cThe configuration is completed Enter from the user avatar menu\u3010Certification management\u3011interface,Choose to change the password tab page Implementation # general user\uff1aregister/Log in\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Register and monitor password certification related events\uff08register/Register\uff09 D->>C: Visit Registration/log in page C->>A: Send Create_LOGIN_PAGE_AUTH_Factor event A->>C: Response event\uff0cAssemble/Login page element C->>D: Rendering/Log in/Reset password page D->>C: Enter the relevant information\uff0cClicked\u3010register/Log in\u3011Button C->>A: Register/Login event A->>C: Response event\uff0cComplete registration/Login process\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf the registration is not completed/Login operation, it prompts an error general user\uff1areset Password\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Towards\u201cmine - Certification management\u201c Add reset password elements to the page\uff0cRegister to reset the password interface to the core D->>C: access\u201cmine - Certification management\u201c Reset the password function in the page\uff0cEnter the new password C->>A: Access reset password interface A->>C: Response interface\uff0cCheck the input parameter\uff0cReturn result C->>D: test result\uff0cAnd prompt whether to complete the change Administrator user\uff1a Reset the user password sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Towards\u201cuser list-Edit user\u201dPage injection password element\uff0cInject password fields into the core user model D->>C: Administrator login\uff0cVisiting User List page\uff0cEdit user password\uff0cClick to save C->>D: Modify the password field value and save to the database Abstract method implementation # load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page Code # extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension ( AuthFactorExtension ) # Source code in extension_root/com_longgui_auth_factor_password/__init__.py class PasswordAuthFactorExtension ( AuthFactorExtension ): def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) def create_tenant_event ( self , event , ** kwargs ): tenant = event . tenant config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"default\" , \"password\" ) def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def reset_user_password ( self , request , tenant_id : str , id : str , data : RestUserPasswordIn ): user = User . active_objects . get ( id = id ) password = data . password user . password = make_password ( password ) user . save () return self . success () def get_user_key_fields ( self , request ): data = [{ 'key' : key , 'name' : value } for key , value in User . key_fields . items ()] return data def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) @transaction . atomic () def register ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) if data . get ( 'checkpassword' , None ) != password : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) config = self . get_current_config ( event ) ret , message = self . check_password_complexity ( password , config ) if not ret : return self . error ( ErrorCode . PASSWORD_STRENGTH_LACK ) register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] if not register_fields : fields = [ 'username' ] if username is None : self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_EMPTY )) else : fields = [ k for k in register_fields if request . POST . get ( k ) is not None ] if not fields : self . auth_failed ( event , data = self . error ( ErrorCode . ALL_USER_FLAG_LACK_FIELD )) for field in fields : user = self . _get_register_user ( tenant , field , request . POST . get ( field )) if user : self . auth_failed ( event , data = self . error ( ErrorCode . FIELD_USER_EXISTS , field = field )) # user = User.objects.create(tenant=tenant) user = User ( tenant = tenant ) for k in fields : if request . POST . get ( k ): setattr ( user , k , request . POST . get ( k )) user . password = make_password ( password ) user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def check_password_complexity ( self , pwd , config ): if not pwd : return False , 'No password provide' if config : regular = config . config . get ( 'regular' ) title = config . config . get ( 'title' ) if re . match ( regular , pwd ): return True , None else : return False , title return True , None def _get_register_user ( self , tenant , field_name , field_value ): user = None if field_name in ( 'username' , 'email' ): user = tenant . users . filter ( is_active = True , is_del = False ) . filter ( ** { field_name : field_value }) . first () else : # \u83b7\u53d6\u521a\u6ce8\u518c\u7684\u7528\u6237 user = User . expand_objects . filter ( ** { field_name : field_value }) . first () return user def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR ) authenticate ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) check_auth_data ( self , event , ** kwargs ) # \u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def check_auth_data ( self , event , ** kwargs ): pass create_auth_manage_page ( self ) # \u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page create_login_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) create_other_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_other_page ( self , event , config , config_data ): pass create_password_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_password_page ( self , event , config , config_data ): pass create_register_page ( self , event , config , config_data ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) fix_login_page ( self , event , ** kwargs ) # \u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def fix_login_page ( self , event , ** kwargs ): pass load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) reset_password ( self , event , ** kwargs ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def reset_password ( self , event , ** kwargs ): pass update_mine_password ( self , request , tenant_id , data ) # \u66f4\u6539\u5bc6\u7801 Source code in extension_root/com_longgui_auth_factor_password/__init__.py @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"Password authentication factors"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#password-authentication-factors","text":"","title":"Password authentication factors"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#features","text":"User table extension password field\uff0cAllow users to certify through the user name and password\uff0cregister\u3002 general user\uff1a exist \u201cmine - Certification management\u201c The function of adding a reset password exist \u201cregister\u201d Page implementation user name and password registration exist \u201cLog in\u201d Page implementation user name password login Tenant administrator exist\u201dUser Management - user list\u201cThe function of adding a reset password","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#configuration-guide","text":"","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#configuration-guide_1","text":"Plug -in lease Certification factor configuration login interface Registration interface Change the password interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the password authentication factor plug -in card in the plug -in lease page\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Authentication\u3011,Click to create button\uff0cType selection\"password\",Fill in related information\uff0cThe configuration is completed Enter from the user avatar menu\u3010Certification management\u3011interface,Choose to change the password tab page","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#implementation","text":"general user\uff1aregister/Log in\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Register and monitor password certification related events\uff08register/Register\uff09 D->>C: Visit Registration/log in page C->>A: Send Create_LOGIN_PAGE_AUTH_Factor event A->>C: Response event\uff0cAssemble/Login page element C->>D: Rendering/Log in/Reset password page D->>C: Enter the relevant information\uff0cClicked\u3010register/Log in\u3011Button C->>A: Register/Login event A->>C: Response event\uff0cComplete registration/Login process\uff0cReturn result C->>D: test result\uff0cSuch as completing registration/Log in the relevant operation to generate token and jump to the desktop\uff0cIf the registration is not completed/Login operation, it prompts an error general user\uff1areset Password\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Towards\u201cmine - Certification management\u201c Add reset password elements to the page\uff0cRegister to reset the password interface to the core D->>C: access\u201cmine - Certification management\u201c Reset the password function in the page\uff0cEnter the new password C->>A: Access reset password interface A->>C: Response interface\uff0cCheck the input parameter\uff0cReturn result C->>D: test result\uff0cAnd prompt whether to complete the change Administrator user\uff1a Reset the user password sequenceDiagram participant D as user participant C as Platform core participant A as Password authentication factors plug -in C->>A: Loading plug -in A->>C: Towards\u201cuser list-Edit user\u201dPage injection password element\uff0cInject password fields into the core user model D->>C: Administrator login\uff0cVisiting User List page\uff0cEdit user password\uff0cClick to save C->>D: Modify the password field value and save to the database","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#abstract-method-implementation","text":"load authenticate register reset_password create_login_page create_register_page create_password_page create_other_page create_auth_manage_page check_auth_data fix_login_page","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension","text":"Source code in extension_root/com_longgui_auth_factor_password/__init__.py class PasswordAuthFactorExtension ( AuthFactorExtension ): def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event ) def create_tenant_event ( self , event , ** kwargs ): tenant = event . tenant config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"default\" , \"password\" ) def check_auth_data ( self , event , ** kwargs ): pass def fix_login_page ( self , event , ** kwargs ): pass @operation ( roles = [ TENANT_ADMIN , PLATFORM_ADMIN ]) def reset_user_password ( self , request , tenant_id : str , id : str , data : RestUserPasswordIn ): user = User . active_objects . get ( id = id ) password = data . password user . password = make_password ( password ) user . save () return self . success () def get_user_key_fields ( self , request ): data = [{ 'key' : key , 'name' : value } for key , value in User . key_fields . items ()] return data def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH )) @transaction . atomic () def register ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) if data . get ( 'checkpassword' , None ) != password : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) config = self . get_current_config ( event ) ret , message = self . check_password_complexity ( password , config ) if not ret : return self . error ( ErrorCode . PASSWORD_STRENGTH_LACK ) register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] if not register_fields : fields = [ 'username' ] if username is None : self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_EMPTY )) else : fields = [ k for k in register_fields if request . POST . get ( k ) is not None ] if not fields : self . auth_failed ( event , data = self . error ( ErrorCode . ALL_USER_FLAG_LACK_FIELD )) for field in fields : user = self . _get_register_user ( tenant , field , request . POST . get ( field )) if user : self . auth_failed ( event , data = self . error ( ErrorCode . FIELD_USER_EXISTS , field = field )) # user = User.objects.create(tenant=tenant) user = User ( tenant = tenant ) for k in fields : if request . POST . get ( k ): setattr ( user , k , request . POST . get ( k )) user . password = make_password ( password ) user . save () tenant . users . add ( user ) tenant . save () return user def reset_password ( self , event , ** kwargs ): pass def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data ) def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data ) def create_password_page ( self , event , config , config_data ): pass def create_other_page ( self , event , config , config_data ): pass def check_password_complexity ( self , pwd , config ): if not pwd : return False , 'No password provide' if config : regular = config . config . get ( 'regular' ) title = config . config . get ( 'title' ) if re . match ( regular , pwd ): return True , None else : return False , title return True , None def _get_register_user ( self , tenant , field_name , field_value ): user = None if field_name in ( 'username' , 'email' ): user = tenant . users . filter ( is_active = True , is_del = False ) . filter ( ** { field_name : field_value }) . first () else : # \u83b7\u53d6\u521a\u6ce8\u518c\u7684\u7528\u6237 user = User . expand_objects . filter ( ** { field_name : field_value }) . first () return user def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"PasswordAuthFactorExtension"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.authenticate","text":"\u62bd\u8c61\u65b9\u6cd5:\u8ba4\u8bc1 Parameters: Name Type Description Default event Event \u8ba4\u8bc1\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def authenticate ( self , event , ** kwargs ): tenant = event . tenant request = event . request data = request . POST or json . load ( request . body ) username = data . get ( 'username' ) password = data . get ( 'password' ) config_id = data . get ( 'config_id' ) config = TenantExtensionConfig . active_objects . get ( id = config_id ) . config login_enabled_field_names = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . get ( 'login_enabled_field_names' )] filter_params = None login_enabled_field_names = login_enabled_field_names or [ \"username\" ] for lefn in login_enabled_field_names : temp = { lefn : username } if filter_params : filter_params = Q ( ** temp ) | filter_params else : filter_params = Q ( ** temp ) users = tenant . users . filter ( is_del = False ) . filter ( filter_params ) if len ( users ) > 1 : logger . error ( f ' { username } \u5728 { login_enabled_field_names } \u4e2d\u5339\u914d\u5230\u591a\u4e2a\u7528\u6237' ) return self . auth_failed ( event , data = self . error ( ErrorCode . CONTACT_MANAGER )) user = users [ 0 ] if users else None if user : # \u5bf9\u8c61\u8f6c\u6362 user = User . expand_objects . filter ( id = user . id ) . first () user_password = user . get ( \"password\" ) if user_password : if check_password ( password , user_password ): user = User . valid_objects . get ( id = user . get ( \"id\" )) return self . auth_success ( user , event ) return self . auth_failed ( event , data = self . error ( ErrorCode . USERNAME_PASSWORD_MISMATCH ))","title":"authenticate()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.check_auth_data","text":"\u54cd\u5e94\u68c0\u67e5\u8ba4\u8bc1\u51ed\u8bc1\u4e8b\u4ef6 Parameters: Name Type Description Default event AUTHRULE_CHECK_AUTH_DATA\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def check_auth_data ( self , event , ** kwargs ): pass","title":"check_auth_data()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_auth_manage_page","text":"\u8ba4\u8bc1\u7ba1\u7406\u9875\u9762\u63cf\u8ff0 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_auth_manage_page ( self ): # \u66f4\u6539\u5bc6\u7801\u9875\u9762 mine_password_path = self . register_api ( \"/mine_password/\" , 'POST' , self . update_mine_password , tenant_path = True , response = UpdateMinePasswordOut , ) name = '\u66f4\u6539\u5bc6\u7801' page = pages . FormPage ( name = name ) page . create_actions ( init_action = actions . ConfirmAction ( path = mine_password_path , ), global_actions = { 'confirm' : actions . ConfirmAction ( path = mine_password_path ), } ) return page","title":"create_auth_manage_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_login_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_login_page ( self , event , config , config_data ): username_placeholder = \"\" for lefn in [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'login_enabled_field_names' ,[])]: if username_placeholder : username_placeholder = ',' + User . key_fields [ lefn ] else : username_placeholder = User . key_fields [ lefn ] items = [ { \"type\" : \"text\" , \"name\" : \"username\" , \"placeholder\" : username_placeholder or '\u7528\u6237\u540d' }, { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, ] self . add_page_form ( config , self . LOGIN , \"\u7528\u6237\u540d\u5bc6\u7801\u767b\u5f55\" , items , config_data )","title":"create_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_other_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u767b\u5f55\u9875\u4e0a\u5176\u4ed6\u64cd\u4f5c\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_other_page ( self , event , config , config_data ): pass","title":"create_other_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_password_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u91cd\u7f6e\u5bc6\u7801\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_password_page ( self , event , config , config_data ): pass","title":"create_password_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.create_register_page","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u7ec4\u88c5\u6ce8\u518c\u9875\u9762\u8868\u5355 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_AUTH_FACTOR\u4e8b\u4ef6 required config TenantExtensionConfig \u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required config_data dict \u8fd0\u884c\u65f6\u914d\u7f6e\u6570\u636e required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def create_register_page ( self , event , config , config_data ): items = [] register_fields = [ item [ \"key\" ] if isinstance ( item , dict ) else item for item in config . config . get ( 'register_enabled_field_names' )] for rf in register_fields : items . append ({ \"type\" : \"text\" , \"name\" : rf , \"placeholder\" : User . key_fields [ rf ] }) items . extend ([ { \"type\" : \"password\" , \"name\" : \"password\" , \"placeholder\" : \"\u5bc6\u7801\" }, { \"type\" : \"password\" , \"name\" : \"checkpassword\" , \"placeholder\" : \"\u5bc6\u7801\u786e\u8ba4\" }, ]) self . add_page_form ( config , self . REGISTER , \"\u7528\u6237\u540d\u5bc6\u7801\u6ce8\u518c\" , items , config_data )","title":"create_register_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.fix_login_page","text":"\u5411login_pages\u586b\u5165\u8ba4\u8bc1\u5143\u7d20 Parameters: Name Type Description Default event AUTHRULE_FIX_LOGIN_PAGE\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def fix_login_page ( self , event , ** kwargs ): pass","title":"fix_login_page()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_factor_password/__init__.py def load ( self ): super () . load () self . register_extend_field ( UserPassword , \"password\" ) self . register_auth_factor_schema ( PasswordAuthFactorSchema , 'password' ) self . register_extend_api ( AuthIn , password = str ) user_key_fields_path = self . register_api ( '/user_key_fields/' , 'GET' , self . get_user_key_fields , response = List [ GetUserKeyFieldItemOut ], ) select_pw_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) select_pw_register_login_fields_page . create_actions ( init_action = actions . DirectAction ( path = user_key_fields_path , method = actions . FrontActionMethod . GET , ), ) self . register_front_pages ( select_pw_login_fields_page ) self . register_front_pages ( select_pw_register_login_fields_page ) # \u79df\u6237\u7ba1\u7406\u5458\uff1a\u7528\u6237\u7ba1\u7406-\u7528\u6237\u5217\u8868-\u91cd\u7f6e\u5bc6\u7801 reset_user_password_path = self . register_api ( '/reset_user_password/ {id} /' , 'POST' , self . reset_user_password , tenant_path = True , response = ResponseSchema , auth = GlobalAuth () ) user_list_page . add_local_actions ( actions . OpenAction ( name = '\u91cd\u7f6e\u5bc6\u7801' , path = reset_user_password_path , method = actions . FrontActionMethod . POST , ) ) # \u521d\u59cb\u5316\u90e8\u5206\u914d\u7f6e\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): config = { 'login_enabled_field_names' : [{ 'key' : 'username' }], 'register_enabled_field_names' : [{ 'key' : 'username' }], 'is_apply' : False , 'regular' : '' , 'title' : '' , } self . create_tenant_config ( tenant , config , \"\u8d26\u5bc6\u767b\u5f55\" , \"password\" ) try : admin_user = User . active_objects . filter ( username = 'admin' ) . first () if admin_user : admin_password = UserPassword . active_objects . filter ( target = admin_user ) if not admin_password : admin_user . password = make_password ( 'admin' ) admin_user . save () except Exception as e : print ( e ) self . listen_event ( CREATE_TENANT , self . create_tenant_event )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.reset_password","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u54cd\u5e94\u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 Parameters: Name Type Description Default event Event \u91cd\u7f6e\u5bc6\u7801\u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_factor_password/__init__.py def reset_password ( self , event , ** kwargs ): pass","title":"reset_password()"},{"location":"System%20Plug%20-In/com_longgui_auth_factor_password/#extension_root.com_longgui_auth_factor_password.PasswordAuthFactorExtension.update_mine_password","text":"\u66f4\u6539\u5bc6\u7801 Source code in extension_root/com_longgui_auth_factor_password/__init__.py @operation ( UpdateMinePasswordOut , roles = [ TENANT_ADMIN , PLATFORM_ADMIN , NORMAL_USER ]) def update_mine_password ( self , request , tenant_id : str , data : UpdateMinePasswordIn ): \"\"\"\u66f4\u6539\u5bc6\u7801\"\"\" user = request . user user_expand = User . expand_objects . get ( id = user . id ) user_password = user_expand [ \"password\" ] if not user_password or check_password ( data . old_password , user_password ): if data . password == data . confirm_password : user . password = make_password ( data . password ) user . save () return self . success () else : return self . error ( ErrorCode . TWO_TIME_PASSWORD_MISMATCH ) return self . error ( ErrorCode . OLD_PASSWORD_ERROR )","title":"update_mine_password()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/","text":"Certification rules: Limited number of certification failure # Features # After the number of failures of the user exceeds the limit of authentication\uff0cExpand the user certification voucher form\uff0cInsert secondary authentication factors\uff0cAnd when the user initiates the certification request again, the subordinate authentication factors are verified precondition # The number of certification failure limit rules plug -in require\uff0cThe main authentication factor is to have login/register/Authentic factors for reset passwords and other main functions\uff0cThe primary authentication factors are mainly authentication factors to supplement the authentication process through authentication rules\uff0cTaking the user name and password authentication factors and graphic verification code authentication factors as an example\u3002 Configuration guide # Plug -in lease Certification rules configuration Login interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the number of authentication times in the plug -in lease page to limit the rules of the plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Certification rules\u3011,Click to create button\uff0cType selection\"retry_times\",Choose the default password authentication factor of the main authentication factors\uff0cSelect the default graphic verification code authentication factors for sub -authentication factors\uff0cThe configuration is completed After the configuration is complete\uff0cWhen the user enters the login interface and repeats three times\uff0cThe page will refresh and enable the graphics verification code Implementation # Certification rules: Limited number of certification failure\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Certification failure number limit rules plugin C->>A: Loading plug -in A->>C: Register and monitor the incident Create_LOGIN_PAGE_RULES,AUTH_FAIL,BEFORE_AUTH D->>C: Visit Registration/Log in/Reset password page C->>A: Send Create_LOGIN_PAGE_Rules event A->>C: Response event,Determine whether to meet the rules,If the rules are satisfied, it will trigger Authrule_FIX_LOGIN_Page event C->>D: Rendering/Log in/Reset password page D->>C: Enter certification voucher\uff0cInitiate certification requests C->>A: Triggering before_Auth event A->>C: Response event,Determine whether to meet the rules\uff0cIf the rules are satisfied, it will trigger Authrule_CHECK_AUTH_Data event\uff0cCheck and return the result C->>A: test result,If the certification is not completed\uff0cTrigger amh_Fail event A->>C: Response event,Record the number of failures and determine whether to refresh the page C->>D: By rendering or refresh the page according to the return result Abstract method implementation # load check_rule Code # extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension ( AuthRuleExtension ) # Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py class AuthRuleRetryTimesExtension ( AuthRuleExtension ): def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None def auth_success ( self , event , ** kwargs ): # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ] . id . hex : host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = 1 cache . set ( event . tenant , key , try_times , expired = config . config . get ( \"expired\" , 30 ) * 60 ) self . clear_refresh_status ( event . tenant , host , config . id . hex ) def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 ) def clear_refresh_status ( self , tenant , host , config_id ): cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 0 ) def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" ) auth_fail ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True before_auth ( self , event , ** kwargs ) # \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6 required Returns: Type Description tuple(bool,dict) \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None check_refresh_status ( self , tenant , host , config_id ) # \u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description bool \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) check_retry_times ( self , tenant , host , config_id , limited = 3 ) # \u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required limited int \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. 3 Returns: Type Description bool \u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited check_rule ( self , event , config ) # \u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) create_extension_config_schema ( self ) # \u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" ) gen_key ( self , host , config_id ) # \u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" gen_refresh_key ( self , host , config_id ) # \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) set_refresh_status ( self , tenant , host , config_id ) # \u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 )","title":"Certification rules: Limited number of certification failure"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#certification-rules-limited-number-of-certification-failure","text":"","title":"Certification rules: Limited number of certification failure"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#features","text":"After the number of failures of the user exceeds the limit of authentication\uff0cExpand the user certification voucher form\uff0cInsert secondary authentication factors\uff0cAnd when the user initiates the certification request again, the subordinate authentication factors are verified","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#precondition","text":"The number of certification failure limit rules plug -in require\uff0cThe main authentication factor is to have login/register/Authentic factors for reset passwords and other main functions\uff0cThe primary authentication factors are mainly authentication factors to supplement the authentication process through authentication rules\uff0cTaking the user name and password authentication factors and graphic verification code authentication factors as an example\u3002","title":"precondition"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#configuration-guide","text":"Plug -in lease Certification rules configuration Login interface Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the number of authentication times in the plug -in lease page to limit the rules of the plug -in card\uff0cClick to rent Enter through the menu bar on the left\u3010Certification management\u3011-> \u3010Certification rules\u3011,Click to create button\uff0cType selection\"retry_times\",Choose the default password authentication factor of the main authentication factors\uff0cSelect the default graphic verification code authentication factors for sub -authentication factors\uff0cThe configuration is completed After the configuration is complete\uff0cWhen the user enters the login interface and repeats three times\uff0cThe page will refresh and enable the graphics verification code","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#implementation","text":"Certification rules: Limited number of certification failure\uff1a sequenceDiagram participant D as user participant C as Platform core participant A as Certification failure number limit rules plugin C->>A: Loading plug -in A->>C: Register and monitor the incident Create_LOGIN_PAGE_RULES,AUTH_FAIL,BEFORE_AUTH D->>C: Visit Registration/Log in/Reset password page C->>A: Send Create_LOGIN_PAGE_Rules event A->>C: Response event,Determine whether to meet the rules,If the rules are satisfied, it will trigger Authrule_FIX_LOGIN_Page event C->>D: Rendering/Log in/Reset password page D->>C: Enter certification voucher\uff0cInitiate certification requests C->>A: Triggering before_Auth event A->>C: Response event,Determine whether to meet the rules\uff0cIf the rules are satisfied, it will trigger Authrule_CHECK_AUTH_Data event\uff0cCheck and return the result C->>A: test result,If the certification is not completed\uff0cTrigger amh_Fail event A->>C: Response event,Record the number of failures and determine whether to refresh the page C->>D: By rendering or refresh the page according to the return result","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#abstract-method-implementation","text":"load check_rule","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension","text":"Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py class AuthRuleRetryTimesExtension ( AuthRuleExtension ): def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" ) def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None def auth_success ( self , event , ** kwargs ): # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ] . id . hex : host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = 1 cache . set ( event . tenant , key , try_times , expired = config . config . get ( \"expired\" , 30 ) * 60 ) self . clear_refresh_status ( event . tenant , host , config . id . hex ) def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) ) def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 ) def clear_refresh_status ( self , tenant , host , config_id ): cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 0 ) def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id ))) def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \" def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \" def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" )","title":"AuthRuleRetryTimesExtension"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.auth_fail","text":"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Parameters: Name Type Description Default event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def auth_fail ( self , event , ** kwargs ): \"\"\"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u5bf9\u5e94IP\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570 Args: event : \u4e8b\u4ef6 \"\"\" data = event . data [ \"data\" ] # \u68c0\u67e5\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u914d\u7f6e for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) key = self . gen_key ( host , config . id . hex ) try_times = int ( cache . get ( event . tenant , key ) or 1 ) cache . set ( event . tenant , key , try_times + 1 , expired = config . config . get ( \"expired\" , 30 ) * 60 ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )) and not self . check_refresh_status ( event . tenant , host , config . id . hex ): data . update ( self . error ( ErrorCode . AUTH_FAIL_TIMES_OVER_LIMITED )) self . set_refresh_status ( event . tenant , host , config . id . hex ) data [ \"refresh\" ] = True","title":"auth_fail()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.before_auth","text":"\u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Parameters: Name Type Description Default event \u4e8b\u4ef6 required Returns: Type Description tuple(bool,dict) \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def before_auth ( self , event , ** kwargs ): \"\"\" \u54cd\u5e94\u4e8b\u4ef6\uff1a\u8ba4\u8bc1\u4e4b\u524d, \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u6761\u4ef6\uff0c\u5982\u6ee1\u8db3\u5219\u89e6\u53d1\u4e8b\u4ef6\u5e76\u68c0\u67e5\u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c Args: event: \u4e8b\u4ef6 Returns: tuple(bool,dict): \u6b21\u7ea7\u8ba4\u8bc1\u56e0\u7d20\u6821\u9a8c\u7ed3\u679c \"\"\" for config in self . get_tenant_configs ( event . tenant ): if uuid . UUID ( config . config [ \"main_auth_factor\" ][ \"id\" ]) . hex == event . data [ \"auth_factor_config_id\" ]: host = get_remote_addr ( event . request ) if self . check_retry_times ( event . tenant , host , config . id . hex , config . config . get ( \"try_times\" , 0 )): # \u5224\u5b9a\u9700\u8981\u9a8c\u8bc1 responses = dispatch_event ( Event ( core_event . AUTHRULE_CHECK_AUTH_DATA , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ] ) ) for useless ,( response , useless ) in responses : if not response : continue result , data = response if not result : return response return True , None","title":"before_auth()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_refresh_status","text":"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description bool \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_refresh_status ( self , tenant , host , config_id ): \"\"\"\u6821\u9a8c\u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: bool: \u662f\u5426\u9700\u8981\u5237\u65b0\u9875\u9762 \"\"\" return bool ( cache . get ( tenant , self . gen_refresh_key ( host , config_id )))","title":"check_refresh_status()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_retry_times","text":"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required limited int \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. 3 Returns: Type Description bool \u6821\u9a8c\u7ed3\u679c Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_retry_times ( self , tenant , host , config_id , limited = 3 ): \"\"\"\u6821\u9a8c\u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u662f\u5426\u8d85\u51fa\u9650\u5236 Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID limited (int, optional): \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\u9650\u5236. Defaults to 3. Returns: bool: \u6821\u9a8c\u7ed3\u679c \"\"\" key = self . gen_key ( host , config_id ) retry_times = int ( cache . get ( tenant , key ) or limited ) return retry_times > limited","title":"check_retry_times()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.check_rule","text":"\u62bd\u8c61\u65b9\u6cd5\uff1a\u6821\u9a8c\u89c4\u5219 Parameters: Name Type Description Default event Event CREATE_LOGIN_PAGE_RULES\u4e8b\u4ef6 required config TenantExtensionConfig \u8fd0\u884c\u65f6\u914d\u7f6e required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def check_rule ( self , event , config ): login_pages = event . data if self . check_retry_times ( event . tenant , get_remote_addr ( event . request ), config . id . hex , config . config . get ( \"try_times\" , 0 )): dispatch_event ( Event ( core_event . AUTHRULE_FIX_LOGIN_PAGE , tenant = event . tenant , request = event . request , packages = [ config . config [ \"second_auth_factor\" ][ \"package\" ] ], data = { \"login_pages\" : login_pages , \"main_auth_factor_id\" : config . config [ \"main_auth_factor\" ][ \"id\" ], \"config_id\" : config . config [ \"second_auth_factor\" ][ \"id\" ] } ) )","title":"check_rule()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.create_extension_config_schema","text":"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def create_extension_config_schema ( self ): \"\"\"\u521b\u5efa\u63d2\u4ef6\u8fd0\u884c\u65f6schema \"\"\" main_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u4e3b\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( main_auth_factor_page ) main_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) second_auth_factor_page = pages . TablePage ( select = True , name = _ ( \"\u9009\u62e9\u6b21\u8ba4\u8bc1\u56e0\u7d20\" )) self . register_front_pages ( second_auth_factor_page ) second_auth_factor_page . create_actions ( init_action = actions . DirectAction ( path = '/api/v1/tenants/ {tenant_id} /config_select/?extension__type=auth_factor' , method = actions . FrontActionMethod . GET ) ) AuthRuleRetryTimesConfigSchema = create_extension_schema ( 'AuthRuleRetryTimesConfigSchema' , __file__ , [ ( 'try_times' , int , Field ( title = _ ( 'try_times' , '\u9650\u5236\u91cd\u8bd5\u6b21\u6570' ), default = 3 ) ), ( 'main_auth_factor' , MainAuthRuleSchema , Field ( title = _ ( 'main_auth_factor' , '\u4e3b\u8ba4\u8bc1\u56e0\u7d20' ), page = main_auth_factor_page . tag ) ), ( 'second_auth_factor' , SecondAuthFactorConfigSchema , Field ( title = _ ( 'second_auth_factor' , '\u6b21\u8ba4\u8bc1\u56e0\u7d20' ), page = second_auth_factor_page . tag ) ), ( 'expired' , Optional [ int ], Field ( title = _ ( 'expired' , '\u6709\u6548\u671f/\u5206\u949f' ), default = 30 , ) ), ], base_schema = BaseAuthRuleSchema ) self . register_auth_rule_schema ( AuthRuleRetryTimesConfigSchema , \"retry_times\" )","title":"create_extension_config_schema()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.gen_key","text":"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_key ( self , host : str , config_id : str ): \"\"\"\u751f\u6210\u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684KEY \"\"\" return f \" { self . package } _cache_auth_retry_times_ { host } _ { config_id } \"","title":"gen_key()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.gen_refresh_key","text":"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Returns: Type Description str \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def gen_refresh_key ( self , host : str , config_id : str ): \"\"\"\u9875\u9762\u5237\u65b0\u6807\u8bc6KEY Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID Returns: str: \u9875\u9762\u5237\u65b0\u6807\u8bc6KEY \"\"\" return f \" { self . package } _cache_auth_refresh_ { host } _ { config_id } \"","title":"gen_refresh_key()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def load ( self ): super () . load () self . create_extension_config_schema () self . listen_event ( AUTH_FAIL , self . auth_fail ) self . listen_event ( BEFORE_AUTH , self . before_auth ) self . listen_event ( AUTH_SUCCESS , self . auth_success ) # \u914d\u7f6e\u521d\u59cb\u6570\u636e tenant = Tenant . platform_tenant () if not self . get_tenant_configs ( tenant ): main_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.password\" ) . first (), type = \"password\" ) . first () second_auth_factor = TenantExtensionConfig . active_objects . filter ( tenant = tenant , extension = Extension . active_objects . filter ( package = \"com.longgui.auth.factor.authcode\" ) . first (), type = \"authcode\" ) . first () if main_auth_factor and second_auth_factor : # \u5982\u4e3b\u8ba4\u8bc1\u56e0\u7d20\u548c\u6b64\u8ba4\u8bc1\u56e0\u7d20\u90fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b \u521b\u5efa\u8ba4\u8bc1\u89c4\u5219 config = { \"main_auth_factor\" : { \"id\" : main_auth_factor . id . hex , \"name\" : main_auth_factor . name , \"package\" : main_auth_factor . extension . package }, \"second_auth_factor\" : { \"id\" : second_auth_factor . id . hex , \"name\" : second_auth_factor . name , \"package\" : second_auth_factor . extension . package }, \"try_times\" : 3 } self . create_tenant_config ( tenant , config , \"\u8ba4\u8bc1\u89c4\u5219:\u767b\u5f55\u5931\u8d25\u4e09\u6b21\u542f\u7528\u56fe\u5f62\u9a8c\u8bc1\u7801\" , \"retry_times\" )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_auth_rule_retry_times/#extension_root.com_longgui_auth_rule_retry_times.AuthRuleRetryTimesExtension.set_refresh_status","text":"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Parameters: Name Type Description Default host str \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 required config_id str \u63d2\u4ef6\u8fd0\u884c\u65f6ID required Source code in extension_root/com_longgui_auth_rule_retry_times/__init__.py def set_refresh_status ( self , tenant , host , config_id ): \"\"\"\u8bbe\u7f6e\u767b\u9646\u9875\u9762\u5237\u65b0tag Args: host (str): \u5ba2\u6237\u4e00\u7aefIP\u5730\u5740 config_id (str): \u63d2\u4ef6\u8fd0\u884c\u65f6ID \"\"\" cache . set ( tenant , self . gen_refresh_key ( host , config_id ), 1 )","title":"set_refresh_status()"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/","text":"Dippling of plug -in # Features # After the application is created through this plug -in\uff0cInstall the corresponding chrome plug -in\uff0cThe accounts and passwords that can be used to log in to the application are stored in the chrome plug -in\uff0cClick the application icon\uff0cYou can choose to log in\uff0c Automatic jump to the login URL of the application\uff0cAnd automatically fill in the application login account number and password\uff0cImplement automatic login\uff0cAvoid entering the account password each time\u3002 in addition\uff0cYou can add it in the chrome plug -in\u3001Revise\u3001Delete account passwords and other management operations\u3002 The account storage method can choose browser and database storage\uff0cIf it is database storage\uff0cSupport new additional accounts in the management background\u3001Revise\u3001Delete and other management operations Configuration accounts filling plug -in # Select storage location Configuration of accounts and filming applications # Create proxy URL application Configuration application protocol Click the application icon Install the chrome plug -in Log in to enter the account password for the first time Jump to the application login page Hint Automatic login login open, After the application login page automatically fills in the account password\uff0cAutomatically click the login button, Otherwise, do not automatically click the login button If you haven't installed the chrome plug -in\uff0cYou need to install the chrome plug -in first\uff0cAfter the installation is complete\uff0crefresh page Click to add\uff0cWill automatically jump to the application login page Use chrome plug -in management account # Add application account Re -click the application icon Practitioner administrator management account (database storage method) # Check the account information of all users Add user account information Edit user account information (if the password is filled in\uff0cIt means resetting) Delete user account information User's own management account (database storage method) # View account information Add account information Edit account information (if the password is filled in\uff0cIt means resetting) Delete account information","title":"Dippling of plug -in"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#dippling-of-plug-in","text":"","title":"Dippling of plug -in"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#features","text":"After the application is created through this plug -in\uff0cInstall the corresponding chrome plug -in\uff0cThe accounts and passwords that can be used to log in to the application are stored in the chrome plug -in\uff0cClick the application icon\uff0cYou can choose to log in\uff0c Automatic jump to the login URL of the application\uff0cAnd automatically fill in the application login account number and password\uff0cImplement automatic login\uff0cAvoid entering the account password each time\u3002 in addition\uff0cYou can add it in the chrome plug -in\u3001Revise\u3001Delete account passwords and other management operations\u3002 The account storage method can choose browser and database storage\uff0cIf it is database storage\uff0cSupport new additional accounts in the management background\u3001Revise\u3001Delete and other management operations","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#configuration-accounts-filling-plug-in","text":"Select storage location","title":"Configuration accounts filling plug -in"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#configuration-of-accounts-and-filming-applications","text":"Create proxy URL application Configuration application protocol Click the application icon Install the chrome plug -in Log in to enter the account password for the first time Jump to the application login page Hint Automatic login login open, After the application login page automatically fills in the account password\uff0cAutomatically click the login button, Otherwise, do not automatically click the login button If you haven't installed the chrome plug -in\uff0cYou need to install the chrome plug -in first\uff0cAfter the installation is complete\uff0crefresh page Click to add\uff0cWill automatically jump to the application login page","title":"Configuration of accounts and filming applications"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#use-chrome-plug-in-management-account","text":"Add application account Re -click the application icon","title":"Use chrome plug -in management account"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#practitioner-administrator-management-account-database-storage-method","text":"Check the account information of all users Add user account information Edit user account information (if the password is filled in\uff0cIt means resetting) Delete user account information","title":"Practitioner administrator management account (database storage method)"},{"location":"System%20Plug%20-In/com_longgui_auto_form_fill/#users-own-management-account-database-storage-method","text":"View account information Add account information Edit account information (if the password is filled in\uff0cIt means resetting) Delete account information","title":"User's own management account (database storage method)"},{"location":"System%20Plug%20-In/com_longgui_case/","text":"Sample plugin # Introduce the plug -in function here, etc......","title":"Sample plugin"},{"location":"System%20Plug%20-In/com_longgui_case/#sample-plugin","text":"Introduce the plug -in function here, etc......","title":"Sample plugin"},{"location":"System%20Plug%20-In/com_longgui_case/docs/English/","text":"this is an empty file just for example","title":"Index"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/","text":"Github Third -party login plug -in # Features # After configured GitHub plug -in\uff0cYou can click the github icon on the Arkid login page\uff0cJump to GitHub website to complete OAATH2 certification\uff0cAnd bind to the user of Arkid Create GitHub applications # Open the setting page to create GitHub developers Click to create\uff0cFill in the form Generate client Secret Save client Id and client Secret name\uff0cThe homepage URL and callback URL can be filled in freely\uff0cThe steps will be changed to ARKID automatic URL after the step back the URL\u3002 Create Arkid third -party login configuration,Get the recovery URL # Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL Update github application callback URL\uff0cClick the login button # Re -set up GitHub application callback URL Click GitHub icon on the login page Click the certification button Implementation # Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.external_idp.ExternalIdpExtension Unified binding and unbinding instructions # See [three -party account binding] (../../%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/) Abstract method implementation: # get_img_url get_authorize_url get_ext_token_by_code get_user_info_by_ext_token get_arkid_user Code # extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension ( ExternalIdpExtension ) # Source code in extension_root/com_longgui_external_idp_github/__init__.py class ExternalIdpGithubExtension ( ExternalIdpExtension ): def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema ) def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" ) bind_arkid_user ( self , ext_id , user , data ) # Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 required Source code in extension_root/com_longgui_external_idp_github/__init__.py def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () get_arkid_user ( self , ext_id ) # Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None get_auth_code_from_request ( self , request ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code get_authorize_url ( self , config , callback_url , next_url ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required redirect_uri str \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 required Returns: Type Description str \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url get_ext_token ( self , config , code ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required Returns: Type Description str \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] get_ext_user_info ( self , config , code , token ) # Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required token str Github\u8fd4\u56de\u7684access_token required Returns: Type Description tuple \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response get_img_and_redirect_url ( self , config ) # \u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" ) get_img_url ( self ) # \u8fd4\u56deGithub\u7684\u56fe\u6807URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_external_idp_github/__init__.py def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema )","title":"Github Third -party login plug -in"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#github-third-party-login-plug-in","text":"","title":"Github Third -party login plug -in"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#features","text":"After configured GitHub plug -in\uff0cYou can click the github icon on the Arkid login page\uff0cJump to GitHub website to complete OAATH2 certification\uff0cAnd bind to the user of Arkid","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#create-github-applications","text":"Open the setting page to create GitHub developers Click to create\uff0cFill in the form Generate client Secret Save client Id and client Secret name\uff0cThe homepage URL and callback URL can be filled in freely\uff0cThe steps will be changed to ARKID automatic URL after the step back the URL\u3002","title":"Create GitHub applications"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#create-arkid-third-party-login-configurationget-the-recovery-url","text":"Open the third -party certification page Fill in the form parameter\uff0c Click to create Click the editor button\uff0cGet ARKID callback URL","title":"Create Arkid third -party login configuration,Get the recovery URL"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#update-github-application-callback-urlclick-the-login-button","text":"Re -set up GitHub application callback URL Click GitHub icon on the login page Click the certification button","title":"Update github application callback URL\uff0cClick the login button"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#implementation","text":"Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.external_idp.ExternalIdpExtension","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#unified-binding-and-unbinding-instructions","text":"See [three -party account binding] (../../%20%20%20UserGuide/User Manual/%20 ordinary users/Certification management/Three -party account binding/)","title":"Unified binding and unbinding instructions"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#abstract-method-implementation","text":"get_img_url get_authorize_url get_ext_token_by_code get_user_info_by_ext_token get_arkid_user","title":"Abstract method implementation:"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension","text":"Source code in extension_root/com_longgui_external_idp_github/__init__.py class ExternalIdpGithubExtension ( ExternalIdpExtension ): def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema ) def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ] def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save () def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" )","title":"ExternalIdpGithubExtension"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.bind_arkid_user","text":"Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required user arkid.core.models.User \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 required Source code in extension_root/com_longgui_external_idp_github/__init__.py def bind_arkid_user ( self , ext_id , user , data ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 user (arkid.core.models.User): \u7528\u4e8e\u7ed1\u5b9a\u7684ArkID\u7528\u6237 data (dict) request\u6570\u636e \"\"\" user . github_user_id = ext_id user . github_nickname = data . get ( 'ext_name' , '' ) user . github_avatar = data . get ( 'ext_icon' , '' ) user . save ()","title":"bind_arkid_user()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_arkid_user","text":"Parameters: Name Type Description Default ext_id str \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description arkid.core.models.User \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_arkid_user ( self , ext_id ): \"\"\" Args: ext_id (str): \u4eceGithub\u7528\u6237\u4fe1\u606f\u63a5\u53e3\u83b7\u53d6\u7684\u7528\u6237\u6807\u8bc6 Returns: arkid.core.models.User: \u8fd4\u56deext_id\u7ed1\u5b9a\u7684ArkID\u7528\u6237 \"\"\" github_user = GithubUser . valid_objects . filter ( github_user_id = ext_id ) . first () if github_user : return github_user . target else : return None","title":"get_arkid_user()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_auth_code_from_request","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HTTPRequest \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u8fd4\u56de\u7684\u7528\u6237\u6807\u8bc6 required Returns: Type Description str \u6388\u6743\u7801 Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_auth_code_from_request ( self , request ): code = request . GET . get ( \"code\" , '' ) return code","title":"get_auth_code_from_request()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_authorize_url","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required redirect_uri str \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 required Returns: Type Description str \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_authorize_url ( self , config , callback_url , next_url ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e redirect_uri (str): \u5728ArkID\u4e2d\u521b\u5efaGithub\u767b\u5f55\u914d\u7f6e\u540e\u8fd4\u56de\u7684\u56de\u8c03\u5730\u5740 Returns: str: \u8fd4\u56de\u7528\u4e8e\u5411Github\u53d1\u8d77\u8ba4\u8bc1\u7684URL \"\"\" redirect_uri = \" {}{} \" . format ( callback_url , next_url ) redirect_uri = quote ( redirect_uri ) url = \" {} ?client_id= {} &redirect_uri= {} \" . format ( AUTHORIZE_URL , config . config . get ( \"client_id\" ), redirect_uri , ) return url","title":"get_authorize_url()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_ext_token","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required Returns: Type Description str \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_token ( self , config , code ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 Returns: str: \u8fd4\u56deGithub\u8fd4\u56de\u7684access_token \"\"\" response = requests . post ( GET_TOKEN_URL , params = { \"code\" : code , \"client_id\" : config . config . get ( \"client_id\" ), \"client_secret\" : config . config . get ( \"client_secret\" ), \"grant_type\" : \"authorization_code\" , }, ) . __getattribute__ ( \"_content\" ) result = dict ( [( k , v [ 0 ]) for k , v in parse_qs ( response . decode ()) . items ()] ) # \u5c06\u54cd\u5e94\u4fe1\u606f\u8f6c\u6362\u4e3a\u5b57\u5178 return result [ \"access_token\" ]","title":"get_ext_token()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_ext_user_info","text":"Parameters: Name Type Description Default config arkid.core.extension.TenantExtensionConfig \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e required code str Github\u8fd4\u56de\u7684\u6388\u6743\u7801 required token str Github\u8fd4\u56de\u7684access_token required Returns: Type Description tuple \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_ext_user_info ( self , config , code , token ): \"\"\" Args: config (arkid.core.extension.TenantExtensionConfig): \u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u63d2\u4ef6\u8fd0\u884c\u65f6\u914d\u7f6e code (str): Github\u8fd4\u56de\u7684\u6388\u6743\u7801 token (str): Github\u8fd4\u56de\u7684access_token Returns: tuple: \u8fd4\u56deGithub\u4e2d\u7528\u6237\u4fe1\u606f\u4e2d\u7684id\uff0c login\uff0cavatar_url\u548c\u6240\u6709\u7528\u6237\u4fe1\u606f \"\"\" headers = { \"Authorization\" : \"token \" + token } response = requests . get ( GET_USERINFO_URL , params = { \"access_token\" : token }, headers = headers , ) . json () return response [ \"id\" ], response [ \"login\" ], response [ \"avatar_url\" ], response","title":"get_ext_user_info()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_img_and_redirect_url","text":"\u8fd4\u56de\u524d\u7aef\u6e32\u67d3\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6309\u94ae \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default config arkid.extension.models.TenantExtensionConfig \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u63d0\u4f9b\u7684Client_ID, required Returns: Type Description tuple \u8fd4\u56de\u56fe\u7247url\u548c\u8df3\u8f6c\u5730\u5740('image_url', 'redirect_url') Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_and_redirect_url ( self , config ): return config . config . get ( \"img_url\" , \"\" ), config . config . get ( \"login_url\" , \"\" )","title":"get_img_and_redirect_url()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.get_img_url","text":"\u8fd4\u56deGithub\u7684\u56fe\u6807URL Source code in extension_root/com_longgui_external_idp_github/__init__.py def get_img_url ( self ): \"\"\" \u8fd4\u56deGithub\u7684\u56fe\u6807URL \"\"\" return IMG_URL","title":"get_img_url()"},{"location":"System%20Plug%20-In/com_longgui_external_idp_github/#extension_root.com_longgui_external_idp_github.ExternalIdpGithubExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_external_idp_github/__init__.py def load ( self ): super () . load () self . register_extend_field ( GithubUser , \"github_user_id\" ) self . register_extend_field ( GithubUser , \"github_nickname\" ) self . register_extend_field ( GithubUser , \"github_avatar\" ) self . register_external_idp_schema ( \"github\" , GithubConfigSchema )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/","text":"Source code # extension_root.com_longgui_impower_rule.ImpowerRuleExtension ( ImpowerRuleBaseExtension ) # Source code in extension_root/com_longgui_impower_rule/__init__.py class ImpowerRuleExtension ( ImpowerRuleBaseExtension ): def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page ) def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids get_auth_result ( self , event , ** kwargs ) # \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c Source code in extension_root/com_longgui_impower_rule/__init__.py def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_impower_rule/__init__.py def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) load_front_page ( self ) # \u6ce8\u518c\u524d\u7aef\u9875\u9762 Source code in extension_root/com_longgui_impower_rule/__init__.py def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page )","title":"Source code"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/#source-code","text":"","title":"Source code"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension","text":"Source code in extension_root/com_longgui_impower_rule/__init__.py class ImpowerRuleExtension ( ImpowerRuleBaseExtension ): def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' ) def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page ) def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids","title":"ImpowerRuleExtension"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.get_auth_result","text":"\u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c Source code in extension_root/com_longgui_impower_rule/__init__.py def get_auth_result ( self , event , ** kwargs ): ''' \u83b7\u53d6\u6743\u9650\u9274\u5b9a\u7ed3\u679c ''' data = event . data tenant = event . tenant user = data . get ( 'user' ) config = data . get ( 'config' ) # \u5904\u7406\u6388\u6743\u903b\u8f91 permission_info = {} # \u53d6\u5f97\u4e86\u6240\u6709\u914d\u7f6e config_info = config . config config_matchfield = config_info . get ( 'matchfield' ) config_matchsymbol = config_info . get ( 'matchsymbol' ) config_matchvalue = config_info . get ( 'matchvalue' ) config_app = config_info . get ( 'app' ) config_app_id = config_app . get ( 'id' ) config_permissions = config_info . get ( 'permissions' ) # \u7528\u6237\u6269\u5c55\u5b57\u6bb5\u7528\u4e8e\u7b5b\u9009 user = User . expand_objects . filter ( id = user . id ) . first () # \u9009\u62e9\u7684\u5b57\u6bb5\u503c select_value = user . get ( config_matchfield . get ( 'id' )) # \u53d6\u5f97\u8fd4\u56de\u503c sort_ids = [] if config_matchsymbol == '\u7b49\u4e8e' and config_matchvalue == select_value : for config_permission in config_permissions : sort_ids . append ( config_permission . get ( 'sort_id' )) return sort_ids","title":"get_auth_result()"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_impower_rule/__init__.py def load ( self ): super () . load () # \u6ce8\u518c\u524d\u7aef\u9875\u9762 self . load_front_page () # \u6ce8\u518cschema self . register_impower_rule_schema ( ImpowerRuleCreateIn , 'DefaultImpowerRule' )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/#extension_root.com_longgui_impower_rule.ImpowerRuleExtension.load_front_page","text":"\u6ce8\u518c\u524d\u7aef\u9875\u9762 Source code in extension_root/com_longgui_impower_rule/__init__.py def load_front_page ( self ): ''' \u6ce8\u518c\u524d\u7aef\u9875\u9762 ''' self . register_front_pages ( user_field_page ) self . register_front_pages ( app_page ) self . register_front_pages ( app_permission_page )","title":"load_front_page()"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/DefaultImpowerRule/","text":"DefaultImpowerRule # This is an authorized rule based on user fields Add default authorization rules # Open the list of authorization rules Newly -built authorization rules View authorization rules Delete authorization rules","title":"DefaultImpowerRule"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/DefaultImpowerRule/#defaultimpowerrule","text":"This is an authorized rule based on user fields","title":"DefaultImpowerRule"},{"location":"System%20Plug%20-In/com_longgui_impower_rule/DefaultImpowerRule/#add-default-authorization-rules","text":"Open the list of authorization rules Newly -built authorization rules View authorization rules Delete authorization rules","title":"Add default authorization rules"},{"location":"System%20Plug%20-In/com_longgui_language_zh/","text":"Multi -language package plugin\uff1aSimplified Chinese # Configuration guide # Plug -in lease Language package data update Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind a Chinese language package plug -in card in the plug -in lease page\uff0cClick to rent The system provides language package data online update capabilities\uff0cPriority User update language package data > Language package plug -in data > System default language translation Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Language Package Management\u3011\uff0cEnter the language package page page Click on the editor button on the right side of the language bag\uff0cEnter the language package data details page Click the new button in the upper right corner\uff0cEnter the new translation page\uff0cThe original phrase here refers to the phrase to be translated in the system\uff0cTranslation sentences are translated words Abstract method implementation # language_type language_data Code # extension_root.com_longgui_language_zh.TranslationZhExtension ( LanguageExtension ) # Source code in extension_root/com_longgui_language_zh/__init__.py class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" } language_data ( self ) # \u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in extension_root/com_longgui_language_zh/__init__.py def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" } language_type ( self ) # \u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in extension_root/com_longgui_language_zh/__init__.py def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" )","title":"Multi -language package plugin\uff1aSimplified Chinese"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#multi-language-package-pluginsimplified-chinese","text":"","title":"Multi -language package plugin\uff1aSimplified Chinese"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#configuration-guide","text":"Plug -in lease Language package data update Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind a Chinese language package plug -in card in the plug -in lease page\uff0cClick to rent The system provides language package data online update capabilities\uff0cPriority User update language package data > Language package plug -in data > System default language translation Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Language Package Management\u3011\uff0cEnter the language package page page Click on the editor button on the right side of the language bag\uff0cEnter the language package data details page Click the new button in the upper right corner\uff0cEnter the new translation page\uff0cThe original phrase here refers to the phrase to be translated in the system\uff0cTranslation sentences are translated words","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#abstract-method-implementation","text":"language_type language_data","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#extension_root.com_longgui_language_zh.TranslationZhExtension","text":"Source code in extension_root/com_longgui_language_zh/__init__.py class TranslationZhExtension ( LanguageExtension ): def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" ) def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" }","title":"TranslationZhExtension"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#extension_root.com_longgui_language_zh.TranslationZhExtension.language_data","text":"\u7ffb\u8bd1\u6570\u636e Returns: Type Description dict \u7ffb\u8bd1\u6570\u636e\u5b57\u5178 Source code in extension_root/com_longgui_language_zh/__init__.py def language_data ( self ) -> dict : return { \"data\" : \"\u6570\u636e\" }","title":"language_data()"},{"location":"System%20Plug%20-In/com_longgui_language_zh/#extension_root.com_longgui_language_zh.TranslationZhExtension.language_type","text":"\u8bed\u8a00\u7c7b\u578b Returns: Type Description str \u8bed\u8a00\u7c7b\u578b\u540d\u79f0 \u9ed8\u8ba4\u4e3a\u7b80\u4f53\u4e2d\u6587 Source code in extension_root/com_longgui_language_zh/__init__.py def language_type ( self ) -> str : return _ ( \"\u7b80\u4f53\u4e2d\u6587\" )","title":"language_type()"},{"location":"System%20Plug%20-In/com_longgui_menu/","text":"ArkID Menu management plugin # Features # Can pass through this plug -in\uff0cAdjust Arkid's own menu\uff0cIncluding the display and hiding of existing menus Steps # closure, Application management menu refresh page\uff0cView effect Open, Application management menu refresh page\uff0cView effect Code # extension_root.com_longgui_menu.MenuExtension ( Extension ) # Source code in extension_root/com_longgui_menu/__init__.py class MenuExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extension_api () self . register_pages () self . listen_event ( core_event . EXCLUDE_PATHS , self . exclude_paths ) def register_extension_api ( self ): self . menu_path = self . register_api ( '/menus/' , 'GET' , self . list_menus , response = List [ MenuItemOut ], tenant_path = False ) self . toogle_menu_activate_path = self . register_api ( '/menu/ {id} /toggle_activate/' , 'GET' , self . toggle_menu_active , tenant_path = False ) def exclude_paths ( self , event , ** kwargs ): menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) return menu_path def register_pages ( self ): from . import page as menu_page from api.v1.pages.platform_admin import router self . register_front_pages ([ menu_page . page , ]) self . register_front_routers ( menu_page . router , router ) @operation ( MenuListOut , roles = [ PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_menus ( self , request ): \"\"\" \u83b7\u53d6\u83dc\u5355 \"\"\" # \u76ee\u524d\u53ea\u8003\u86512\u7ea7\u83dc\u5355\u60c5\u51b5 global_routers = routers . _get_global_routers () menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) items = [] for global_router in global_routers : items . append ({ 'id' : global_router . get ( 'path' , '' ) if global_router . get ( 'path' , '' ) else 'empty' , 'name' : global_router . get ( 'name' , '' ), 'path' : global_router . get ( 'path' , '' ), 'status' : False if global_router . get ( 'path' , '' ) in menu_path else True }) item_children = global_router . get ( 'children' , []) for item_child in item_children : items . append ({ 'id' : item_child . get ( 'path' , '' ) if item_child . get ( 'path' , '' ) else 'empty' , 'name' : item_child . get ( 'name' , '' ), 'path' : ' {} / {} ' . format ( global_router . get ( 'path' , '' ), item_child . get ( 'path' , '' )), 'status' : False if item_child . get ( 'path' , '' ) in menu_path else True }) return items @operation ( roles = [ PLATFORM_ADMIN ]) def toggle_menu_active ( self , request , id : str ): if id == 'empty' : id = '' menu = Menu . valid_objects . filter ( path = id ) . first () if menu : menu . delete () else : menu = Menu () menu . path = id menu . save () return self . success () list_menus ( self , request ) # \u83b7\u53d6\u83dc\u5355 Source code in extension_root/com_longgui_menu/__init__.py @operation ( MenuListOut , roles = [ PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_menus ( self , request ): \"\"\" \u83b7\u53d6\u83dc\u5355 \"\"\" # \u76ee\u524d\u53ea\u8003\u86512\u7ea7\u83dc\u5355\u60c5\u51b5 global_routers = routers . _get_global_routers () menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) items = [] for global_router in global_routers : items . append ({ 'id' : global_router . get ( 'path' , '' ) if global_router . get ( 'path' , '' ) else 'empty' , 'name' : global_router . get ( 'name' , '' ), 'path' : global_router . get ( 'path' , '' ), 'status' : False if global_router . get ( 'path' , '' ) in menu_path else True }) item_children = global_router . get ( 'children' , []) for item_child in item_children : items . append ({ 'id' : item_child . get ( 'path' , '' ) if item_child . get ( 'path' , '' ) else 'empty' , 'name' : item_child . get ( 'name' , '' ), 'path' : ' {} / {} ' . format ( global_router . get ( 'path' , '' ), item_child . get ( 'path' , '' )), 'status' : False if item_child . get ( 'path' , '' ) in menu_path else True }) return items load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_menu/__init__.py def load ( self ): super () . load () self . register_extension_api () self . register_pages () self . listen_event ( core_event . EXCLUDE_PATHS , self . exclude_paths )","title":"ArkID Menu management plugin"},{"location":"System%20Plug%20-In/com_longgui_menu/#arkid-menu-management-plugin","text":"","title":"ArkID Menu management plugin"},{"location":"System%20Plug%20-In/com_longgui_menu/#features","text":"Can pass through this plug -in\uff0cAdjust Arkid's own menu\uff0cIncluding the display and hiding of existing menus","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_menu/#steps","text":"closure, Application management menu refresh page\uff0cView effect Open, Application management menu refresh page\uff0cView effect","title":"Steps"},{"location":"System%20Plug%20-In/com_longgui_menu/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_menu/#extension_root.com_longgui_menu.MenuExtension","text":"Source code in extension_root/com_longgui_menu/__init__.py class MenuExtension ( extension . Extension ): def load ( self ): super () . load () self . register_extension_api () self . register_pages () self . listen_event ( core_event . EXCLUDE_PATHS , self . exclude_paths ) def register_extension_api ( self ): self . menu_path = self . register_api ( '/menus/' , 'GET' , self . list_menus , response = List [ MenuItemOut ], tenant_path = False ) self . toogle_menu_activate_path = self . register_api ( '/menu/ {id} /toggle_activate/' , 'GET' , self . toggle_menu_active , tenant_path = False ) def exclude_paths ( self , event , ** kwargs ): menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) return menu_path def register_pages ( self ): from . import page as menu_page from api.v1.pages.platform_admin import router self . register_front_pages ([ menu_page . page , ]) self . register_front_routers ( menu_page . router , router ) @operation ( MenuListOut , roles = [ PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_menus ( self , request ): \"\"\" \u83b7\u53d6\u83dc\u5355 \"\"\" # \u76ee\u524d\u53ea\u8003\u86512\u7ea7\u83dc\u5355\u60c5\u51b5 global_routers = routers . _get_global_routers () menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) items = [] for global_router in global_routers : items . append ({ 'id' : global_router . get ( 'path' , '' ) if global_router . get ( 'path' , '' ) else 'empty' , 'name' : global_router . get ( 'name' , '' ), 'path' : global_router . get ( 'path' , '' ), 'status' : False if global_router . get ( 'path' , '' ) in menu_path else True }) item_children = global_router . get ( 'children' , []) for item_child in item_children : items . append ({ 'id' : item_child . get ( 'path' , '' ) if item_child . get ( 'path' , '' ) else 'empty' , 'name' : item_child . get ( 'name' , '' ), 'path' : ' {} / {} ' . format ( global_router . get ( 'path' , '' ), item_child . get ( 'path' , '' )), 'status' : False if item_child . get ( 'path' , '' ) in menu_path else True }) return items @operation ( roles = [ PLATFORM_ADMIN ]) def toggle_menu_active ( self , request , id : str ): if id == 'empty' : id = '' menu = Menu . valid_objects . filter ( path = id ) . first () if menu : menu . delete () else : menu = Menu () menu . path = id menu . save () return self . success ()","title":"MenuExtension"},{"location":"System%20Plug%20-In/com_longgui_menu/#extension_root.com_longgui_menu.MenuExtension.list_menus","text":"\u83b7\u53d6\u83dc\u5355 Source code in extension_root/com_longgui_menu/__init__.py @operation ( MenuListOut , roles = [ PLATFORM_ADMIN ]) @paginate ( CustomPagination ) def list_menus ( self , request ): \"\"\" \u83b7\u53d6\u83dc\u5355 \"\"\" # \u76ee\u524d\u53ea\u8003\u86512\u7ea7\u83dc\u5355\u60c5\u51b5 global_routers = routers . _get_global_routers () menus = Menu . valid_objects . all () menu_path = [] for menu in menus : menu_path . append ( menu . path ) items = [] for global_router in global_routers : items . append ({ 'id' : global_router . get ( 'path' , '' ) if global_router . get ( 'path' , '' ) else 'empty' , 'name' : global_router . get ( 'name' , '' ), 'path' : global_router . get ( 'path' , '' ), 'status' : False if global_router . get ( 'path' , '' ) in menu_path else True }) item_children = global_router . get ( 'children' , []) for item_child in item_children : items . append ({ 'id' : item_child . get ( 'path' , '' ) if item_child . get ( 'path' , '' ) else 'empty' , 'name' : item_child . get ( 'name' , '' ), 'path' : ' {} / {} ' . format ( global_router . get ( 'path' , '' ), item_child . get ( 'path' , '' )), 'status' : False if item_child . get ( 'path' , '' ) in menu_path else True }) return items","title":"list_menus()"},{"location":"System%20Plug%20-In/com_longgui_menu/#extension_root.com_longgui_menu.MenuExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_menu/__init__.py def load ( self ): super () . load () self . register_extension_api () self . register_pages () self . listen_event ( core_event . EXCLUDE_PATHS , self . exclude_paths )","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/","text":"ArkID User data synchronous plugin # Features # ServerThe mode implements the user and organization in Arkid through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server Create Arkid Synchronous server # Open Identity authentication source->SCIM data synchronization page\uff0c Click to create Configuration form parameter Create Arkid Synchronous client # Open Identity authentication source->SCIM data synchronization page Configuration form parameter Click to create The following configuration indicates that the timing synchronization task runs every 10 minutes Implementation # Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.Scim_sync.ScimSyncExtension Abstract method implementation: # ServerModel abstraction method # query_users query_groups ClientModel abstraction method # sync_groups sync_users Code # extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension ( ScimSyncExtension ) # Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py class ScimSyncArkIDExtension ( ScimSyncExtension ): def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () def _get_arkid_user_attrs ( self , user ): active = user . get ( \"active\" ) if active is None : active = True return { \"username\" : user . get ( \"userName\" , \"\" ), \"is_active\" : active , \"is_del\" : False , } def _get_arkid_user ( self , scim_user , tenant , sync_log ): scim_external_id = scim_user [ \"id\" ] username = scim_user [ \"userName\" ] arkid_user_attrs = self . _get_arkid_user_attrs ( scim_user ) user_lookup = { \"scim_external_id\" : scim_external_id , \"username\" : username , \"tenant\" : tenant , } # arkid_user, _ = User.objects.update_or_create( # defaults=arkid_user_attrs, **user_lookup # ) arkid_user = User . objects . filter ( ** user_lookup ) . first () if not arkid_user : user_lookup . update ( arkid_user_attrs ) arkid_user = User . objects . create ( ** user_lookup ) sync_log . users_created += 1 tenant . users . add ( arkid_user ) # \u66f4\u65b0arkid_user\u6240\u5c5e\u7684group arkid_user . usergroup_set . clear () for scim_group in scim_user . get ( \"groups\" , []): scim_group_id = scim_group . get ( \"value\" ) arkid_group = self . scim_arkid_group_map . get ( scim_group_id ) if arkid_group : arkid_user . usergroup_set . add ( arkid_group ) # arkid_user.save() return arkid_user def _get_arkid_group ( self , group , scim_arkid_map , tenant , sync_log ): scim_external_id = group [ \"id\" ] if \"id\" in group else group [ \"value\" ] if scim_external_id not in scim_arkid_map : group_lookup = { \"scim_external_id\" : scim_external_id , \"tenant\" : tenant } arkid_group = UserGroup . objects . filter ( ** group_lookup ) . first () if not arkid_group : arkid_group = UserGroup . objects . create ( ** group_lookup ) sync_log . groups_created += 1 else : arkid_group . is_del = False arkid_group . is_active = True scim_arkid_map [ scim_external_id ] = arkid_group return arkid_group else : return scim_arkid_map [ scim_external_id ] def _sync_group_attr ( self , arkid_group , scim_group ): arkid_group . name = scim_group . get ( \"displayName\" ) arkid_group . save () def delete_group_from_root ( self , root ): logger . info ( f \"Delete Group { root . name } Start\" ) children = root . children . all () if not children : root . delete () logger . info ( f \"delete group { root . name } success\" ) return for item in children : self . delete_group_from_root ( item ) root . delete () logger . info ( f \"delete group { root . name } success\" ) def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() def _get_scim_user ( self , arkid_user ): attr_map = { \"id\" : \"id\" , \"username\" : \"userName\" , \"is_active\" : \"active\" } scim_user = Core2EnterpriseUser ( userName = '' , groups = []) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_user , arkid_attr ) scim_path = Path . create ( scim_attr ) if ( scim_path . schema_identifier and scim_path . schema_identifier == SchemaIdentifiers . Core2EnterpriseUser ): compose_enterprise_extension ( scim_user , scim_path , value ) else : compose_core2_user ( scim_user , scim_path , value ) # \u751f\u6210\u7528\u6237\u6240\u5728\u7684\u7ec4 parent_groups = arkid_user . usergroup_set . filter ( is_del = 0 ) for grp in parent_groups : scim_group = ScimUserGroup () scim_group . value = grp . id scim_group . display = grp . name scim_user . groups . append ( scim_group ) return scim_user def _get_scim_group ( self , arkid_group ): members = UserGroup . valid_objects . filter ( parent = arkid_group ) attr_map = { \"id\" : \"id\" , \"name\" : \"displayName\" } scim_group = Core2Group ( displayName = '' ) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_group , arkid_attr ) scim_path = Path . create ( scim_attr ) compose_core2_group ( scim_group , scim_path , value ) for item in members : member = Member () member . value = item . id scim_group . members . append ( member ) return scim_group def _get_all_scim_users ( self , tenant ): scim_users = [] arkid_users = User . valid_objects . filter ( tenant = tenant ) for arkid_user in arkid_users : scim_user = self . _get_scim_user ( arkid_user ) scim_users . append ( scim_user ) return scim_users def _get_all_scim_groups ( self , tenant ): scim_groups = [] arkid_groups = UserGroup . valid_objects . filter ( tenant = tenant ) for arkid_group in arkid_groups : scim_group = self . _get_scim_group ( arkid_group ) scim_groups . append ( scim_group ) return scim_groups def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException () def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException () create_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () create_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () delete_group ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () delete_user ( self , request , resource_identifier , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () query_groups ( self , request , parameters , correlation_identifier ) # \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups query_users ( self , request , parameters , correlation_identifier ) # \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users replace_group ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () replace_user ( self , request , resource , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () retrieve_group ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () retrieve_user ( self , request , parameters , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () sync_groups ( self , groups , config , sync_log ) # \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count sync_users ( self , users , config , sync_log ) # \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() update_group ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException () update_user ( self , request , patch , correlation_identifier ) # \u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"ArkID User data synchronous plugin"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#arkid-user-data-synchronous-plugin","text":"","title":"ArkID User data synchronous plugin"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#features","text":"ServerThe mode implements the user and organization in Arkid through the standard SCIM interface ClientThe mode is implemented. Users and organizations in Server","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#create-arkid-synchronous-server","text":"Open Identity authentication source->SCIM data synchronization page\uff0c Click to create Configuration form parameter","title":"Create Arkid Synchronous server"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#create-arkid-synchronous-client","text":"Open Identity authentication source->SCIM data synchronization page Configuration form parameter Click to create The following configuration indicates that the timing synchronization task runs every 10 minutes","title":"Create Arkid Synchronous client"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#implementation","text":"Abstract methods to cover the base class of plug -in\uff0cSee ARKID.core.extension.Scim_sync.ScimSyncExtension","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#abstract-method-implementation","text":"","title":"Abstract method implementation:"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#servermodel-abstraction-method","text":"query_users query_groups","title":"ServerModel abstraction method"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#clientmodel-abstraction-method","text":"sync_groups sync_users","title":"ClientModel abstraction method"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension","text":"Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py class ScimSyncArkIDExtension ( ScimSyncExtension ): def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load () def _get_arkid_user_attrs ( self , user ): active = user . get ( \"active\" ) if active is None : active = True return { \"username\" : user . get ( \"userName\" , \"\" ), \"is_active\" : active , \"is_del\" : False , } def _get_arkid_user ( self , scim_user , tenant , sync_log ): scim_external_id = scim_user [ \"id\" ] username = scim_user [ \"userName\" ] arkid_user_attrs = self . _get_arkid_user_attrs ( scim_user ) user_lookup = { \"scim_external_id\" : scim_external_id , \"username\" : username , \"tenant\" : tenant , } # arkid_user, _ = User.objects.update_or_create( # defaults=arkid_user_attrs, **user_lookup # ) arkid_user = User . objects . filter ( ** user_lookup ) . first () if not arkid_user : user_lookup . update ( arkid_user_attrs ) arkid_user = User . objects . create ( ** user_lookup ) sync_log . users_created += 1 tenant . users . add ( arkid_user ) # \u66f4\u65b0arkid_user\u6240\u5c5e\u7684group arkid_user . usergroup_set . clear () for scim_group in scim_user . get ( \"groups\" , []): scim_group_id = scim_group . get ( \"value\" ) arkid_group = self . scim_arkid_group_map . get ( scim_group_id ) if arkid_group : arkid_user . usergroup_set . add ( arkid_group ) # arkid_user.save() return arkid_user def _get_arkid_group ( self , group , scim_arkid_map , tenant , sync_log ): scim_external_id = group [ \"id\" ] if \"id\" in group else group [ \"value\" ] if scim_external_id not in scim_arkid_map : group_lookup = { \"scim_external_id\" : scim_external_id , \"tenant\" : tenant } arkid_group = UserGroup . objects . filter ( ** group_lookup ) . first () if not arkid_group : arkid_group = UserGroup . objects . create ( ** group_lookup ) sync_log . groups_created += 1 else : arkid_group . is_del = False arkid_group . is_active = True scim_arkid_map [ scim_external_id ] = arkid_group return arkid_group else : return scim_arkid_map [ scim_external_id ] def _sync_group_attr ( self , arkid_group , scim_group ): arkid_group . name = scim_group . get ( \"displayName\" ) arkid_group . save () def delete_group_from_root ( self , root ): logger . info ( f \"Delete Group { root . name } Start\" ) children = root . children . all () if not children : root . delete () logger . info ( f \"delete group { root . name } success\" ) return for item in children : self . delete_group_from_root ( item ) root . delete () logger . info ( f \"delete group { root . name } success\" ) def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete() def _get_scim_user ( self , arkid_user ): attr_map = { \"id\" : \"id\" , \"username\" : \"userName\" , \"is_active\" : \"active\" } scim_user = Core2EnterpriseUser ( userName = '' , groups = []) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_user , arkid_attr ) scim_path = Path . create ( scim_attr ) if ( scim_path . schema_identifier and scim_path . schema_identifier == SchemaIdentifiers . Core2EnterpriseUser ): compose_enterprise_extension ( scim_user , scim_path , value ) else : compose_core2_user ( scim_user , scim_path , value ) # \u751f\u6210\u7528\u6237\u6240\u5728\u7684\u7ec4 parent_groups = arkid_user . usergroup_set . filter ( is_del = 0 ) for grp in parent_groups : scim_group = ScimUserGroup () scim_group . value = grp . id scim_group . display = grp . name scim_user . groups . append ( scim_group ) return scim_user def _get_scim_group ( self , arkid_group ): members = UserGroup . valid_objects . filter ( parent = arkid_group ) attr_map = { \"id\" : \"id\" , \"name\" : \"displayName\" } scim_group = Core2Group ( displayName = '' ) for arkid_attr , scim_attr in attr_map . items (): value = getattr ( arkid_group , arkid_attr ) scim_path = Path . create ( scim_attr ) compose_core2_group ( scim_group , scim_path , value ) for item in members : member = Member () member . value = item . id scim_group . members . append ( member ) return scim_group def _get_all_scim_users ( self , tenant ): scim_users = [] arkid_users = User . valid_objects . filter ( tenant = tenant ) for arkid_user in arkid_users : scim_user = self . _get_scim_user ( arkid_user ) scim_users . append ( scim_user ) return scim_users def _get_all_scim_groups ( self , tenant ): scim_groups = [] arkid_groups = UserGroup . valid_objects . filter ( tenant = tenant ) for arkid_group in arkid_groups : scim_group = self . _get_scim_group ( arkid_group ) scim_groups . append ( scim_group ) return scim_groups def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException () def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException () def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException () def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException () def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException () def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"ScimSyncArkIDExtension"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.create_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_group ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"create_group()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.create_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def create_user ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"create_user()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.delete_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7ec4\u7ec7ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_group ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException ()","title":"delete_group()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.delete_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource_identifier str \u7528\u6237ID required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def delete_user ( self , request , resource_identifier , correlation_identifier ): raise NotImplementedException ()","title":"delete_user()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def load ( self ): self . register_scim_sync_schema ( 'ArkID' , ClientConfig , ServerConfig ) super () . load ()","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.query_groups","text":"\u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2Group] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_groups ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7ec4\u7ec7\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2Group\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2Group]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7ec4\u7ec7\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : groups = self . _get_all_scim_groups ( request . tenant ) return groups","title":"query_groups()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.query_users","text":"\u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.query_parameters.QueryParameters Query\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Returns: Type Description List[Core2EnterpriseUser] \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def query_users ( self , request , parameters , correlation_identifier ): \"\"\" \u5c06ArkID\u4e2d\u7684\u7528\u6237\u8f6c\u6362\u6210scim_server\u4e2d\u7684\u7b26\u5408SCIM\u6807\u51c6\u7684Core2EnterpriseUser\u5bf9\u8c61 Args: request (HttpRequest): Django \u8bf7\u6c42 parameters (scim_server.protocol.query_parameters.QueryParameters): Query\u8bf7\u6c42\u5bf9\u8c61 correlation_identifier (str): \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 Returns: List[Core2EnterpriseUser]: \u8fd4\u56descim_server\u6a21\u5757\u4e2d\u7684\u6807\u51c6\u7528\u6237\u5bf9\u8c61\u5217\u8868 \"\"\" if not parameters . alternate_filters : all_users = self . _get_all_scim_users ( request . tenant ) return all_users","title":"query_users()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.replace_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_group.Core2Group SCIM\u7ec4\u7ec7\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_group ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"replace_group()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.replace_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required resource scim_server.schemas.core2_enterprise_user.Core2EnterpriseUser SCIM\u7528\u6237\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def replace_user ( self , request , resource , correlation_identifier ): raise NotImplementedException ()","title":"replace_user()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.retrieve_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_group ( self , request , parameters , correlation_identifier ): raise NotImplementedException ()","title":"retrieve_group()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.retrieve_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required parameters scim_server.protocol.resource_retrieval_parameters.ResourceRetrievalParamters Retrieve\u8bf7\u6c42\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def retrieve_user ( self , request , parameters , correlation_identifier ): raise NotImplementedException ()","title":"retrieve_user()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.sync_groups","text":"\u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Parameters: Name Type Description Default groups List SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_groups ( self , groups , config , sync_log ): \"\"\" \u904d\u5386groups\u4e2d\u7684SCIM \u7ec4\u7ec7\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7ec4\u7ec7\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d \u540c\u65f6\u904d\u5386\u6bcf\u4e2aSCIM \u7ec4\u7ec7\u4e2d\u7684members\uff0c\u540c\u6837\u7684\u65b9\u5f0f\u5728ArkID\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7ec4\u7ec7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7ec4\u7ec7\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7ec4\u7ec7 Args: groups (List): SCIM Server\u8fd4\u56de\u7684\u7ec4\u7ec7\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create groups ######\" ) tenant = config . tenant self . scim_arkid_group_map = {} for group in groups : parent_group = self . _get_arkid_group ( group , self . scim_arkid_group_map , tenant , sync_log ) self . _sync_group_attr ( parent_group , group ) for member in group . get ( \"members\" , []): sub_group = self . _get_arkid_group ( member , self . scim_arkid_group_map , tenant , sync_log ) sub_group . parent = parent_group logger . info ( \"###### delete groups ######\" ) groups_need_delete = ( UserGroup . valid_objects . filter ( tenant = config . tenant ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = self . scim_arkid_group_map . keys ()) ) logger . info ( f \"******* groups to be deleted: { groups_need_delete } ********\" ) root_groups = [] for grp in groups_need_delete : if ( grp . parent is None ) or ( grp . parent not in groups_need_delete ): root_groups . append ( grp ) for root in root_groups : self . delete_group_from_root ( root ) delete_count = len ( groups_need_delete ) # groups_need_delete.delete() sync_log . groups_deleted = delete_count","title":"sync_groups()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.sync_users","text":"\u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Parameters: Name Type Description Default users List SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 required config arkid.extension.models.TenantExtensionConfig Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def sync_users ( self , users , config , sync_log ): \"\"\" \u904d\u5386users\u4e2d\u7684SCIM \u7528\u6237\u8bb0\u5f55\uff0c\u9010\u4e00\u548cArkID\u4e2d\u7684\u7528\u6237\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5339\u914d\u7684\u5c31\u521b\u5efa\uff0c\u5b58\u5728\u5219\u66f4\u65b0\uff0c \u6700\u540e\u5220\u9664\u4ee5\u524d\u540c\u6b65\u5230ArkID\u4f46\u4e0d\u5728\u672c\u6b21\u540c\u6b65\u6570\u636e\u4e2d\u7684\u7528\u6237 Args: users (List): SCIM Server\u8fd4\u56de\u7684\u7528\u6237\u5217\u8868 config (arkid.extension.models.TenantExtensionConfig): Client\u6a21\u5f0f\u521b\u5efa\u7684\u914d\u7f6e \"\"\" logger . info ( \"###### update&create users ######\" ) tenant = config . tenant scim_user_ids = [] for user in users : scim_user_ids . append ( user [ \"id\" ]) try : arkid_user = self . _get_arkid_user ( user , tenant , sync_log ) except IntegrityError as e : logger . error ( e ) logger . error ( f \"sync user failed: { user } \" ) logger . info ( \"###### delete users ######\" ) users_need_delete = ( tenant . users . filter ( is_del = False ) . exclude ( scim_external_id = None ) . exclude ( scim_external_id__in = scim_user_ids ) ) logger . info ( f \"***** users to be deleted: { users_need_delete } ******\" ) for u in users_need_delete : u . usergroup_set . clear () u . delete () sync_log . users_deleted += 1 # users_need_delete.delete()","title":"sync_users()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.update_group","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_group ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"update_group()"},{"location":"System%20Plug%20-In/com_longgui_scim_sync_arkid/#extension_root.com_longgui_scim_sync_arkid.ScimSyncArkIDExtension.update_user","text":"\u62bd\u8c61\u65b9\u6cd5 Parameters: Name Type Description Default request HttpRequest Django \u8bf7\u6c42 required patch scim_server.service.patch.Patch Patch\u53c2\u6570\u5bf9\u8c61 required correlation_identifier str \u8bf7\u6c42\u552f\u4e00\u6807\u8bc6 required Source code in extension_root/com_longgui_scim_sync_arkid/__init__.py def update_user ( self , request , patch , correlation_identifier ): raise NotImplementedException ()","title":"update_user()"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/","text":"SMS plugin\uff1aAlibaba Cloud SMS # Features # Provide SMS service support for the platform\uff0cSMS service provider is Alibaba Cloud SMS\u3002 Configuration guide # Plug -in lease Plug -in tenant configuration Configuration of the plug -in Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the Alibaba Cloud SMS plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/02/lose.png) After the lease is completed\uff0cEnter the lease list\uff0cFind Alibaba Cloud SMS plug -in card\uff0cClick on the tenant configuration\uff0cConfigure related data * Domain name default.aliyuncs.com ![Plug -in tenant configuration] (https://S1.ax1x.com/2022/08/02/vEsDFe.md.png) After the tenant configuration is completed, return to the rental page\uff0cClick on Run on the Alibaba Cloud SMS plug -in card\uff0cClick new in the pop -up window\uff0cEnter the corresponding SMS template configuration ![Configuration during the plug -in] (https://S1.ax1x.com/2022/08/02/vEyZkD.md.png) ![Configuration during the plug -in] (https://S1.ax1x.com/2022/08/02/Make sure.md.png) * Notice\uff1a If you do not fill in the template parameter, the default is [\"code\"]\uff0cApplicable to SMS verification code Abstract method implementation # load send_sms Code # extension_root.com_longgui_sms_aliyun.AliyunSMSExtension ( SmsExtension ) # Source code in extension_root/com_longgui_sms_aliyun/__init__.py class AliyunSMSExtension ( SmsExtension ): def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map () load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_sms_aliyun/__init__.py def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () send_sms ( self , event , ** kwargs ) # \u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_sms_aliyun/__init__.py def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"SMS plugin\uff1aAlibaba Cloud SMS"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#sms-pluginalibaba-cloud-sms","text":"","title":"SMS plugin\uff1aAlibaba Cloud SMS"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#features","text":"Provide SMS service support for the platform\uff0cSMS service provider is Alibaba Cloud SMS\u3002","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#configuration-guide","text":"Plug -in lease Plug -in tenant configuration Configuration of the plug -in Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the Alibaba Cloud SMS plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/02/lose.png) After the lease is completed\uff0cEnter the lease list\uff0cFind Alibaba Cloud SMS plug -in card\uff0cClick on the tenant configuration\uff0cConfigure related data * Domain name default.aliyuncs.com ![Plug -in tenant configuration] (https://S1.ax1x.com/2022/08/02/vEsDFe.md.png) After the tenant configuration is completed, return to the rental page\uff0cClick on Run on the Alibaba Cloud SMS plug -in card\uff0cClick new in the pop -up window\uff0cEnter the corresponding SMS template configuration ![Configuration during the plug -in] (https://S1.ax1x.com/2022/08/02/vEyZkD.md.png) ![Configuration during the plug -in] (https://S1.ax1x.com/2022/08/02/Make sure.md.png) * Notice\uff1a If you do not fill in the template parameter, the default is [\"code\"]\uff0cApplicable to SMS verification code","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#abstract-method-implementation","text":"load send_sms","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension","text":"Source code in extension_root/com_longgui_sms_aliyun/__init__.py class AliyunSMSExtension ( SmsExtension ): def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load () def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"AliyunSMSExtension"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_sms_aliyun/__init__.py def load ( self ): self . register_settings_schema ( SettingsSchema ) self . register_config_schema ( ConfigSchema ) super () . load ()","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_sms_aliyun/#extension_root.com_longgui_sms_aliyun.AliyunSMSExtension.send_sms","text":"\u53d1\u9001\u77ed\u4fe1 Parameters: Name Type Description Default event Event \u4e8b\u4ef6 required Source code in extension_root/com_longgui_sms_aliyun/__init__.py def send_sms ( self , event , ** kwargs ): tenant = event . tenant config_id = event . data . pop ( \"config_id\" ) mobile = event . data . pop ( \"mobile\" ) template_params = {} settings = self . get_settings ( tenant ) settings = SimpleNamespace ( ** settings . settings ) config = self . get_config_by_id ( config_id ) . config for key in config . get ( \"template_params\" ,[ \"code\" ]): template_params [ key ] = event . data . get ( key , \"\" ) template_params = json . dumps ( template_params ) config = SimpleNamespace ( ** config ) aliyun_config = models . Config ( # \u60a8\u7684AccessKey ID, access_key_id = settings . access_key_id , # \u60a8\u7684AccessKey Secret, access_key_secret = settings . access_key_secret , # \u5730\u57dfID region_id = settings . region_id or None , # \u8bbf\u95ee\u7684\u57df\u540d endpoint = settings . endpoint or None , ) client = Client ( aliyun_config ) send_sms_request = dysmsapi_20170525_models . SendSmsRequest ( phone_numbers = mobile , sign_name = config . sign_name , template_code = config . template_code , template_param = template_params , sms_up_extend_code = config . sms_up_extend_code or None , out_id = config . out_id or None , ) res = client . send_sms ( send_sms_request ) return res . body . to_map ()","title":"send_sms()"},{"location":"System%20Plug%20-In/com_longgui_storage_local/","text":"Static file storage plug -in\uff1aLocal file storage # Features # Realize localized storage of static files\uff0cStorage path is default/data Notice\uff1a This is a platform plug -in\uff0cNeed a platform administrator permissions for configuration Configuration guide # Plug -in lease Platform configuration Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the local file storage plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/02/vELyVS.png) Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Platform plug -in\u3011, Find the local file storage plug -in card on the installed page\uff0cClick the plug -in configuration\uff0cConfigure file storage path ![Platform configuration] (https://S1.ax1x.com/2022/08/02/vELXx1.png) [![Platform configuration] (https://S1.ax1x.com/2022/08/03/widget.md.png)](https://imgtu.com/i/VVD6 and Implementation # When developing static file storage plug -in\uff0cNeed to inherit StorageExtentance,And re -load Save_The file and resolve method can be Abstract method implementation # load save_file resolve read Code # extension_root.com_longgui_storage_local.LocalStorageExtension ( StorageExtension ) # Source code in extension_root/com_longgui_storage_local/__init__.py class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs get_file ( self , request , tenant_id , file_name ) # \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 Source code in extension_root/com_longgui_storage_local/__init__.py def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) load ( self ) # \u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_storage_local/__init__.py def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () read ( self , tenant_id , file_url , ** kwargs ) # \u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default tenant_id str \u79df\u6237ID required file_url str \u6587\u4ef6\u94fe\u63a5 required Returns: Type Description bytes \u6587\u4ef6\u6570\u636e Source code in extension_root/com_longgui_storage_local/__init__.py def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs resolve ( self , f_key , tenant , * args , ** kwargs ) # \u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in extension_root/com_longgui_storage_local/__init__.py def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' save_file ( self , file , f_key , response = None , * args , ** kwargs ) # \u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in extension_root/com_longgui_storage_local/__init__.py def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk )","title":"Static file storage plug -in\uff1aLocal file storage"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#static-file-storage-plug-inlocal-file-storage","text":"","title":"Static file storage plug -in\uff1aLocal file storage"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#features","text":"Realize localized storage of static files\uff0cStorage path is default/data Notice\uff1a This is a platform plug -in\uff0cNeed a platform administrator permissions for configuration","title":"Features"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#configuration-guide","text":"Plug -in lease Platform configuration Enter through the menu bar on the left\u3010Tenant management\u3011->\u3010Plug -in management\u3011\uff0cFind the local file storage plug -in card in the plug -in lease page\uff0cClick to rent ![Plug -in rental] (https://S1.ax1x.com/2022/08/02/vELyVS.png) Enter through the menu bar on the left\u3010Platform management\u3011->\u3010Platform plug -in\u3011, Find the local file storage plug -in card on the installed page\uff0cClick the plug -in configuration\uff0cConfigure file storage path ![Platform configuration] (https://S1.ax1x.com/2022/08/02/vELXx1.png) [![Platform configuration] (https://S1.ax1x.com/2022/08/03/widget.md.png)](https://imgtu.com/i/VVD6 and","title":"Configuration guide"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#implementation","text":"When developing static file storage plug -in\uff0cNeed to inherit StorageExtentance,And re -load Save_The file and resolve method can be","title":"Implementation"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#abstract-method-implementation","text":"load save_file resolve read","title":"Abstract method implementation"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#code","text":"","title":"Code"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension","text":"Source code in extension_root/com_longgui_storage_local/__init__.py class LocalStorageExtension ( StorageExtension ): def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load () def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk ) def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } ' def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) ) def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs","title":"LocalStorageExtension"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension.get_file","text":"\u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 Source code in extension_root/com_longgui_storage_local/__init__.py def get_file ( self , request , tenant_id : str , file_name : str ): \"\"\" \u672c\u5730\u5b58\u50a8\u63d2\u4ef6\u83b7\u53d6\u6587\u4ef6 \"\"\" extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name return FileResponse ( open ( file_path , 'rb' ) )","title":"get_file()"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension.load","text":"\u62bd\u8c61\u65b9\u6cd5\uff0c\u63d2\u4ef6\u52a0\u8f7d\u7684\u5165\u53e3\u65b9\u6cd5 Source code in extension_root/com_longgui_storage_local/__init__.py def load ( self ): self . register_profile_schema ( ProfileSchema ) self . register_api ( \"/localstorage/ {file_name} \" , 'GET' , self . get_file , tenant_path = True , auth = None ) super () . load ()","title":"load()"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension.read","text":"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Parameters: Name Type Description Default tenant_id str \u79df\u6237ID required file_url str \u6587\u4ef6\u94fe\u63a5 required Returns: Type Description bytes \u6587\u4ef6\u6570\u636e Source code in extension_root/com_longgui_storage_local/__init__.py def read ( self , tenant_id , file_url , ** kwargs ): \"\"\"\u8bfb\u53d6\u6587\u4ef6\u6570\u636e Args: tenant_id (str): \u79df\u6237ID file_url (str): \u6587\u4ef6\u94fe\u63a5 Returns: bytes: \u6587\u4ef6\u6570\u636e \"\"\" host = get_app_config () . get_frontend_host () useless_part = f ' { host } /api/v1/tenant/ { tenant_id } /com_longgui_storage_local/localstorage/' file_name = file_url . replace ( useless_part , \"\" ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) file_path = Path ( storage_path ) / file_name rs = None with open ( file_path , \"rb\" ) as f : rs = f . read () return rs","title":"read()"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension.resolve","text":"\u751f\u6210\u6587\u4ef6\u94fe\u63a5 Parameters: Name Type Description Default f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required tenant Tenant \u79df\u6237 required Source code in extension_root/com_longgui_storage_local/__init__.py def resolve ( self , f_key , tenant , * args , ** kwargs ): host = get_app_config () . get_frontend_host () return f ' { host } /api/v1/tenant/ { tenant . id } /com_longgui_storage_local/localstorage/ { f_key } '","title":"resolve()"},{"location":"System%20Plug%20-In/com_longgui_storage_local/#extension_root.com_longgui_storage_local.LocalStorageExtension.save_file","text":"\u4fdd\u5b58\u6587\u4ef6 Parameters: Name Type Description Default file File \u6587\u4ef6\u5bf9\u8c61 required f_key str \u5b58\u50a8\u6587\u4ef6\u540d\u79f0 required Source code in extension_root/com_longgui_storage_local/__init__.py def save_file ( self , file , f_key , response = None , * args , ** kwargs ): print ( f_key ) extension = self . model storage_path = extension . profile . get ( 'storage_path' , '/data' ) p = Path ( storage_path ) / f_key if not p . parent . exists (): p . parent . mkdir ( parents = True ) with open ( p , 'wb' ) as fp : for chunk in file . chunks () if file else response : fp . write ( chunk )","title":"save_file()"}]}