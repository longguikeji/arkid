pipeline {
    agent any

    // global properties
    // - DEMO_HOST_IP
    // - DEMO_HOST_PORT
    // - DEV_HOST_IP
    // - DEV_HOST_PORT
    // - PROD_HOST_IP
    // - PROD_HOST_PORT
    // - DING_TALK_ENTRYPOINT
    environment {
        SSH_CREDENTIAL = 'devops-longguikeji-ssh'
    }

    parameters {
        string(name: "TARGET", description: "must be one of `demo`, `dev`, `prod`")
        string(name: "BE_VERSION", description: "tag of be image, allow blank")
        string(name: "FE_VERSION", description: "tag of fe image, allow blank")
    }
    stages {
        stage('pre') {
            steps{
                sendDingTalk("pending", "开始构建")
            }
        }
        stage("deploy") {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: "${env.SSH_CREDENTIAL}",
                    keyFileVariable: "SSH_KEY",
                    usernameVariable: "SSH_USER",
                )]) {
                    script {
                        if ("${params.TARGET}" == "demo") {
                            deployDemo()
                        } else if ("${params.TARGET}" == "dev") {
                            deployDev()
                        } else if ("${params.TARGET}" == "prod") {
                            deployProd()
                        } else {
                            error "TARGET must be one of `demo`, `dev`, `prod`"
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            sendDingTalk("success", "构建成功")
        }
        failure {
            sendDingTalk("failure", "构建失败")
        }
    }
}

def deployDemo(){
    sh """
    ssh -o "StrictHostKeyChecking=no" ${SSH_USER}@${env.DEMO_HOST_IP} -p${env.DEMO_HOST_PORT} -i ${SSH_KEY} \
        'make BE_VERSION=${params.BE_VERSION} FE_VERSION=${params.FE_VERSION} update-arkid-demo'
    """
}

def deployDev(){
    sh """
    ssh -o "StrictHostKeyChecking=no" ${SSH_USER}@${env.DEV_HOST_IP} -p${env.DEV_HOST_PORT} -i ${SSH_KEY} \
        'make BE_VERSION=${params.BE_VERSION} FE_VERSION=${params.FE_VERSION} update-arkid'
    """
}

def deployProd(){
    sh """
    ssh -o "StrictHostKeyChecking=no" ${SSH_USER}@${env.PROD_HOST_IP} -p${env.PROD_HOST_PORT} -i ${SSH_KEY} \
        'make BE_VERSION=${params.BE_VERSION} FE_VERSION=${params.FE_VERSION} update-arkid'
    """
}

def sendDingTalk(status, message) {
    if (status == "success") {
        img="https://s2.ax1x.com/2019/10/17/KEFSWd.png"
    } else if (status == "failure") {
        img="https://s2.ax1x.com/2019/10/17/KEFCQI.png"
    } else if (status == "pending") {
        img="https://s2.ax1x.com/2019/10/17/KEFkef.gif"
    } else {
        img=""
    }
    dingTalk([
        accessToken: "${env.DING_TALK_ENTRYPOINT}",
        jenkinsUrl: "${env.JENKINS_URL}",
        imageUrl: img,
        message: message,
    ])
}
